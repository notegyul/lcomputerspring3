22:19:26.730 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
22:19:26.731 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
22:19:26.731 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
22:19:27.924 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 1.409 seconds (JVM running for 1.798) 
22:19:36.880 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
22:19:36.894 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
22:19:36.907 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
22:19:36.907 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
22:19:36.908 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
22:19:36.909 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
22:19:36.909 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
22:19:36.910 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
22:19:36.910 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
22:19:36.910 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
22:19:36.911 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
22:19:36.911 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
22:19:36.911 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
22:19:36.912 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
22:19:36.912 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:19:36.912 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:19:36.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:19:36.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:19:36.914 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:19:36.915 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:19:36.915 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:19:36.916 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 212, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:19:36.917 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 210, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:19:36.917 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
22:19:42.818 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
22:19:42.819 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
22:19:42.821 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
22:19:42.822 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
22:19:42.823 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
22:19:42.823 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
22:19:42.824 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
22:19:42.825 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
22:19:42.825 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
22:19:42.825 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
22:19:42.919 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
22:19:42.919 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
22:19:42.920 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
22:19:42.921 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
22:19:42.921 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
22:19:42.921 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
22:19:42.922 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
22:19:42.922 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
22:19:42.922 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
22:19:42.922 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
22:19:42.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
22:19:42.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
22:19:42.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
22:19:42.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
22:19:42.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:19:42.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:19:42.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:19:42.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:19:42.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:19:42.925 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:19:42.925 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:19:42.925 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 212, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:19:42.925 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 210, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:19:42.925 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
22:19:49.148 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
22:19:49.149 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
22:19:49.160 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
22:19:49.160 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
22:19:49.163 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
22:19:49.164 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
22:19:49.164 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
22:19:49.165 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
22:19:49.165 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
22:19:49.165 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
22:19:49.166 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
22:19:49.166 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
22:19:49.166 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
22:19:49.166 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
22:19:49.167 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:19:49.167 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:19:49.167 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:19:49.167 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:19:49.167 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:19:49.167 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:19:49.168 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:19:49.168 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 212, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:19:49.169 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 210, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:19:49.169 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
22:19:50.312 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
22:19:50.314 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
22:19:50.324 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
22:19:50.324 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 100 
22:19:50.325 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
22:19:50.325 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
22:19:50.326 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
22:19:50.328 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
22:19:50.328 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
22:19:50.329 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
22:19:50.329 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
22:19:50.329 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
22:19:50.329 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
22:19:50.329 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
22:19:50.330 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
22:19:50.330 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
22:19:50.330 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
22:19:50.330 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
22:19:50.330 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
22:19:50.330 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:19:50.331 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:19:50.331 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:19:50.331 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:19:50.331 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:19:50.332 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:19:50.332 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:19:50.332 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 212, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:19:50.333 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 210, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:19:50.333 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
22:19:50.333 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
22:19:52.275 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
22:19:52.276 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 279(Integer) 
22:19:52.278 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
22:19:52.279 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app, 279, 1, 0 
22:19:52.279 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
22:19:52.280 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
22:19:52.280 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
22:19:52.282 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
22:19:52.282 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
22:19:52.282 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
22:19:52.282 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
22:19:54.656 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
22:19:54.658 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 279(Integer) 
22:19:54.660 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
22:19:54.661 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app, 279, 1, 0 
22:19:54.661 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
22:19:54.662 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
22:19:54.662 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
22:19:54.663 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
22:19:54.663 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
22:19:54.663 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
22:19:54.663 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
22:20:05.856 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
22:20:05.862 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 왈아(String), 토미가 답글 단다.(String), null, null, 279(Integer), 1(Integer), 0(Integer) 
22:20:05.873 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
22:23:12.666 WARN  --- [Thread-5] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
22:23:12.728 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
22:23:12.728 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
22:23:12.728 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
22:23:13.077 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.375 seconds (JVM running for 226.951) 
22:23:16.962 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
22:23:16.963 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 279(Integer) 
22:23:16.965 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
22:23:16.965 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app, 279, 1, 0 
22:23:16.966 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
22:23:16.967 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
22:23:16.967 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
22:23:16.968 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
22:23:16.968 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
22:23:16.969 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
22:23:16.969 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
22:23:18.078 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
22:23:18.081 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
22:23:18.089 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
22:23:18.089 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 101 
22:23:18.090 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
22:23:18.092 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
22:23:18.093 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
22:23:18.095 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
22:23:18.095 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 280, 왈아, 토미가 답글 단다., null, 2023-06-20 22:20:05, null 
22:23:18.095 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
22:23:18.096 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
22:23:18.096 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
22:23:18.096 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
22:23:18.096 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
22:23:18.096 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
22:23:18.096 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
22:23:18.096 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
22:23:18.097 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
22:23:18.097 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
22:23:18.097 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
22:23:18.097 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:23:18.097 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:23:18.098 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:23:18.099 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:23:18.099 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:23:18.099 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:23:18.099 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:23:18.100 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 212, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:23:18.100 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
22:23:18.100 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
22:23:35.878 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
22:23:35.879 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 279(Integer) 
22:23:35.882 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
22:23:35.882 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app, 279, 1, 0 
22:23:35.882 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
22:23:35.883 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
22:23:35.884 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
22:23:35.885 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
22:23:35.885 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
22:23:35.885 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
22:23:35.885 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
22:23:47.767 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
22:23:47.770 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 왈아22(String), 토미가 또 답글 단다.(String), null, null, 279(Integer), 1(Integer), 0(Integer) 
22:23:47.776 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
22:23:53.415 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
22:23:53.417 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
22:23:53.418 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
22:23:53.418 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 281, 왈아22, 토미가 또 답글 단다., null, 2023-06-20 22:23:47, null 
22:23:53.419 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 280, 왈아, 토미가 답글 단다., null, 2023-06-20 22:20:05, null 
22:23:53.421 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
22:23:53.421 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
22:23:53.421 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
22:23:53.421 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
22:23:53.421 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
22:23:53.421 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
22:23:53.422 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
22:23:53.422 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
22:23:53.422 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
22:23:53.422 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
22:23:53.423 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
22:23:53.423 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:23:53.423 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:23:53.423 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:23:53.424 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:23:53.424 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:23:53.424 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:23:53.424 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:23:53.424 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
22:23:56.011 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
22:23:56.012 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
22:23:56.022 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
22:23:56.022 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 102 
22:23:56.022 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
22:23:56.023 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
22:23:56.023 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
22:23:56.024 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
22:23:56.024 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 281, 왈아22, 토미가 또 답글 단다., null, 2023-06-20 22:23:47, null 
22:23:56.024 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 280, 왈아, 토미가 답글 단다., null, 2023-06-20 22:20:05, null 
22:23:56.024 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
22:23:56.024 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
22:23:56.024 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
22:23:56.024 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
22:23:56.025 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
22:23:56.025 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
22:23:56.025 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
22:23:56.025 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
22:23:56.025 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
22:23:56.025 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
22:23:56.025 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
22:23:56.025 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:23:56.025 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:23:56.025 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:23:56.025 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:23:56.025 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:23:56.025 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:23:56.026 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:23:56.026 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
22:23:56.026 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
22:26:20.116 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
22:26:20.117 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 281(Integer) 
22:26:20.122 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
22:26:20.123 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 281, 왈아22, 토미가 또 답글 단다., null, 2023-06-20 22:23:47, null, 279, 2, 1 
22:26:20.123 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
22:26:20.124 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
22:26:20.124 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
22:26:20.126 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
22:26:20.126 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
22:26:20.127 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
22:26:20.127 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
22:26:31.986 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
22:26:31.987 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 토미야(String), 이건 답답글이다.(String), null, null, 279(Integer), 2(Integer), 1(Integer) 
22:26:32.001 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
22:26:35.724 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
22:26:35.725 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
22:26:35.740 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
22:26:35.741 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 103 
22:26:35.741 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
22:26:35.741 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
22:26:35.741 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
22:26:35.742 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
22:26:35.742 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 282, 토미야, 이건 답답글이다., null, 2023-06-20 22:26:31, null 
22:26:35.742 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 281, 왈아22, 토미가 또 답글 단다., null, 2023-06-20 22:23:47, null 
22:26:35.742 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 280, 왈아, 토미가 답글 단다., null, 2023-06-20 22:20:05, null 
22:26:35.742 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
22:26:35.742 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
22:26:35.742 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
22:26:35.742 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
22:26:35.742 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
22:26:35.742 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
22:26:35.742 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
22:26:35.742 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
22:26:35.743 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
22:26:35.743 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
22:26:35.743 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
22:26:35.743 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:26:35.743 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:26:35.743 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:26:35.743 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:26:35.743 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:26:35.743 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:26:35.743 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
22:26:35.743 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
22:29:20.282 WARN  --- [Thread-7] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-2 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
22:29:20.347 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
22:29:20.347 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
22:29:20.347 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
22:29:20.533 WARN  --- [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'boardController' defined in file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/com/lcomputerspring3/example/controller/BoardController.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.lcomputerspring3.example.controller.BoardController]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	Syntax error, insert "}" to complete ClassBody
 
22:29:20.545 ERROR --- [restartedMain] o.s.boot.SpringApplication : Application run failed 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'boardController' defined in file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/com/lcomputerspring3/example/controller/BoardController.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.lcomputerspring3.example.controller.BoardController]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	Syntax error, insert "}" to complete ClassBody

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.lcomputerspring3.example.Lcomputerspring3Application.main(Lcomputerspring3Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.lcomputerspring3.example.controller.BoardController]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	Syntax error, insert "}" to complete ClassBody

	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326)
	... 22 common frames omitted
Caused by: java.lang.Error: Unresolved compilation problem: 
	Syntax error, insert "}" to complete ClassBody

	at com.lcomputerspring3.example.controller.BoardController.<init>(BoardController.java:165)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 24 common frames omitted
22:32:10.684 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
22:32:10.687 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
22:32:10.687 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
22:32:11.020 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.377 seconds (JVM running for 764.894) 
22:55:54.595 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
22:55:54.595 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
22:55:54.595 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
22:55:54.932 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.365 seconds (JVM running for 2188.811) 
22:56:15.127 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
22:56:15.127 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
22:56:15.129 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
22:56:15.129 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
22:56:15.129 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
22:56:15.130 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.writePost : ==>  Preparing: INSERT INTO lc_board( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, 1, 1, 0 ) 
22:56:15.131 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.writePost : ==> Parameters: @AuthenticationPrincial(String), 니가 먼데~~~(String), 박토미(String), tommy(String) 
22:56:15.134 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.writePost : <==    Updates: 1 
22:56:15.135 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.B.writePostGroupUpdate : ==>  Preparing: UPDATE lc_board SET b_group = last_insert_id() WHERE b_id = last_insert_id() 
22:56:15.135 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.B.writePostGroupUpdate : ==> Parameters:  
22:56:15.136 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.B.writePostGroupUpdate : <==    Updates: 1 
22:56:15.136 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 등록 성공! 
22:56:16.785 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
22:56:16.786 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
22:56:16.794 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
22:56:16.794 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 104 
22:56:16.795 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
22:56:16.796 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
22:56:16.796 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
22:56:16.798 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
22:56:16.798 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
22:56:16.798 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 282, 토미야, 이건 답답글이다., null, 2023-06-20 22:26:31, null 
22:56:16.798 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 281, 왈아22, 토미가 또 답글 단다., null, 2023-06-20 22:23:47, null 
22:56:16.799 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 280, 왈아, 토미가 답글 단다., null, 2023-06-20 22:20:05, null 
22:56:16.799 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
22:56:16.799 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
22:56:16.799 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
22:56:16.799 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
22:56:16.799 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
22:56:16.799 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
22:56:16.799 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
22:56:16.799 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
22:56:16.799 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
22:56:16.800 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
22:56:16.800 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
22:56:16.800 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:56:16.804 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:56:16.806 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:56:16.806 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:56:16.807 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:56:16.807 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
22:56:16.807 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
22:56:20.079 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
22:56:20.080 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 283(Integer) 
22:56:20.083 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
22:56:20.083 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy, 283, 1, 0 
22:56:20.085 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
22:56:20.090 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
22:56:20.091 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
22:56:20.095 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
22:56:20.096 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
22:56:20.096 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
22:56:20.097 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
22:56:22.028 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
22:56:22.029 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
22:56:22.046 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
22:56:22.046 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 104 
22:56:22.046 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
22:56:22.046 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
22:56:22.046 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
22:56:22.047 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
22:56:22.047 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
22:56:22.048 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 282, 토미야, 이건 답답글이다., null, 2023-06-20 22:26:31, null 
22:56:22.048 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 281, 왈아22, 토미가 또 답글 단다., null, 2023-06-20 22:23:47, null 
22:56:22.048 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 280, 왈아, 토미가 답글 단다., null, 2023-06-20 22:20:05, null 
22:56:22.048 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
22:56:22.048 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
22:56:22.048 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
22:56:22.048 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
22:56:22.048 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
22:56:22.048 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
22:56:22.048 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
22:56:22.048 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
22:56:22.048 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
22:56:22.049 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
22:56:22.049 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
22:56:22.049 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:56:22.049 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:56:22.049 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:56:22.049 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:56:22.049 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:56:22.049 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
22:56:22.049 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
22:58:14.744 WARN  --- [Thread-18] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-3 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
22:58:14.814 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
22:58:14.814 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
22:58:14.814 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
22:58:15.128 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.34 seconds (JVM running for 2329.007) 
22:58:19.321 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
22:58:19.324 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 283(Integer) 
22:58:19.326 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
22:58:19.326 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy, 283, 1, 0 
22:58:19.327 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
22:58:19.328 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
22:58:19.328 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
22:58:19.328 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
22:58:19.328 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
22:58:19.329 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
22:58:19.329 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
22:58:34.332 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
22:58:34.334 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 토미가 토미에게(String), model 니가 뭔데~~~(String), null, null, 283(Integer), 1(Integer), 0(Integer) 
22:58:34.340 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
22:58:38.687 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
22:58:38.687 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
22:58:38.700 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
22:58:38.700 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 102 
22:58:38.701 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
22:58:38.701 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
22:58:38.702 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
22:58:38.702 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
22:58:38.702 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 284, 토미가 토미에게, model 니가 뭔데~~~, null, 2023-06-20 22:58:34, null 
22:58:38.702 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
22:58:38.703 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
22:58:38.703 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
22:58:38.703 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
22:58:38.703 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
22:58:38.703 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
22:58:38.703 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
22:58:38.703 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
22:58:38.703 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
22:58:38.703 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
22:58:38.703 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
22:58:38.703 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
22:58:38.703 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:58:38.704 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:58:38.704 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:58:38.705 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:58:38.705 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:58:38.705 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:58:38.705 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:58:38.705 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
22:58:38.705 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
22:58:44.717 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
22:58:44.718 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
22:58:44.732 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
22:58:44.732 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 102 
22:58:44.732 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
22:58:44.732 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
22:58:44.733 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
22:58:44.734 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
22:58:44.734 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 284, 토미가 토미에게, model 니가 뭔데~~~, null, 2023-06-20 22:58:34, null 
22:58:44.735 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
22:58:44.735 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
22:58:44.735 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
22:58:44.735 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
22:58:44.735 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
22:58:44.735 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
22:58:44.735 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
22:58:44.736 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
22:58:44.736 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
22:58:44.736 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
22:58:44.736 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
22:58:44.736 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
22:58:44.736 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:58:44.737 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:58:44.737 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:58:44.737 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:58:44.737 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:58:44.737 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:58:44.737 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:58:44.737 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
22:58:44.737 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
22:58:48.591 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
22:58:48.592 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 284(Integer) 
22:58:48.594 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
22:58:48.595 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 284, 토미가 토미에게, model 니가 뭔데~~~, null, 2023-06-20 22:58:34, null, 283, 2, 1 
22:58:48.595 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
22:58:48.596 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
22:58:48.597 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
22:58:48.605 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
22:58:48.606 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
22:58:48.606 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
22:58:48.606 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
22:58:49.790 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
22:58:49.792 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
22:58:49.814 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
22:58:49.814 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 102 
22:58:49.814 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
22:58:49.815 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
22:58:49.815 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
22:58:49.816 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
22:58:49.816 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 284, 토미가 토미에게, model 니가 뭔데~~~, null, 2023-06-20 22:58:34, null 
22:58:49.816 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
22:58:49.816 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:58:49.817 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
22:58:49.818 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
22:58:49.818 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
22:58:49.818 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
22:58:49.818 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
22:58:49.818 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
23:00:07.582 WARN  --- [Thread-22] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-4 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
23:00:07.656 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:00:07.656 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:00:07.656 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:00:07.966 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.338 seconds (JVM running for 2441.845) 
23:00:14.398 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:00:14.399 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:00:14.415 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:00:14.415 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 102 
23:00:14.416 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:00:14.417 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:00:14.417 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:00:14.418 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:00:14.418 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 284, 토미가 토미에게, model 니가 뭔데~~~, null, 2023-06-20 22:58:34, null 
23:00:14.419 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:00:14.419 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:00:14.419 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:00:14.419 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:00:14.419 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:00:14.419 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:00:14.419 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:00:14.419 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:00:14.420 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:00:14.420 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:00:14.420 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:00:14.420 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:00:14.420 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:00:14.420 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:00:14.421 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:00:14.421 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
23:00:14.422 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:00:14.422 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:00:14.422 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:00:14.422 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:00:14.422 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
23:00:18.197 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:00:18.197 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:00:18.217 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:00:18.218 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 102 
23:00:18.218 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:00:18.219 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:00:18.219 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:00:18.220 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:00:18.221 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 284, 토미가 토미에게, model 니가 뭔데~~~, null, 2023-06-20 22:58:34, null 
23:00:18.221 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:00:18.221 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:00:18.221 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:00:18.221 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:00:18.221 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:00:18.221 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:00:18.221 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:00:18.221 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:00:18.222 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:00:18.222 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:00:18.222 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:00:18.222 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:00:18.222 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:00:18.222 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:00:18.222 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:00:18.222 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
23:00:18.222 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:00:18.222 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:00:18.222 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:00:18.222 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:00:18.222 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
23:00:19.866 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:00:19.867 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 284(Integer) 
23:00:19.870 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:00:19.871 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 284, 토미가 토미에게, model 니가 뭔데~~~, null, 2023-06-20 22:58:34, null, 283, 2, 1 
23:00:19.872 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:00:19.874 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:00:19.874 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:00:19.879 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:00:19.879 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:00:19.879 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:00:19.880 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:00:22.473 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:00:22.474 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:00:22.499 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:00:22.499 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 102 
23:00:22.499 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:00:22.499 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:00:22.500 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 284, 토미가 토미에게, model 니가 뭔데~~~, null, 2023-06-20 22:58:34, null 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:00:22.501 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:00:22.502 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:00:22.502 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:00:22.502 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
23:00:22.502 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:00:22.502 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:00:22.502 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:00:22.502 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:00:22.502 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
23:01:07.365 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:01:07.366 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:01:07.369 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:01:07.369 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:01:07.370 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:01:07.371 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.writePost : ==>  Preparing: INSERT INTO lc_board( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, 1, 1, 0 ) 
23:01:07.371 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.writePost : ==> Parameters: 내 이름은(String), 박토미(String), 박토미(String), tommy(String) 
23:01:07.378 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.writePost : <==    Updates: 1 
23:01:07.378 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.B.writePostGroupUpdate : ==>  Preparing: UPDATE lc_board SET b_group = last_insert_id() WHERE b_id = last_insert_id() 
23:01:07.378 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.B.writePostGroupUpdate : ==> Parameters:  
23:01:07.379 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.B.writePostGroupUpdate : <==    Updates: 1 
23:01:07.380 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 등록 성공! 
23:01:08.850 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:01:08.851 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:01:08.874 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:01:08.875 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 103 
23:01:08.875 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:01:08.875 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:01:08.876 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:01:08.877 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:01:08.877 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:01:08.878 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 284, 토미가 토미에게, model 니가 뭔데~~~, null, 2023-06-20 22:58:34, null 
23:01:08.878 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:01:08.878 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:01:08.878 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:01:08.878 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:01:08.878 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:01:08.878 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:01:08.878 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:01:08.878 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:01:08.878 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:01:08.879 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:01:08.879 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:01:08.879 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:01:08.879 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:01:08.879 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:01:08.879 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:01:08.879 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
23:01:08.879 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:01:08.879 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:01:08.879 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:01:08.879 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
23:01:11.742 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:01:11.743 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 285(Integer) 
23:01:11.749 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:01:11.749 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy, 285, 1, 0 
23:01:11.750 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:01:11.751 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:01:11.752 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:01:11.757 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:01:11.758 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:01:11.758 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:01:11.758 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:01:15.351 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:01:15.351 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:01:15.373 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:01:15.373 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 103 
23:01:15.373 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:01:15.373 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:01:15.374 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:01:15.375 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:01:15.375 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:01:15.375 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 284, 토미가 토미에게, model 니가 뭔데~~~, null, 2023-06-20 22:58:34, null 
23:01:15.375 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:01:15.376 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:01:15.377 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
23:01:15.377 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:01:15.377 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:01:15.377 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:01:15.377 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
23:01:16.296 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:01:16.298 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 284(Integer) 
23:01:16.300 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:01:16.301 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 284, 토미가 토미에게, model 니가 뭔데~~~, null, 2023-06-20 22:58:34, null, 283, 2, 1 
23:01:16.302 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:01:16.302 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:01:16.303 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:01:16.306 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:01:16.306 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:01:16.307 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:01:16.307 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:01:17.573 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:01:17.573 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:01:17.593 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:01:17.593 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 103 
23:01:17.594 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:01:17.594 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:01:17.594 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:01:17.596 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:01:17.596 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:01:17.596 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 284, 토미가 토미에게, model 니가 뭔데~~~, null, 2023-06-20 22:58:34, null 
23:01:17.596 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:01:17.596 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:01:17.597 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
23:01:17.598 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:01:17.598 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:01:17.598 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:01:17.598 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
23:01:53.703 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:01:53.706 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:01:53.728 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:01:53.728 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 102 
23:01:53.728 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:01:53.728 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:01:53.729 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:01:53.730 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:01:53.730 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:01:53.730 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:01:53.731 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:01:53.731 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:01:53.731 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
23:02:28.814 WARN  --- [Thread-26] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-5 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
23:02:28.884 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:02:28.884 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:02:28.884 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:02:29.187 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.33 seconds (JVM running for 2583.066) 
23:03:01.232 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:03:01.233 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:03:01.235 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:03:01.235 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:03:01.236 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:03:01.236 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.writePost : ==>  Preparing: INSERT INTO lc_board( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, 1, 1, 0 ) 
23:03:01.237 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.writePost : ==> Parameters: 토미의 답글 테스트#1(String), 답글#1(String), 박토미(String), tommy(String) 
23:03:01.239 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.writePost : <==    Updates: 1 
23:03:01.240 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.B.writePostGroupUpdate : ==>  Preparing: UPDATE lc_board SET b_group = last_insert_id() WHERE b_id = last_insert_id() 
23:03:01.240 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.B.writePostGroupUpdate : ==> Parameters:  
23:03:01.241 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.B.writePostGroupUpdate : <==    Updates: 1 
23:03:01.241 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 등록 성공! 
23:03:02.284 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:03:02.285 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:03:02.298 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:03:02.298 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 103 
23:03:02.298 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:03:02.299 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:03:02.299 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:03:02.300 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:03:02.301 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:03:02.302 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:03:02.303 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:03:02.303 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
23:03:02.303 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:03:02.303 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:03:02.303 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:03:02.303 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
23:03:29.368 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:03:29.369 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:03:29.373 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:03:29.373 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:03:29.374 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:03:29.375 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.writePost : ==>  Preparing: INSERT INTO lc_board( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, 1, 1, 0 ) 
23:03:29.375 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.writePost : ==> Parameters: 토미의 답글 테스트#2(String), 답글#2(String), 박토미(String), tommy(String) 
23:03:29.387 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.writePost : <==    Updates: 1 
23:03:29.387 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.B.writePostGroupUpdate : ==>  Preparing: UPDATE lc_board SET b_group = last_insert_id() WHERE b_id = last_insert_id() 
23:03:29.388 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.B.writePostGroupUpdate : ==> Parameters:  
23:03:29.389 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.B.writePostGroupUpdate : <==    Updates: 1 
23:03:29.389 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 등록 성공! 
23:03:30.506 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:03:30.507 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:03:30.524 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:03:30.524 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 104 
23:03:30.524 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:03:30.524 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:03:30.524 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:03:30.525 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:03:30.526 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:03:30.526 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:03:30.526 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:03:30.526 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:03:30.526 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:03:30.526 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
23:03:30.527 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:03:30.527 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:03:30.527 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
23:03:42.409 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:03:42.411 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:03:42.413 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:03:42.414 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:03:42.414 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:03:42.414 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.writePost : ==>  Preparing: INSERT INTO lc_board( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, 1, 1, 0 ) 
23:03:42.416 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.writePost : ==> Parameters: 토미의 답글 테스트#3(String), 답글#3 사실 원글임(String), 박토미(String), tommy(String) 
23:03:42.425 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.writePost : <==    Updates: 1 
23:03:42.426 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.B.writePostGroupUpdate : ==>  Preparing: UPDATE lc_board SET b_group = last_insert_id() WHERE b_id = last_insert_id() 
23:03:42.426 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.B.writePostGroupUpdate : ==> Parameters:  
23:03:42.429 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.B.writePostGroupUpdate : <==    Updates: 1 
23:03:42.429 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 등록 성공! 
23:03:43.680 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:03:43.683 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:03:43.707 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:03:43.707 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 105 
23:03:43.707 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:03:43.708 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:03:43.708 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:03:43.710 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:03:43.711 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:03:43.711 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:03:43.711 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
23:03:43.711 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:03:43.711 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
23:03:46.883 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:03:46.884 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 287(Integer) 
23:03:46.887 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:03:46.887 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy, 287, 1, 0 
23:03:46.887 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:03:46.889 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:03:46.889 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:03:46.892 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:03:46.893 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:03:46.893 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:03:46.894 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:04:23.793 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
23:04:23.795 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 답글#1(String), 답글#1 - 답글테스트#2번글의 답글#1(String), null, null, 287(Integer), 1(Integer), 0(Integer) 
23:04:23.809 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:04:24.758 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:04:24.763 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:04:24.765 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:04:24.765 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 106 
23:04:24.765 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:04:24.766 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:04:24.766 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:04:24.767 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:04:24.767 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 289, 답글#1, 답글#1 - 답글테스트#2번글의 답글#1, null, 2023-06-20 23:04:23, null 
23:04:24.767 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:04:24.767 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:04:24.767 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:04:24.767 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:04:24.767 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:04:24.767 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:04:24.768 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:04:24.768 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:04:24.768 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:04:24.768 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:04:24.768 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:04:24.768 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:04:24.768 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:04:24.768 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:04:24.768 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:04:24.768 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:04:24.768 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:04:24.768 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:04:24.768 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
23:04:24.768 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:04:24.768 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
23:04:26.999 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:04:27.001 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 287(Integer) 
23:04:27.003 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:04:27.003 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy, 287, 1, 0 
23:04:27.003 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:04:27.004 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:04:27.005 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:04:27.007 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:04:27.007 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:04:27.007 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:04:27.009 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:04:40.235 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
23:04:40.237 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 답글#2(String), 답글테스트#2의 답글#2(String), null, null, 287(Integer), 1(Integer), 0(Integer) 
23:04:40.243 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:04:41.501 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:04:41.502 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:04:41.523 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:04:41.524 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 107 
23:04:41.524 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:04:41.524 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:04:41.525 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:04:41.526 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:04:41.526 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 290, 답글#2, 답글테스트#2의 답글#2, null, 2023-06-20 23:04:40, null 
23:04:41.526 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 289, 답글#1, 답글#1 - 답글테스트#2번글의 답글#1, null, 2023-06-20 23:04:23, null 
23:04:41.526 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:04:41.526 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:04:41.527 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:04:41.528 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 219, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
23:04:41.528 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:04:41.528 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
23:04:42.850 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:04:42.851 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 287(Integer) 
23:04:42.853 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:04:42.854 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy, 287, 1, 0 
23:04:42.854 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:04:42.854 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:04:42.860 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:04:42.868 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:04:42.868 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:04:42.868 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:04:42.869 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:04:54.066 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
23:04:54.066 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 답글#3(String), 답글테스트#2의 답글#3(String), null, null, 287(Integer), 1(Integer), 0(Integer) 
23:04:54.084 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:04:55.333 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:04:55.334 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:04:55.349 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:04:55.349 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 108 
23:04:55.349 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:04:55.350 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:04:55.350 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 291, 답글#3, 답글테스트#2의 답글#3, null, 2023-06-20 23:04:54, null 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 290, 답글#2, 답글테스트#2의 답글#2, null, 2023-06-20 23:04:40, null 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 289, 답글#1, 답글#1 - 답글테스트#2번글의 답글#1, null, 2023-06-20 23:04:23, null 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:04:55.352 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:04:55.353 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:04:55.353 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:04:55.353 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
23:05:11.306 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:05:11.307 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 290(Integer) 
23:05:11.309 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:05:11.310 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 290, 답글#2, 답글테스트#2의 답글#2, null, 2023-06-20 23:04:40, null, 287, 2, 1 
23:05:11.310 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:05:11.311 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:05:11.311 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:05:11.323 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:05:11.323 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:05:11.324 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:05:11.324 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:05:16.548 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:05:16.549 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:05:16.569 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:05:16.569 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 108 
23:05:16.569 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:05:16.570 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:05:16.570 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:05:16.571 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:05:16.571 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 291, 답글#3, 답글테스트#2의 답글#3, null, 2023-06-20 23:04:54, null 
23:05:16.571 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 290, 답글#2, 답글테스트#2의 답글#2, null, 2023-06-20 23:04:40, null 
23:05:16.571 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 289, 답글#1, 답글#1 - 답글테스트#2번글의 답글#1, null, 2023-06-20 23:04:23, null 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:05:16.572 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:05:16.573 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:05:16.573 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
23:06:17.730 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:06:17.731 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 290(Integer) 
23:06:17.733 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:06:17.734 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 290, 답글#2, 답글테스트#2의 답글#2, null, 2023-06-20 23:04:40, null, 287, 2, 1 
23:06:17.734 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:06:17.735 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:06:17.735 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:06:17.741 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:06:17.741 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:06:17.741 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:06:17.741 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:06:28.402 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
23:06:28.405 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 답글#2의 답답글#1(String), ㅋ(String), null, null, 287(Integer), 2(Integer), 1(Integer) 
23:06:28.411 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:06:29.825 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:06:29.826 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:06:29.846 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:06:29.846 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 109 
23:06:29.846 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:06:29.846 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:06:29.847 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:06:29.848 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:06:29.848 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 292, 답글#2의 답답글#1, ㅋ, null, 2023-06-20 23:06:28, null 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 291, 답글#3, 답글테스트#2의 답글#3, null, 2023-06-20 23:04:54, null 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 290, 답글#2, 답글테스트#2의 답글#2, null, 2023-06-20 23:04:40, null 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 289, 답글#1, 답글#1 - 답글테스트#2번글의 답글#1, null, 2023-06-20 23:04:23, null 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:06:29.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:06:29.849 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:06:29.849 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
23:06:52.718 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:06:52.719 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 290(Integer) 
23:06:52.723 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:06:52.724 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 290, 답글#2, 답글테스트#2의 답글#2, null, 2023-06-20 23:04:40, null, 287, 2, 1 
23:06:52.724 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:06:52.726 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:06:52.727 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:06:52.731 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:06:52.731 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:06:52.731 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:06:52.732 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:07:02.958 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
23:07:02.959 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 답글#2의 답답글#2(String), ㅋ(String), null, null, 287(Integer), 2(Integer), 1(Integer) 
23:07:02.966 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:07:03.890 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:07:03.891 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:07:03.906 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:07:03.906 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 110 
23:07:03.906 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:07:03.907 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:07:03.907 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:07:03.908 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:07:03.908 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 293, 답글#2의 답답글#2, ㅋ, null, 2023-06-20 23:07:02, null 
23:07:03.908 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 292, 답글#2의 답답글#1, ㅋ, null, 2023-06-20 23:06:28, null 
23:07:03.908 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 291, 답글#3, 답글테스트#2의 답글#3, null, 2023-06-20 23:04:54, null 
23:07:03.908 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 290, 답글#2, 답글테스트#2의 답글#2, null, 2023-06-20 23:04:40, null 
23:07:03.908 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 289, 답글#1, 답글#1 - 답글테스트#2번글의 답글#1, null, 2023-06-20 23:04:23, null 
23:07:03.908 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:07:03.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:07:03.909 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:07:03.909 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
23:07:57.082 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:07:57.083 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 289(Integer) 
23:07:57.087 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:07:57.087 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 289, 답글#1, 답글#1 - 답글테스트#2번글의 답글#1, null, 2023-06-20 23:04:23, null, 287, 2, 1 
23:07:57.087 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:07:57.088 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:07:57.088 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:07:57.097 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:07:57.097 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:07:57.097 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:07:57.098 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:08:01.942 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:08:01.943 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:08:01.963 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:08:01.963 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 110 
23:08:01.963 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:08:01.964 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:08:01.964 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 293, 답글#2의 답답글#2, ㅋ, null, 2023-06-20 23:07:02, null 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 292, 답글#2의 답답글#1, ㅋ, null, 2023-06-20 23:06:28, null 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 291, 답글#3, 답글테스트#2의 답글#3, null, 2023-06-20 23:04:54, null 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 290, 답글#2, 답글테스트#2의 답글#2, null, 2023-06-20 23:04:40, null 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 289, 답글#1, 답글#1 - 답글테스트#2번글의 답글#1, null, 2023-06-20 23:04:23, null 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:08:01.965 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:08:01.965 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:08:01.966 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
23:08:03.526 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:08:03.526 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 288(Integer) 
23:08:03.529 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:08:03.529 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy, 288, 1, 0 
23:08:03.536 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:08:03.537 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:08:03.537 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:08:03.543 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:08:03.543 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:08:03.544 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:08:03.544 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:08:07.662 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:08:07.663 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:08:07.683 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:08:07.683 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 110 
23:08:07.683 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:08:07.683 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:08:07.683 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:08:07.684 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:08:07.684 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 293, 답글#2의 답답글#2, ㅋ, null, 2023-06-20 23:07:02, null 
23:08:07.684 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 292, 답글#2의 답답글#1, ㅋ, null, 2023-06-20 23:06:28, null 
23:08:07.684 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 291, 답글#3, 답글테스트#2의 답글#3, null, 2023-06-20 23:04:54, null 
23:08:07.684 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 290, 답글#2, 답글테스트#2의 답글#2, null, 2023-06-20 23:04:40, null 
23:08:07.684 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 289, 답글#1, 답글#1 - 답글테스트#2번글의 답글#1, null, 2023-06-20 23:04:23, null 
23:08:07.684 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:08:07.684 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:08:07.684 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:08:07.684 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:08:07.684 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:08:07.684 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:08:07.684 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:08:07.685 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:08:07.685 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:08:07.685 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:08:07.685 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:08:07.685 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:08:07.685 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:08:07.685 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:08:07.685 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:08:07.685 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:08:07.685 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
23:12:58.181 WARN  --- [Thread-30] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-6 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
23:12:58.253 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:12:58.253 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:12:58.253 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:12:58.584 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.359 seconds (JVM running for 3212.464) 
23:13:11.381 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:13:11.382 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 288(Integer) 
23:13:11.384 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:13:11.384 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy, 288, 1, 0 
23:13:11.385 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:13:11.386 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:13:11.386 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:13:11.387 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:13:11.387 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:13:11.387 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:13:11.388 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:13:19.743 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:13:19.744 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:13:19.746 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:13:19.746 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:13:19.747 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:13:19.749 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
23:13:19.749 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 일단 이름 안 나오는 문제부터(String), 해결해보자(String), 박토미(String), tommy(String), 288(Integer), 1(Integer), 0(Integer) 
23:13:19.763 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:13:20.795 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:13:20.796 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:13:20.805 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:13:20.806 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 111 
23:13:20.807 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:13:20.809 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:13:20.810 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:13:20.814 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:13:20.814 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:13:20.814 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 293, 답글#2의 답답글#2, ㅋ, null, 2023-06-20 23:07:02, null 
23:13:20.814 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 292, 답글#2의 답답글#1, ㅋ, null, 2023-06-20 23:06:28, null 
23:13:20.814 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 291, 답글#3, 답글테스트#2의 답글#3, null, 2023-06-20 23:04:54, null 
23:13:20.815 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 290, 답글#2, 답글테스트#2의 답글#2, null, 2023-06-20 23:04:40, null 
23:13:20.815 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 289, 답글#1, 답글#1 - 답글테스트#2번글의 답글#1, null, 2023-06-20 23:04:23, null 
23:13:20.815 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:13:20.815 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:13:20.815 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:13:20.815 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:13:20.815 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:13:20.815 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:13:20.815 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:13:20.815 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:13:20.817 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:13:20.821 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:13:20.822 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:13:20.822 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:13:20.822 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:13:20.822 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:13:20.822 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:13:20.823 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
23:13:23.673 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:13:23.674 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 294(Integer) 
23:13:23.676 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:13:23.676 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy, 288, 2, 1 
23:13:23.677 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:13:23.677 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:13:23.678 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:13:23.681 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:13:23.682 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:13:23.683 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:13:23.683 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:13:29.414 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:13:29.415 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:13:29.417 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:13:29.417 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:13:29.417 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:13:29.420 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
23:13:29.421 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 해결이 됐군(String), ㅋ(String), 박토미(String), tommy(String), 288(Integer), 2(Integer), 1(Integer) 
23:13:29.425 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:13:30.310 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:13:30.311 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:13:30.322 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:13:30.322 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 112 
23:13:30.322 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:13:30.322 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:13:30.323 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:13:30.324 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:13:30.324 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:13:30.325 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:13:30.325 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 293, 답글#2의 답답글#2, ㅋ, null, 2023-06-20 23:07:02, null 
23:13:30.325 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 292, 답글#2의 답답글#1, ㅋ, null, 2023-06-20 23:06:28, null 
23:13:30.325 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 291, 답글#3, 답글테스트#2의 답글#3, null, 2023-06-20 23:04:54, null 
23:13:30.325 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 290, 답글#2, 답글테스트#2의 답글#2, null, 2023-06-20 23:04:40, null 
23:13:30.325 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 289, 답글#1, 답글#1 - 답글테스트#2번글의 답글#1, null, 2023-06-20 23:04:23, null 
23:13:30.325 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:13:30.325 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:13:30.325 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:13:30.325 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:13:30.326 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:13:30.326 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:13:30.326 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:13:30.326 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:13:30.326 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:13:30.326 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:13:30.326 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:13:30.326 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:13:30.326 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:13:30.326 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:13:30.326 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
23:13:32.213 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:13:32.214 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 295(Integer) 
23:13:32.223 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:13:32.223 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy, 288, 3, 2 
23:13:32.224 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:13:32.227 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:13:32.228 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:13:32.233 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:13:32.233 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:13:32.234 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:13:32.234 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:13:35.198 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:13:35.198 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:13:35.219 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:13:35.219 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 112 
23:13:35.219 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:13:35.220 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:13:35.220 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:13:35.221 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:13:35.221 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:13:35.222 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:13:35.222 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 293, 답글#2의 답답글#2, ㅋ, null, 2023-06-20 23:07:02, null 
23:13:35.222 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 292, 답글#2의 답답글#1, ㅋ, null, 2023-06-20 23:06:28, null 
23:13:35.222 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 291, 답글#3, 답글테스트#2의 답글#3, null, 2023-06-20 23:04:54, null 
23:13:35.222 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 290, 답글#2, 답글테스트#2의 답글#2, null, 2023-06-20 23:04:40, null 
23:13:35.222 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 289, 답글#1, 답글#1 - 답글테스트#2번글의 답글#1, null, 2023-06-20 23:04:23, null 
23:13:35.222 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:13:35.222 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:13:35.223 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:13:35.223 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:13:35.223 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:13:35.223 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:13:35.223 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:13:35.223 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:13:35.223 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:13:35.223 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:13:35.223 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:13:35.223 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:13:35.223 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:13:35.223 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:13:35.223 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
23:14:22.425 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:14:22.426 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 294(Integer) 
23:14:22.429 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:14:22.429 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy, 288, 2, 1 
23:14:22.430 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:14:22.431 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:14:22.433 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:14:22.434 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:14:22.435 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:14:22.435 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:14:22.435 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:14:33.457 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:14:33.459 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:14:33.462 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:14:33.462 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:14:33.462 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:14:33.463 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
23:14:33.464 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 그럼 이제 god(String), 해결해보자(String), 박토미(String), tommy(String), 288(Integer), 2(Integer), 1(Integer) 
23:14:33.468 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:14:34.367 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:14:34.368 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:14:34.389 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:14:34.390 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 108 
23:14:34.390 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:14:34.391 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:14:34.392 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:14:34.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:14:34.395 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:14:34.395 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:14:34.395 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:14:34.395 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:14:34.395 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:14:34.395 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:14:34.395 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:14:34.395 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:14:34.395 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
23:14:37.430 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:14:37.431 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 296(Integer) 
23:14:37.435 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:14:37.435 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy, 288, 3, 2 
23:14:37.436 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:14:37.436 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:14:37.437 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:14:37.440 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:14:37.440 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:14:37.441 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:14:37.442 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:14:38.999 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:14:39.000 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:14:39.010 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:14:39.010 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 108 
23:14:39.010 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:14:39.013 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:14:39.013 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:14:39.017 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:14:39.017 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:14:39.017 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:14:39.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:14:39.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:14:39.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:14:39.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:14:39.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:14:39.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:14:39.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:14:39.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:14:39.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:14:39.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:14:39.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:14:39.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:14:39.020 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:14:39.025 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:14:39.025 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:14:39.025 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:14:39.026 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:14:39.027 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:14:39.027 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:14:39.027 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
23:20:29.696 WARN  --- [Thread-34] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-7 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
23:20:29.764 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:20:29.764 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:20:29.764 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:20:30.092 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.356 seconds (JVM running for 3664.047) 
23:20:33.790 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:20:33.791 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:20:33.807 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:20:33.807 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 108 
23:20:33.808 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:20:33.809 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:20:33.809 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:20:33.810 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:20:33.810 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:20:33.810 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:20:33.810 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:20:33.810 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:20:33.810 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:20:33.811 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:20:33.811 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:20:33.811 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:20:33.811 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:20:33.811 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:20:33.811 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:20:33.811 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:20:33.811 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:20:33.811 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:20:33.811 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:20:33.812 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:20:33.812 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:20:33.813 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:20:33.813 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:20:33.813 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 220, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
23:20:33.813 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:20:33.813 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
23:20:37.318 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:20:37.319 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 296(Integer) 
23:20:37.329 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:20:37.329 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy, 288, 3, 2 
23:20:37.330 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:20:37.331 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:20:37.331 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:20:37.333 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:20:37.333 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:20:37.334 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:20:37.334 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:20:44.232 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:20:44.233 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:20:44.237 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:20:44.237 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:20:44.238 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:20:44.239 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
23:20:44.240 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 봅시다(String), 한번(String), 박토미(String), tommy(String), 288(Integer), 3(Integer), 2(Integer) 
23:20:44.248 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:20:45.155 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:20:45.156 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:20:45.176 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:20:45.176 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 109 
23:20:45.176 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:20:45.176 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:20:45.177 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:20:45.177 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:20:45.178 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:20:45.178 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:20:45.178 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
23:20:46.701 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:20:46.702 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 297(Integer) 
23:20:46.708 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:20:46.708 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy, 288, 4, 3 
23:20:46.709 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:20:46.709 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:20:46.709 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:20:46.711 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:20:46.712 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:20:46.712 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:20:46.712 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:20:52.493 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:20:52.494 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:20:52.512 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:20:52.512 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 109 
23:20:52.512 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:20:52.512 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:20:52.513 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:20:52.514 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:20:52.514 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:20:52.514 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:20:52.514 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:20:52.514 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:20:52.514 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:20:52.514 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:20:52.514 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:20:52.514 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:20:52.514 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:20:52.514 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:20:52.514 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:20:52.515 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:20:52.515 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:20:52.515 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:20:52.515 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:20:52.515 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:20:52.515 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:20:52.515 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:20:52.515 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:20:52.515 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:20:52.515 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:20:52.515 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
23:20:53.679 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:20:53.680 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 296(Integer) 
23:20:53.690 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:20:53.692 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy, 288, 3, 2 
23:20:53.693 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:20:53.694 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:20:53.695 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:20:53.702 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:20:53.702 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:20:53.702 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:20:53.702 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:20:54.537 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:20:54.538 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:20:54.543 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:20:54.543 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 109 
23:20:54.543 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:20:54.544 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:20:54.544 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:20:54.545 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:20:54.546 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:20:54.546 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:20:54.546 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:20:54.546 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:20:54.546 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:20:54.546 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:20:54.547 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:20:54.547 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:20:54.548 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
23:20:56.954 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:20:56.955 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 297(Integer) 
23:20:56.960 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:20:56.966 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy, 288, 4, 3 
23:20:56.967 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:20:56.967 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:20:56.968 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:20:56.973 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:20:56.973 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:20:56.973 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:20:56.973 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:20:57.557 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:20:57.557 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:20:57.575 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:20:57.575 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 109 
23:20:57.575 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:20:57.576 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:20:57.577 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:20:57.578 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:20:57.579 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:20:57.579 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:20:57.579 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:20:57.579 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:20:57.579 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:20:57.579 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:20:57.579 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:20:57.579 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:20:57.580 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:20:57.580 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:20:57.580 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:20:57.581 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:20:57.581 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:20:57.581 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:20:57.581 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:20:57.582 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:20:57.582 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:20:57.582 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:20:57.582 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:20:57.582 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 221, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
23:20:57.582 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:20:57.582 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
23:21:10.487 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:21:10.487 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 296(Integer) 
23:21:10.489 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:21:10.489 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy, 288, 3, 2 
23:21:10.489 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:21:10.490 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:21:10.490 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:21:10.492 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:21:10.492 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:21:10.492 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:21:10.493 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:21:18.864 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:21:18.865 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:21:18.867 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:21:18.867 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:21:18.867 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:21:18.868 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
23:21:18.868 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 한번 더(String), 봅시다 ㅋ(String), 박토미(String), tommy(String), 288(Integer), 3(Integer), 2(Integer) 
23:21:18.874 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:21:19.902 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:21:19.903 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:21:19.920 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:21:19.921 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 110 
23:21:19.921 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:21:19.921 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:21:19.922 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:21:19.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:21:19.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:21:19.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:21:19.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:21:19.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:21:19.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:21:19.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:21:19.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:21:19.923 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:21:19.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:21:19.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:21:19.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:21:19.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:21:19.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:21:19.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:21:19.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:21:19.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:21:19.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:21:19.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:21:19.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:21:19.924 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 223, bList test, test, 김해피, 2023-06-12 23:50:34, null 
23:21:19.924 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:21:19.924 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
23:23:48.472 WARN  --- [Thread-38] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-8 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
23:23:48.534 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:23:48.534 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:23:48.534 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:23:48.844 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.331 seconds (JVM running for 3862.805) 
23:24:04.474 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:24:04.474 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:24:04.474 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:24:04.778 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.328 seconds (JVM running for 3878.74) 
23:27:29.497 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:27:29.497 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:27:29.497 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:27:29.795 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.31 seconds (JVM running for 4083.763) 
23:27:54.514 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:27:54.514 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:27:54.514 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:27:54.820 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.317 seconds (JVM running for 4108.789) 
23:28:06.396 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:28:06.396 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:28:06.396 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:28:06.703 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.317 seconds (JVM running for 4120.671) 
23:28:37.477 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:28:37.478 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:28:37.478 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:28:37.781 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.327 seconds (JVM running for 4151.75) 
23:29:00.481 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:29:00.481 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:29:00.482 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:29:00.651 WARN  --- [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/com/lcomputerspring3/example/mapper/UserMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/mapper/BoardMapper.xml]' 
23:29:00.656 ERROR --- [restartedMain] o.s.boot.SpringApplication : Application run failed 
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/com/lcomputerspring3/example/mapper/UserMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/mapper/BoardMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.lcomputerspring3.example.Lcomputerspring3Application.main(Lcomputerspring3Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/com/lcomputerspring3/example/mapper/UserMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/mapper/BoardMapper.xml]'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/com/lcomputerspring3/example/mapper/UserMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/mapper/BoardMapper.xml]'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 39 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/mapper/BoardMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/mapper/BoardMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 62 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.io.IOException: Failed to parse mapping resource: 'file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/mapper/BoardMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 76 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/mapper/BoardMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:615)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:492)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:635)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:187)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$960106cb.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$960106cb$$FastClassBySpringCGLIB$$6d5079f1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$960106cb.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 116; columnNumber: 67; 요소 유형 "update"에 대한 "returnType" 속성을 선언해야 합니다.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:263)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:81)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:612)
	... 90 common frames omitted
Caused by: org.xml.sax.SAXParseException: 요소 유형 "update"에 대한 "returnType" 속성을 선언해야 합니다.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:135)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:396)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:284)
	at java.xml/com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.addDTDDefaultAttrsAndValidate(XMLDTDValidator.java:1237)
	at java.xml/com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.handleStartElement(XMLDTDValidator.java:1846)
	at java.xml/com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.startElement(XMLDTDValidator.java:728)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1407)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2726)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:261)
	... 93 common frames omitted
23:29:08.177 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:29:08.178 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:29:08.178 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:29:08.483 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.34 seconds (JVM running for 4182.454) 
23:29:14.009 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:29:14.009 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:29:14.010 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:29:14.307 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.32 seconds (JVM running for 4188.277) 
23:29:18.799 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:29:18.799 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:29:18.799 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:29:19.097 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.307 seconds (JVM running for 4193.068) 
23:29:23.617 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:29:23.617 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:29:23.617 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:29:23.911 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.318 seconds (JVM running for 4197.882) 
23:29:39.557 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:29:39.557 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:29:39.557 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:29:39.859 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.335 seconds (JVM running for 4213.83) 
23:30:06.423 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:30:06.423 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 296(Integer) 
23:30:06.435 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:30:06.436 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy, 288, 3, 2 
23:30:06.436 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:30:06.437 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:30:06.437 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:30:06.439 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:30:06.439 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:30:06.439 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:30:06.439 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:30:17.548 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:30:17.549 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:30:17.551 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:30:17.551 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:30:17.551 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:30:17.552 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
23:30:17.553 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 자 한번 더(String), 해보는 거야(String), 박토미(String), tommy(String), 288(Integer), 3(Integer), 2(Integer) 
23:30:17.559 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:30:17.562 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
23:30:17.563 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 3(Integer), 288(Integer), 3(Integer) 
23:30:17.567 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 4 
23:30:18.515 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:30:18.516 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:30:18.536 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:30:18.536 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 111 
23:30:18.536 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:30:18.537 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:30:18.537 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:30:18.539 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:30:18.539 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:30:18.539 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:30:18.539 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:30:18.539 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:30:18.539 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:30:18.539 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:30:18.539 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:30:18.539 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:30:18.540 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:30:18.540 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:30:18.540 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:30:18.540 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:30:18.540 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:30:18.540 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:30:18.540 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:30:18.541 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:30:18.541 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:30:18.541 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:30:18.541 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:30:18.541 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 260, 토미 가입했어요, 이제 삭제할 거임/ 얘는 일반, 박토미, 2023-06-14 09:49:17, null 
23:30:18.541 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:30:18.542 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
23:30:58.712 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:30:58.713 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 286(Integer) 
23:30:58.714 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:30:58.715 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy, 286, 1, 0 
23:30:58.715 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:30:58.716 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:30:58.716 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:30:58.718 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:30:58.718 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:30:58.719 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:30:58.719 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:31:11.734 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:31:11.736 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:31:11.738 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:31:11.739 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:31:11.740 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:31:11.741 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
23:31:11.742 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 테스트#1의 답글#1(String), ㅇ(String), 박토미(String), tommy(String), 286(Integer), 1(Integer), 0(Integer) 
23:31:11.748 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:31:11.748 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
23:31:11.749 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 1(Integer), 286(Integer), 1(Integer) 
23:31:11.754 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
23:31:13.154 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:31:13.154 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:31:13.172 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:31:13.172 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 112 
23:31:13.173 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:31:13.173 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:31:13.173 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:31:13.174 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:31:13.174 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:31:13.174 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:31:13.174 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:31:13.175 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:31:13.175 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:31:13.175 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
23:31:14.278 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:31:14.279 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 300(Integer) 
23:31:14.282 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:31:14.283 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy, 286, 2, 1 
23:31:14.284 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:31:14.285 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:31:14.285 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:31:14.289 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:31:14.290 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:31:14.290 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:31:14.292 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:31:15.281 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:31:15.282 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:31:15.286 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:31:15.286 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 112 
23:31:15.286 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:31:15.287 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:31:15.287 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:31:15.288 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:31:15.288 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:31:15.288 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:31:15.288 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:31:15.288 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:31:15.288 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:31:15.288 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:31:15.289 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 265, 김왈의 app 관리자, 이다. 수정??, 김왈, 2023-06-15 16:35:43, null 
23:31:15.289 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:31:15.290 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
23:32:48.504 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:32:48.505 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 288(Integer) 
23:32:48.508 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:32:48.508 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy, 288, 1, 0 
23:32:48.510 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:32:48.510 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:32:48.511 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:32:48.512 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:32:48.513 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:32:48.513 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:32:48.513 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:32:57.376 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:32:57.377 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:32:57.380 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:32:57.380 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:32:57.380 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:32:57.382 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? + 1, ? + 1 ) 
23:32:57.383 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 테스트#3의 답글#1(String), ㅇ(String), 박토미(String), tommy(String), 288(Integer), 1(Integer), 0(Integer) 
23:32:57.390 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:32:57.391 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
23:32:57.391 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 1(Integer), 288(Integer), 1(Integer) 
23:32:57.393 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 7 
23:32:58.501 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:32:58.502 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:32:58.523 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:32:58.523 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 113 
23:32:58.523 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:32:58.524 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:32:58.524 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:32:58.525 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:32:58.526 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:32:58.526 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:32:58.526 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:32:58.526 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:32:58.526 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:32:58.526 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 269, 아니 뭐 얼마나 더 하라고, ㅡㅡ팔천원 실화냐, 김왈, 2023-06-15 18:59:18, app 
23:32:58.526 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:32:58.526 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
23:45:32.603 WARN  --- [Thread-85] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-9 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
23:45:32.673 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:45:32.673 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:45:32.673 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:45:32.996 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.351 seconds (JVM running for 5166.994) 
23:45:42.561 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:45:42.561 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:45:42.561 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:45:42.857 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.32 seconds (JVM running for 5176.855) 
23:45:59.894 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:45:59.895 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:45:59.898 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:45:59.898 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:45:59.899 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:45:59.901 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.writePost : ==>  Preparing: INSERT INTO lc_board( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, 1, 1, 0 ) 
23:45:59.902 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.writePost : ==> Parameters: 부모글1(String), ㅇ(String), 박토미(String), tommy(String) 
23:45:59.909 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.writePost : <==    Updates: 1 
23:45:59.910 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.B.writePostGroupUpdate : ==>  Preparing: UPDATE lc_board SET b_group = last_insert_id() WHERE b_id = last_insert_id() 
23:45:59.910 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.B.writePostGroupUpdate : ==> Parameters:  
23:45:59.912 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.B.writePostGroupUpdate : <==    Updates: 1 
23:45:59.912 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 등록 성공! 
23:46:00.829 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:46:00.829 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:46:00.845 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:46:00.845 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 114 
23:46:00.846 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:46:00.846 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:46:00.847 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:46:00.847 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:46:00.848 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:46:00.849 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:46:00.849 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:46:00.849 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:46:00.849 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:46:00.850 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 271, 아~ 오늘 밤엔 무슨 영화 볼까, 흠...뭐가 좋을까, 김왈, 2023-06-15 19:25:57, app 
23:46:00.850 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:46:00.850 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
23:46:08.896 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:46:08.897 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:46:08.899 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:46:08.899 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:46:08.900 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:46:08.904 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.writePost : ==>  Preparing: INSERT INTO lc_board( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, 1, 1, 0 ) 
23:46:08.905 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.writePost : ==> Parameters: 부모글2(String), ㄴ(String), 박토미(String), tommy(String) 
23:46:08.912 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.writePost : <==    Updates: 1 
23:46:08.915 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.B.writePostGroupUpdate : ==>  Preparing: UPDATE lc_board SET b_group = last_insert_id() WHERE b_id = last_insert_id() 
23:46:08.915 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.B.writePostGroupUpdate : ==> Parameters:  
23:46:08.919 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.B.writePostGroupUpdate : <==    Updates: 1 
23:46:08.919 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 등록 성공! 
23:46:10.097 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:46:10.097 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:46:10.098 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:46:10.098 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 115 
23:46:10.098 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:46:10.098 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:46:10.098 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:46:10.098 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:46:10.099 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 273, 토미의 글, 호ㅓㄱ인, 박토미, 2023-06-15 19:27:24, tommy 
23:46:10.100 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:46:10.100 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
23:46:16.482 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:46:16.483 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:46:16.486 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:46:16.486 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:46:16.486 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:46:16.487 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.writePost : ==>  Preparing: INSERT INTO lc_board( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, 1, 1, 0 ) 
23:46:16.487 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.writePost : ==> Parameters: 부모글3(String), 3(String), 박토미(String), tommy(String) 
23:46:16.492 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.writePost : <==    Updates: 1 
23:46:16.493 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.B.writePostGroupUpdate : ==>  Preparing: UPDATE lc_board SET b_group = last_insert_id() WHERE b_id = last_insert_id() 
23:46:16.494 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.B.writePostGroupUpdate : ==> Parameters:  
23:46:16.500 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.B.writePostGroupUpdate : <==    Updates: 1 
23:46:16.500 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 등록 성공! 
23:46:17.443 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:46:17.444 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:46:17.460 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:46:17.460 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 116 
23:46:17.460 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:46:17.461 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:46:17.461 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:46:17.462 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:46:17.462 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
23:46:17.462 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:46:17.463 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 275, ddd, ddddd, 박토미, 2023-06-15 19:30:26, tommy 
23:46:17.463 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:46:17.463 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
23:46:19.197 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:46:19.198 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 303(Integer) 
23:46:19.200 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:46:19.200 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy, 303, 1, 0 
23:46:19.200 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:46:19.202 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:46:19.202 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:46:19.205 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:46:19.206 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:46:19.206 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:46:19.207 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:46:29.035 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:46:29.038 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 303(Integer) 
23:46:29.040 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:46:29.042 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy, 303, 1, 0 
23:46:29.043 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:46:29.044 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:46:29.045 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:46:29.047 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:46:29.048 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:46:29.048 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:46:29.048 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:46:41.915 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:46:41.917 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:46:41.921 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:46:41.922 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:46:41.922 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:46:41.923 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
23:46:41.924 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 부모글2의 자식글1(String), 부2자1(String), 박토미(String), tommy(String), 303(Integer), 2(Integer), 1(Integer) 
23:46:41.932 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:46:41.932 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
23:46:41.933 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 303(Integer), 2(Integer) 
23:46:41.935 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
23:46:44.064 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:46:44.064 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:46:44.090 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:46:44.091 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 117 
23:46:44.091 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:46:44.091 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:46:44.091 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:46:44.093 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:46:44.094 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 277, 왈이는 관리자!, 너희들의 글을 삭제할 권한이 있지!, 김왈, 2023-06-18 13:15:44, app 
23:46:44.094 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:46:44.094 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
23:46:45.546 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:46:45.547 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 303(Integer) 
23:46:45.549 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:46:45.550 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy, 303, 1, 0 
23:46:45.551 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:46:45.552 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:46:45.553 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:46:45.556 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:46:45.556 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:46:45.556 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:46:45.556 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:47:03.853 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:47:03.854 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:47:03.861 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:47:03.861 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:47:03.862 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:47:03.862 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
23:47:03.864 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 부모글2의 자식글2(String), 부2자2(String), 박토미(String), tommy(String), 303(Integer), 2(Integer), 1(Integer) 
23:47:03.870 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:47:03.870 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
23:47:03.870 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 303(Integer), 2(Integer) 
23:47:03.872 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
23:47:04.834 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:47:04.834 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:47:04.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:47:04.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 118 
23:47:04.850 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:47:04.851 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:47:04.851 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:47:04.852 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:47:04.852 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
23:47:04.852 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
23:47:04.852 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
23:47:04.852 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
23:47:04.852 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:47:04.852 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:47:04.852 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:47:04.852 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:47:04.852 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:47:04.852 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:47:04.852 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:47:04.853 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:47:04.853 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:47:04.853 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:47:04.853 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:47:04.853 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:47:04.853 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:47:04.853 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:47:04.853 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:47:04.853 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
23:47:04.853 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:47:04.853 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
23:47:25.143 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:47:25.144 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 303(Integer) 
23:47:25.147 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:47:25.147 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy, 303, 1, 0 
23:47:25.147 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:47:25.148 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:47:25.148 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:47:25.150 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:47:25.150 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:47:25.151 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:47:25.151 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:47:33.692 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:47:33.693 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:47:33.695 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:47:33.695 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:47:33.695 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:47:33.696 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
23:47:33.697 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 부모글2의 자식글3(String), 부2자3(String), 박토미(String), tommy(String), 303(Integer), 2(Integer), 1(Integer) 
23:47:33.708 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:47:33.708 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
23:47:33.708 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 303(Integer), 2(Integer) 
23:47:33.711 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 2 
23:47:34.870 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:47:34.871 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:47:34.885 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:47:34.885 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 119 
23:47:34.885 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:47:34.886 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:47:34.886 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:47:34.887 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:47:34.887 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
23:47:34.887 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
23:47:34.887 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
23:47:34.887 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
23:47:34.887 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
23:47:34.887 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:47:34.887 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:47:34.887 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:47:34.887 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:47:34.887 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:47:34.887 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:47:34.887 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:47:34.888 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:47:34.888 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:47:34.888 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:47:34.888 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:47:34.888 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:47:34.888 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:47:34.888 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:47:34.888 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
23:47:34.888 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:47:34.888 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
23:48:21.631 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:48:21.632 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 303(Integer) 
23:48:21.634 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:48:21.635 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy, 303, 1, 0 
23:48:21.635 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:48:21.636 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:48:21.636 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:48:21.638 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:48:21.639 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:48:21.639 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:48:21.639 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:48:32.816 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:48:32.817 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:48:32.822 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:48:32.822 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:48:32.822 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:48:32.823 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
23:48:32.823 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 부모글2의 자식글4(String), 부2자4(String), 박토미(String), tommy(String), 303(Integer), 2(Integer), 1(Integer) 
23:48:32.832 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:48:32.837 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
23:48:32.838 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 303(Integer), 2(Integer) 
23:48:32.840 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 3 
23:48:34.084 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:48:34.085 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:48:34.098 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:48:34.098 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 120 
23:48:34.098 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:48:34.099 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:48:34.099 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:48:34.100 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:48:34.100 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:48:34.101 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
23:48:34.101 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:48:34.101 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
23:54:44.692 WARN  --- [Thread-93] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-10 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
23:54:44.773 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:54:44.773 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:54:44.773 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:54:45.105 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.357 seconds (JVM running for 5719.119) 
23:55:02.571 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:55:02.572 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:55:02.574 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:55:02.574 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:55:02.575 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:55:02.575 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.writePost : ==>  Preparing: INSERT INTO lc_board( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, 1, 1, 0 ) 
23:55:02.576 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.writePost : ==> Parameters: 원글#1(String), 원글#1(String), 박토미(String), tommy(String) 
23:55:02.581 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.writePost : <==    Updates: 1 
23:55:02.582 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.B.writePostGroupUpdate : ==>  Preparing: UPDATE lc_board SET b_group = last_insert_id() WHERE b_id = last_insert_id() 
23:55:02.583 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.B.writePostGroupUpdate : ==> Parameters:  
23:55:02.584 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.B.writePostGroupUpdate : <==    Updates: 1 
23:55:02.585 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 등록 성공! 
23:55:03.718 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:55:03.719 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:55:03.740 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:55:03.740 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 121 
23:55:03.741 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:55:03.742 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:55:03.742 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:55:03.743 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:55:03.743 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
23:55:03.743 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
23:55:03.744 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
23:55:03.744 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
23:55:03.744 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
23:55:03.744 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
23:55:03.744 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
23:55:03.744 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:55:03.744 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:55:03.744 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:55:03.744 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:55:03.744 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:55:03.744 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:55:03.744 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:55:03.744 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:55:03.745 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:55:03.746 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:55:03.746 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:55:03.746 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:55:03.746 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
23:55:03.747 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:55:03.747 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
23:55:11.029 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:55:11.030 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:55:11.032 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:55:11.033 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:55:11.033 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:55:11.033 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.writePost : ==>  Preparing: INSERT INTO lc_board( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, 1, 1, 0 ) 
23:55:11.034 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.writePost : ==> Parameters: 원글#2(String), 원글#2(String), 박토미(String), tommy(String) 
23:55:11.038 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.writePost : <==    Updates: 1 
23:55:11.039 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.B.writePostGroupUpdate : ==>  Preparing: UPDATE lc_board SET b_group = last_insert_id() WHERE b_id = last_insert_id() 
23:55:11.041 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.B.writePostGroupUpdate : ==> Parameters:  
23:55:11.049 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.B.writePostGroupUpdate : <==    Updates: 1 
23:55:11.049 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 등록 성공! 
23:55:12.088 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:55:12.088 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:55:12.104 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:55:12.104 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 122 
23:55:12.104 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:55:12.104 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:55:12.105 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:55:12.106 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:55:12.107 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:55:12.107 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:55:12.107 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:55:12.107 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
23:55:12.107 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:55:12.107 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
23:55:20.973 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:55:20.974 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:55:20.979 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:55:20.979 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:55:20.980 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:55:20.980 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.writePost : ==>  Preparing: INSERT INTO lc_board( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, 1, 1, 0 ) 
23:55:20.981 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.writePost : ==> Parameters: 원글#3(String), 원글#3(String), 박토미(String), tommy(String) 
23:55:20.996 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.writePost : <==    Updates: 1 
23:55:20.997 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.B.writePostGroupUpdate : ==>  Preparing: UPDATE lc_board SET b_group = last_insert_id() WHERE b_id = last_insert_id() 
23:55:20.997 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.B.writePostGroupUpdate : ==> Parameters:  
23:55:20.999 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.B.writePostGroupUpdate : <==    Updates: 1 
23:55:20.999 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 등록 성공! 
23:55:21.786 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:55:21.787 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:55:21.806 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:55:21.806 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
23:55:21.806 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:55:21.806 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:55:21.807 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:55:21.807 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:55:21.808 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
23:55:21.809 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:55:21.809 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
23:55:23.082 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:55:23.082 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
23:55:23.091 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:55:23.092 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
23:55:23.092 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:55:23.095 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:55:23.096 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:55:23.098 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:55:23.098 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:55:23.098 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:55:23.099 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:55:33.188 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:55:33.188 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:55:33.192 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:55:33.196 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:55:33.197 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:55:33.198 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
23:55:33.199 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글2의 답글1(String), 원글2의 답글1(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
23:55:33.204 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:55:33.207 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
23:55:33.208 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 3(Integer), 310(Integer), 3(Integer) 
23:55:33.210 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
23:55:34.122 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:55:34.123 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:55:34.140 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:55:34.141 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
23:55:34.141 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:55:34.142 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:55:34.143 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:55:34.145 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:55:34.145 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 312, 원글2의 답글1, 원글2의 답글1, 박토미, 2023-06-20 23:55:33, tommy 
23:55:34.146 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
23:55:34.146 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
23:55:34.146 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
23:55:34.146 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
23:55:34.146 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
23:55:34.146 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
23:55:34.146 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
23:55:34.146 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
23:55:34.146 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
23:55:34.146 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:55:34.146 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:55:34.147 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:55:34.147 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:55:34.147 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:55:34.147 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:55:34.147 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:55:34.147 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:55:34.147 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:55:34.147 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
23:55:34.147 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:55:34.149 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
23:55:35.287 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:55:35.287 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
23:55:35.289 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:55:35.290 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
23:55:35.291 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:55:35.292 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:55:35.293 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:55:35.295 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:55:35.295 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:55:35.295 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:55:35.296 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:55:42.654 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:55:42.655 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:55:42.657 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:55:42.658 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:55:42.658 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:55:42.658 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
23:55:42.659 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글2의 답글2(String), 원글2의 답글2(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
23:55:42.664 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:55:42.666 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
23:55:42.667 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 3(Integer), 310(Integer), 3(Integer) 
23:55:42.674 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
23:55:44.211 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:55:44.211 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:55:44.231 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:55:44.231 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
23:55:44.231 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:55:44.231 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:55:44.232 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:55:44.232 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 313, 원글2의 답글2, 원글2의 답글2, 박토미, 2023-06-20 23:55:42, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 312, 원글2의 답글1, 원글2의 답글1, 박토미, 2023-06-20 23:55:33, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:55:44.233 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
23:55:44.233 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:55:44.234 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
23:55:45.806 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:55:45.807 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
23:55:45.809 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:55:45.810 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
23:55:45.810 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:55:45.811 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:55:45.811 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:55:45.815 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:55:45.815 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:55:45.815 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:55:45.815 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:55:52.456 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:55:52.457 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:55:52.459 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:55:52.459 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:55:52.460 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:55:52.460 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
23:55:52.461 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글2의 답글3(String), 원글2의 답글3(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
23:55:52.471 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:55:52.471 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
23:55:52.472 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 3(Integer), 310(Integer), 3(Integer) 
23:55:52.473 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
23:55:53.260 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:55:53.260 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:55:53.278 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:55:53.278 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
23:55:53.278 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:55:53.278 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:55:53.278 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:55:53.279 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:55:53.279 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 314, 원글2의 답글3, 원글2의 답글3, 박토미, 2023-06-20 23:55:52, tommy 
23:55:53.279 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 313, 원글2의 답글2, 원글2의 답글2, 박토미, 2023-06-20 23:55:42, tommy 
23:55:53.279 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 312, 원글2의 답글1, 원글2의 답글1, 박토미, 2023-06-20 23:55:33, tommy 
23:55:53.279 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:55:53.280 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
23:55:53.280 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:55:53.280 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
23:55:54.814 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:55:54.814 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
23:55:54.816 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:55:54.816 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
23:55:54.817 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:55:54.818 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:55:54.819 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:55:54.820 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:55:54.828 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:55:54.829 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:55:54.829 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:56:01.361 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
23:56:01.362 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
23:56:01.363 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
23:56:01.370 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
23:56:01.371 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
23:56:01.371 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
23:56:01.373 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글2의 답글4(String), 원글2의 답글4(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
23:56:01.380 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
23:56:01.381 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
23:56:01.381 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 3(Integer), 310(Integer), 3(Integer) 
23:56:01.382 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
23:56:02.509 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
23:56:02.511 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
23:56:02.529 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
23:56:02.529 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 127 
23:56:02.529 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
23:56:02.530 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
23:56:02.530 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
23:56:02.531 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
23:56:02.531 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 315, 원글2의 답글4, 원글2의 답글4, 박토미, 2023-06-20 23:56:01, tommy 
23:56:02.531 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 314, 원글2의 답글3, 원글2의 답글3, 박토미, 2023-06-20 23:55:52, tommy 
23:56:02.531 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 313, 원글2의 답글2, 원글2의 답글2, 박토미, 2023-06-20 23:55:42, tommy 
23:56:02.531 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 312, 원글2의 답글1, 원글2의 답글1, 박토미, 2023-06-20 23:55:33, tommy 
23:56:02.532 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
23:56:02.532 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
23:56:02.532 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
23:56:02.532 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
23:56:02.532 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
23:56:02.532 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
23:56:02.532 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
23:56:02.532 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
23:56:02.532 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
23:56:02.532 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
23:56:02.532 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
23:56:02.532 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
23:56:02.532 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
23:56:02.533 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
23:56:02.533 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
23:56:02.533 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
23:56:02.533 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
23:56:02.533 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
23:56:31.876 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:56:31.876 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 315(Integer) 
23:56:31.880 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:56:31.880 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 315, 원글2의 답글4, 원글2의 답글4, 박토미, 2023-06-20 23:56:01, tommy, 310, 2, 1 
23:56:31.881 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:56:31.881 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:56:31.882 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:56:31.895 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:56:31.895 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:56:31.895 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:56:31.895 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:56:35.104 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
23:56:35.105 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 315(Integer) 
23:56:35.108 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
23:56:35.109 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 315, 원글2의 답글4, 원글2의 답글4, 박토미, 2023-06-20 23:56:01, tommy, 310, 2, 1 
23:56:35.109 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
23:56:35.110 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
23:56:35.110 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
23:56:35.113 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
23:56:35.113 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
23:56:35.113 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
23:56:35.113 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
23:56:49.766 WARN  --- [Thread-97] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-11 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
23:56:49.828 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
23:56:49.828 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
23:56:49.828 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
23:56:50.118 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.314 seconds (JVM running for 5844.135) 
