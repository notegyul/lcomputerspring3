00:10:14.044 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
00:10:14.044 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
00:10:14.044 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
00:10:14.364 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.347 seconds (JVM running for 6648.405) 
00:10:36.492 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
00:10:36.493 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
00:10:36.507 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
00:10:36.507 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
00:10:36.508 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
00:10:36.509 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
00:10:36.509 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
00:10:36.510 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
00:10:36.511 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
00:10:36.511 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
00:10:36.511 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
00:10:36.511 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
00:10:36.511 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
00:10:36.511 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
00:10:36.511 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
00:10:36.511 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
00:10:36.512 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
00:10:36.512 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
00:10:36.512 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
00:10:36.512 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
00:10:36.512 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
00:10:36.512 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
00:10:36.512 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
00:10:36.513 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
00:10:36.514 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
00:10:36.514 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
00:10:36.514 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
00:10:36.514 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
00:10:36.514 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
00:10:36.514 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
00:10:38.030 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
00:10:38.031 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
00:10:38.033 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
00:10:38.033 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
00:10:38.033 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
00:10:38.044 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
00:10:38.045 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
00:10:38.047 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
00:10:38.047 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
00:10:38.047 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
00:10:38.048 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
00:10:45.987 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
00:10:45.987 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
00:10:45.991 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
00:10:45.991 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
00:10:45.993 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
00:10:45.994 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
00:10:45.995 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글2의 답글1(String), 원글2의 답글1(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
00:10:46.002 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
00:10:46.003 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
00:10:46.003 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 2(Integer) 
00:10:46.004 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
00:10:47.128 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
00:10:47.128 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
00:10:47.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
00:10:47.146 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
00:10:47.146 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
00:10:47.146 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
00:10:47.146 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
00:10:47.147 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
00:10:47.147 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 316, 원글2의 답글1, 원글2의 답글1, 박토미, 2023-06-21 00:10:45, tommy 
00:10:47.147 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
00:10:47.147 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
00:10:47.147 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
00:10:47.147 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
00:10:47.147 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
00:10:47.148 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
00:10:47.148 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
00:10:47.148 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
00:10:48.369 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
00:10:48.370 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
00:10:48.374 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
00:10:48.375 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
00:10:48.375 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
00:10:48.375 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
00:10:48.376 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
00:10:48.380 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
00:10:48.380 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
00:10:48.380 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
00:10:48.380 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
00:10:55.206 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
00:10:55.207 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
00:10:55.210 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
00:10:55.210 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
00:10:55.211 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
00:10:55.211 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
00:10:55.212 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글2의 답글2(String), 원글2의 답글2(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
00:10:55.221 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
00:10:55.222 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
00:10:55.222 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 2(Integer) 
00:10:55.226 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
00:10:56.212 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
00:10:56.212 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
00:10:56.230 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
00:10:56.230 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
00:10:56.230 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
00:10:56.230 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
00:10:56.231 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
00:10:56.231 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
00:10:56.232 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 317, 원글2의 답글2, 원글2의 답글2, 박토미, 2023-06-21 00:10:55, tommy 
00:10:56.232 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 316, 원글2의 답글1, 원글2의 답글1, 박토미, 2023-06-21 00:10:45, tommy 
00:10:56.232 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
00:10:56.232 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
00:10:56.232 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
00:10:56.232 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
00:10:56.232 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
00:10:56.232 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
00:10:56.232 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
00:10:56.232 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
00:10:56.232 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
00:10:56.232 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
00:10:56.233 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
00:10:56.233 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
00:10:56.233 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
00:10:56.233 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
00:10:56.233 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
00:10:56.233 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
00:10:56.233 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
00:10:56.233 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
00:10:56.233 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
00:10:56.233 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
00:10:57.522 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
00:10:57.523 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
00:10:57.529 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
00:10:57.530 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
00:10:57.530 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
00:10:57.531 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
00:10:57.532 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
00:10:57.537 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
00:10:57.537 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
00:10:57.538 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
00:10:57.538 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
00:11:04.490 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
00:11:04.491 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
00:11:04.498 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
00:11:04.499 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
00:11:04.499 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
00:11:04.500 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
00:11:04.500 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글2의 답글3(String), 원글2의 답글3(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
00:11:04.506 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
00:11:04.506 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
00:11:04.507 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 2(Integer) 
00:11:04.509 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 2 
00:11:05.615 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
00:11:05.615 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
00:11:05.636 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
00:11:05.636 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
00:11:05.636 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
00:11:05.636 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
00:11:05.637 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
00:11:05.638 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
00:11:05.638 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 318, 원글2의 답글3, 원글2의 답글3, 박토미, 2023-06-21 00:11:04, tommy 
00:11:05.638 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 317, 원글2의 답글2, 원글2의 답글2, 박토미, 2023-06-21 00:10:55, tommy 
00:11:05.638 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 316, 원글2의 답글1, 원글2의 답글1, 박토미, 2023-06-21 00:10:45, tommy 
00:11:05.638 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
00:11:05.638 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
00:11:05.639 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
00:11:05.639 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
00:11:05.639 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
00:11:05.639 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
00:11:05.639 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
00:11:05.639 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
00:11:05.639 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
00:11:05.639 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
00:11:05.639 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
00:11:05.639 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
00:11:05.639 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
00:11:05.639 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
00:11:05.640 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
00:11:05.640 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
00:11:05.640 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
00:11:05.640 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
00:11:05.640 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
00:11:07.610 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
00:11:07.611 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
00:11:07.612 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
00:11:07.613 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
00:11:07.613 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
00:11:07.614 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
00:11:07.614 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
00:11:07.625 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
00:11:07.625 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
00:11:07.625 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
00:11:07.625 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
00:11:14.443 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
00:11:14.444 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
00:11:14.446 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
00:11:14.446 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
00:11:14.447 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
00:11:14.448 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
00:11:14.449 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글2의 답글4(String), 원글2의 답글4(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
00:11:14.453 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
00:11:14.453 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
00:11:14.454 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 2(Integer) 
00:11:14.461 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 3 
00:11:16.000 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
00:11:16.001 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
00:11:16.020 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
00:11:16.020 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 127 
00:11:16.020 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
00:11:16.022 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
00:11:16.022 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
00:11:16.024 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
00:11:16.024 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 319, 원글2의 답글4, 원글2의 답글4, 박토미, 2023-06-21 00:11:14, tommy 
00:11:16.024 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 318, 원글2의 답글3, 원글2의 답글3, 박토미, 2023-06-21 00:11:04, tommy 
00:11:16.024 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 317, 원글2의 답글2, 원글2의 답글2, 박토미, 2023-06-21 00:10:55, tommy 
00:11:16.024 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 316, 원글2의 답글1, 원글2의 답글1, 박토미, 2023-06-21 00:10:45, tommy 
00:11:16.024 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
00:11:16.024 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
00:11:16.025 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
00:11:16.025 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
00:11:16.029 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
00:11:16.029 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
00:11:16.030 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
00:11:16.030 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
00:11:16.030 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
00:11:16.030 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
00:11:16.030 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
00:11:16.030 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
00:11:16.030 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
00:11:16.030 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
00:11:16.030 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
00:11:16.030 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
00:11:16.030 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
00:11:16.030 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
00:16:38.576 WARN  --- [Thread-105] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-12 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
00:16:39.081 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
00:16:39.082 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
00:16:39.082 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
00:16:39.404 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.78 seconds (JVM running for 7033.456) 
00:17:04.481 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
00:17:04.482 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
00:17:04.493 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
00:17:04.493 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
00:17:04.494 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
00:17:04.495 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
00:17:04.495 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
00:17:04.496 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
00:17:04.497 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
00:17:04.498 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
00:17:04.499 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
00:17:04.499 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
00:17:04.499 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
00:17:04.499 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
00:17:04.499 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
00:17:04.499 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
00:17:05.541 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
00:17:05.542 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
00:17:05.545 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
00:17:05.545 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
00:17:05.546 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
00:17:05.556 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
00:17:05.560 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
00:17:05.564 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
00:17:05.565 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
00:17:05.565 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
00:17:05.566 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
00:17:22.813 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
00:17:22.813 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
00:17:22.815 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
00:17:22.816 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
00:17:22.816 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
00:17:22.818 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
00:17:22.818 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 원글#2의 답글#1(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
00:17:22.826 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
00:17:22.827 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
00:17:22.828 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 0(Integer) 
00:17:22.832 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 0 
00:17:22.837 ERROR --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "com.lcomputerspring3.example.domain.Board.getbOrder()" because "newReply" is null] with root cause 
java.lang.NullPointerException: Cannot invoke "com.lcomputerspring3.example.domain.Board.getbOrder()" because "newReply" is null
	at com.lcomputerspring3.example.controller.BoardController.replyToOriginBoardPro(BoardController.java:164)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
00:19:47.744 WARN  --- [Thread-109] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-13 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
00:19:47.814 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
00:19:47.814 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
00:19:47.814 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
00:19:48.118 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.328 seconds (JVM running for 7222.175) 
00:19:50.866 WARN  --- [http-nio-8080-exec-1] o.s.w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'bId' for method parameter type int is not present] 
00:19:51.865 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
00:19:51.866 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
00:19:51.870 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
00:19:51.871 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
00:19:51.871 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
00:19:51.874 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
00:19:51.874 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
00:19:51.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
00:19:51.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
00:19:51.877 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
00:19:51.877 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
00:20:13.788 WARN  --- [Thread-113] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-14 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
00:20:13.855 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
00:20:13.855 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
00:20:13.855 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
00:20:14.149 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.317 seconds (JVM running for 7248.206) 
00:20:16.183 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
00:20:16.184 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
00:20:16.184 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
00:20:16.184 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
00:20:16.185 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
00:20:16.185 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
00:20:16.185 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
00:20:16.185 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
00:20:16.185 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
00:20:16.185 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
00:20:16.186 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
00:20:22.199 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
00:20:22.200 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
00:20:22.202 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
00:20:22.203 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
00:20:22.204 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
00:20:22.205 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
00:20:22.205 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
00:20:22.214 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
00:20:22.215 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
00:20:22.215 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
00:20:22.215 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
00:20:28.990 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
00:20:28.990 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
00:20:29.005 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
00:20:29.005 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
00:20:29.006 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
00:20:29.007 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
00:20:29.008 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 원글#2의 답글#1(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
00:20:29.010 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
00:20:29.010 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
00:20:29.010 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 0(Integer) 
00:20:29.011 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 0 
00:20:29.012 ERROR --- [http-nio-8080-exec-5] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "com.lcomputerspring3.example.domain.Board.getbOrder()" because "newReply" is null] with root cause 
java.lang.NullPointerException: Cannot invoke "com.lcomputerspring3.example.domain.Board.getbOrder()" because "newReply" is null
	at com.lcomputerspring3.example.controller.BoardController.replyToOriginBoardPro(BoardController.java:164)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
00:20:59.005 WARN  --- [Thread-117] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-15 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
00:20:59.069 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 95684 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
00:20:59.069 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
00:20:59.069 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
00:20:59.372 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.324 seconds (JVM running for 7293.431) 
11:04:05.059 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
11:04:05.059 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
11:04:05.059 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
11:04:06.262 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 1.42 seconds (JVM running for 1.806) 
11:04:11.031 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
11:04:11.045 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:04:11.058 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:04:11.059 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:04:11.060 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:04:11.061 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:04:11.061 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:04:11.062 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:04:11.062 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:04:11.062 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:04:11.063 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:04:11.063 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:04:11.063 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:04:11.064 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:04:11.064 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:04:11.064 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:04:11.065 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
11:04:11.065 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:04:11.066 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:04:11.067 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:04:11.068 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:04:11.068 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:04:11.068 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:04:11.068 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:04:16.220 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
11:04:16.220 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
11:04:16.222 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
11:04:16.222 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
11:04:16.223 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
11:04:16.223 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:04:16.223 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:04:16.224 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:04:16.224 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:04:16.225 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:04:16.318 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
11:04:16.319 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:04:16.320 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:04:16.320 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:04:16.320 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:04:16.321 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:04:16.321 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:04:16.321 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:04:16.321 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:04:16.322 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:04:16.322 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:04:16.322 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:04:16.322 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:04:16.322 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:04:16.323 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:04:16.323 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:04:16.323 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
11:04:16.324 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:04:16.324 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:04:16.324 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:04:16.324 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:04:16.324 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:04:16.325 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:04:16.325 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:04:20.376 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:04:20.376 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:04:20.378 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:04:20.378 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
11:04:20.379 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:04:20.379 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
11:04:20.379 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:04:20.380 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:04:20.381 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:04:20.381 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:04:20.381 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:04:20.382 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:04:20.382 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:04:20.382 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:04:20.382 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:04:20.382 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:04:20.383 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:04:20.383 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:04:20.383 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:04:20.383 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:04:20.384 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:04:20.384 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
11:04:20.384 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:04:20.384 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:04:20.385 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:04:20.385 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:04:20.386 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:04:20.386 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:04:20.386 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:04:20.386 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
11:04:23.442 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:04:23.443 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:04:23.445 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:04:23.445 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
11:04:23.445 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:04:23.446 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:04:23.447 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:04:23.447 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:04:23.448 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:04:23.448 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:04:23.448 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:05:20.721 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:05:20.722 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:05:20.732 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:05:20.734 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
11:05:20.734 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:05:20.735 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:05:20.736 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:05:20.737 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:05:20.738 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:05:20.738 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:05:20.738 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:05:34.777 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:05:34.778 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:05:34.796 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:05:34.796 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
11:05:34.796 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:05:34.797 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
11:05:34.797 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:05:34.798 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:05:34.798 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:05:34.798 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:05:34.798 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:05:34.798 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:05:34.798 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:05:34.798 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:05:34.798 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:05:34.799 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:05:34.799 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:05:34.799 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:05:34.799 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:05:34.799 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:05:34.799 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:05:34.799 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
11:05:34.799 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:05:34.799 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:05:34.799 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:05:34.800 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:05:34.800 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:05:34.800 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:05:34.800 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:05:34.800 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
11:05:41.153 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:05:41.154 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:05:41.162 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:05:41.163 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
11:05:41.164 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:05:41.168 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:05:41.169 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:05:41.170 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:05:41.170 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:05:41.170 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:05:41.171 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:06:58.442 WARN  --- [Thread-5] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
11:06:58.507 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
11:06:58.507 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
11:06:58.507 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
11:06:58.856 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.38 seconds (JVM running for 174.399) 
11:07:02.751 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
11:07:02.751 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
11:07:02.751 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
11:07:03.077 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.338 seconds (JVM running for 178.619) 
11:07:33.734 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:07:33.735 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:07:33.736 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:07:33.737 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
11:07:33.737 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:07:33.738 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:07:33.739 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:07:33.742 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:07:33.742 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:07:33.742 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:07:33.743 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:07:34.648 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:07:34.652 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:07:34.660 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:07:34.660 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
11:07:34.661 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:07:34.662 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
11:07:34.663 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:07:34.664 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:07:34.664 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:07:34.665 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:07:34.665 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:07:34.665 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:07:34.665 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:07:34.665 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:07:34.665 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:07:34.666 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:07:34.666 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:07:34.667 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:07:34.667 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:07:34.667 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:07:34.667 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:07:34.668 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
11:07:34.670 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:07:34.672 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:07:34.672 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:07:34.672 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:07:34.672 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:07:34.672 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:07:34.672 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:07:34.673 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
11:07:36.381 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:07:36.382 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:07:36.385 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:07:36.391 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
11:07:36.393 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:07:36.400 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:07:36.401 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:07:36.403 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:07:36.403 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:07:36.403 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:07:36.403 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:07:48.459 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
11:07:48.461 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
11:07:48.464 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
11:07:48.464 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
11:07:48.467 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
11:07:48.468 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
11:07:48.477 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#3(String), 원글#2의 답글#3(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
11:07:48.480 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
11:07:48.480 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
11:07:48.481 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 2(Integer) 
11:07:48.482 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 2 
11:07:49.816 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:07:49.817 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:07:49.830 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:07:49.830 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
11:07:49.830 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:07:49.831 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
11:07:49.831 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:07:49.833 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:07:49.833 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 322, 원글#2의 답글#3, 원글#2의 답글#3, 박토미, 2023-06-21 11:07:48, tommy 
11:07:49.833 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:07:49.833 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:07:49.833 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:07:49.833 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:07:49.834 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:07:49.834 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:07:49.834 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:07:49.834 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:07:49.834 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:07:49.834 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:07:49.834 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:07:49.835 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:07:49.835 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:07:49.835 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
11:07:49.835 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:07:49.835 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:07:49.835 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:07:49.835 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:07:49.835 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:07:49.836 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:07:49.836 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
11:11:58.086 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:11:58.087 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
11:11:58.090 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:11:58.091 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
11:11:58.091 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:11:58.093 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:11:58.096 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:11:58.103 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:11:58.103 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:11:58.103 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:11:58.103 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:17:10.486 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:17:10.487 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:17:10.509 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:17:10.509 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
11:17:10.509 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:17:10.509 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
11:17:10.510 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:17:10.511 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:17:10.511 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 322, 원글#2의 답글#3, 원글#2의 답글#3, 박토미, 2023-06-21 11:07:48, tommy 
11:17:10.511 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:17:10.511 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:17:10.511 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:17:10.511 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:17:10.511 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:17:10.511 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:17:10.511 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:17:10.512 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:17:10.512 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:17:10.512 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:17:10.512 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:17:10.512 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:17:10.512 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:17:10.512 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
11:17:10.512 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:17:10.512 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:17:10.512 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:17:10.512 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:17:10.512 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:17:10.512 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:17:10.512 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
11:17:13.486 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:17:13.487 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 320(Integer) 
11:17:13.490 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:17:13.491 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy, 310, 3, 1 
11:17:13.494 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:17:13.496 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:17:13.496 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:17:13.498 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:17:13.498 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:17:13.498 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:17:13.498 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:17:16.655 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:17:16.656 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:17:16.673 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:17:16.673 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
11:17:16.673 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:17:16.675 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
11:17:16.677 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:17:16.679 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:17:16.679 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 322, 원글#2의 답글#3, 원글#2의 답글#3, 박토미, 2023-06-21 11:07:48, tommy 
11:17:16.679 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:17:16.679 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:17:16.679 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:17:16.679 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:17:16.679 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:17:16.680 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:17:16.680 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:17:16.680 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:17:16.680 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:17:16.680 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:17:16.680 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:17:16.680 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:17:16.680 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:17:16.680 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
11:17:16.680 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:17:16.680 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:17:16.680 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:17:16.680 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:17:16.681 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:17:16.681 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:17:16.681 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
11:17:17.675 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:17:17.676 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 321(Integer) 
11:17:17.678 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:17:17.679 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy, 310, 3, 1 
11:17:17.687 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:17:17.688 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:17:17.688 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:17:17.690 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:17:17.690 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:17:17.690 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:17:17.690 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:17:21.844 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:17:21.844 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:17:21.854 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:17:21.854 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
11:17:21.854 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:17:21.855 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
11:17:21.855 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:17:21.856 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:17:21.856 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 322, 원글#2의 답글#3, 원글#2의 답글#3, 박토미, 2023-06-21 11:07:48, tommy 
11:17:21.856 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:17:21.856 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:17:21.856 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:17:21.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:17:21.858 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:17:21.858 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:17:21.858 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:17:21.858 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
11:17:22.892 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:17:22.893 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 322(Integer) 
11:17:22.905 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:17:22.905 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 322, 원글#2의 답글#3, 원글#2의 답글#3, 박토미, 2023-06-21 11:07:48, tommy, 310, 2, 1 
11:17:22.906 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:17:22.906 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:17:22.907 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:17:22.909 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:17:22.909 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:17:22.909 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:17:22.909 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:17:26.178 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:17:26.179 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:17:26.201 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:17:26.201 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
11:17:26.201 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:17:26.202 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
11:17:26.202 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:17:26.203 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:17:26.203 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 322, 원글#2의 답글#3, 원글#2의 답글#3, 박토미, 2023-06-21 11:07:48, tommy 
11:17:26.203 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:17:26.204 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:17:26.205 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:17:26.205 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:17:26.205 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:17:26.205 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:17:26.205 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
11:26:20.212 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:26:20.213 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 320(Integer) 
11:26:20.216 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:26:20.217 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy, 310, 3, 1 
11:26:20.220 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:26:20.221 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:26:20.221 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:26:20.224 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:26:20.224 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:26:20.224 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:26:20.224 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:26:24.363 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:26:24.363 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:26:24.381 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:26:24.381 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
11:26:24.381 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:26:24.382 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_id DESC LIMIT ?,? 
11:26:24.382 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:26:24.383 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:26:24.383 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 322, 원글#2의 답글#3, 원글#2의 답글#3, 박토미, 2023-06-21 11:07:48, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:26:24.384 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:26:24.385 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:26:24.385 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:26:24.385 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:26:24.385 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:26:24.385 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
11:30:54.041 WARN  --- [Thread-11] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-2 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
11:30:54.094 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
11:30:54.094 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
11:30:54.094 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
11:30:54.442 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.364 seconds (JVM running for 1610.016) 
11:30:56.002 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:30:56.003 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:30:56.008 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:30:56.008 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
11:30:56.009 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:30:56.009 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:30:56.010 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:30:56.012 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:30:56.012 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:30:56.012 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:30:56.013 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 322, 원글#2의 답글#3, 원글#2의 답글#3, 박토미, 2023-06-21 11:07:48, tommy 
11:30:56.013 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:30:56.013 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:30:56.013 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:30:56.013 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:30:56.013 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:30:56.013 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:30:56.014 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:30:56.014 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:30:56.014 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:30:56.014 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:30:56.014 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:30:56.014 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:30:56.015 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:30:56.016 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:30:56.017 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:30:56.017 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:30:56.017 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:30:56.017 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:30:56.017 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
11:31:39.611 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:31:39.612 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:31:39.625 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:31:39.625 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
11:31:39.625 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:31:39.626 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:31:39.626 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 20(Integer), 20(Integer) 
11:31:39.627 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:31:39.628 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:31:39.628 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:31:39.628 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
11:31:39.628 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
11:31:39.628 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
11:31:39.628 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
11:31:39.628 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
11:31:39.628 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
11:31:39.628 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 112, bList test, test, 김해피, 2023-06-12 23:50:34, null 
11:31:39.628 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 134, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
11:31:39.628 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 136, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
11:31:39.629 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 137, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
11:31:39.629 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 139, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
11:31:39.629 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 140, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
11:31:39.629 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 99, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
11:31:39.629 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 98, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
11:31:39.629 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 97, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
11:31:39.629 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 96, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
11:31:39.629 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 89, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
11:31:39.629 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 88, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
11:31:39.629 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:31:39.629 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
11:31:46.706 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:31:46.706 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:31:46.721 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:31:46.721 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
11:31:46.722 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:31:46.722 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:31:46.722 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 40(Integer), 20(Integer) 
11:31:46.724 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:31:46.724 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 155, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
11:31:46.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 156, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
11:31:46.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 157, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
11:31:46.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 159, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
11:31:46.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 160, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
11:31:46.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 161, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
11:31:46.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 162, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
11:31:46.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 164, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
11:31:46.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 165, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
11:31:46.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 166, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
11:31:46.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 167, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
11:31:46.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 169, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
11:31:46.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 170, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
11:31:46.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 171, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
11:31:46.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 172, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
11:31:46.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 173, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
11:31:46.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 175, bList test, test, 김해피, 2023-06-12 23:50:34, null 
11:31:46.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 182, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
11:31:46.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 183, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
11:31:46.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 184, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
11:31:46.726 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:31:46.727 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
11:31:48.434 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:31:48.435 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:31:48.454 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:31:48.454 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
11:31:48.454 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:31:48.454 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:31:48.454 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:31:48.455 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:31:48.455 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 322, 원글#2의 답글#3, 원글#2의 답글#3, 박토미, 2023-06-21 11:07:48, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:31:48.456 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:31:48.456 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:31:48.457 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
11:39:28.048 WARN  --- [Thread-15] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-3 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
11:39:28.121 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
11:39:28.121 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
11:39:28.121 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
11:39:28.456 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.374 seconds (JVM running for 2124.035) 
11:39:33.549 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:39:33.549 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 322(Integer) 
11:39:33.552 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:39:33.552 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 322, 원글#2의 답글#3, 원글#2의 답글#3, 박토미, 2023-06-21 11:07:48, tommy, 310, 2, 1 
11:39:33.553 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:39:33.558 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:39:33.559 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:39:33.560 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:39:33.560 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:39:33.560 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:39:33.560 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:39:34.656 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:39:34.658 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 322(Integer) 
11:39:34.661 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:39:34.669 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 322, 원글#2의 답글#3, 원글#2의 답글#3, 박토미, 2023-06-21 11:07:48, tommy, 310, 2, 1 
11:39:34.669 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:39:34.669 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
11:39:34.670 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 322(Integer) 
11:39:34.671 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
11:39:34.671 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 삭제 성공! 
11:39:35.695 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:39:35.695 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:39:35.710 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:39:35.710 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
11:39:35.713 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:39:35.717 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:39:35.719 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:39:35.724 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:39:35.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:39:35.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:39:35.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy 
11:39:35.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:39:35.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:39:35.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:39:35.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:39:35.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:39:35.725 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:39:35.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:39:35.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:39:35.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:39:35.726 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:39:35.727 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:39:35.727 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:39:35.728 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:39:35.728 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:39:35.728 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:39:35.728 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:39:35.728 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:39:35.728 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:39:35.729 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
11:39:36.819 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:39:36.820 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 320(Integer) 
11:39:36.822 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:39:36.822 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy, 310, 3, 1 
11:39:36.823 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:39:36.826 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:39:36.826 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:39:36.827 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:39:36.827 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:39:36.828 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:39:36.828 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:39:37.643 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:39:37.644 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 320(Integer) 
11:39:37.648 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:39:37.648 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 320, 원글#2의 답글#1, 원글#2의 답글#1, 박토미, 2023-06-21 00:17:22, tommy, 310, 3, 1 
11:39:37.655 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:39:37.657 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
11:39:37.659 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 320(Integer) 
11:39:37.665 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
11:39:37.665 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 삭제 성공! 
11:39:38.734 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:39:38.735 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:39:38.751 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:39:38.751 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
11:39:38.751 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:39:38.751 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:39:38.752 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:39:38.753 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:39:38.754 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:39:38.754 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:39:38.754 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:39:38.754 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:39:38.754 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
11:39:39.617 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:39:39.618 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 321(Integer) 
11:39:39.620 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:39:39.621 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy, 310, 3, 1 
11:39:39.621 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:39:39.622 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:39:39.622 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:39:39.631 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:39:39.631 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:39:39.631 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:39:39.631 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:39:40.287 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:39:40.288 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 321(Integer) 
11:39:40.292 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:39:40.292 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 321, 원글#2의 답글#2, 원글#2의 답글#2, 박토미, 2023-06-21 00:20:29, tommy, 310, 3, 1 
11:39:40.293 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:39:40.294 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
11:39:40.294 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 321(Integer) 
11:39:40.303 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
11:39:40.304 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 삭제 성공! 
11:39:41.421 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:39:41.421 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:39:41.443 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:39:41.443 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
11:39:41.443 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:39:41.444 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:39:41.444 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:39:41.445 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:39:41.445 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:39:41.446 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
11:39:41.446 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:39:41.447 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
11:39:42.740 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:39:42.740 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:39:42.746 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:39:42.746 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
11:39:42.746 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:39:42.747 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:39:42.748 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:39:42.758 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:39:42.758 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:39:42.758 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:39:42.758 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:39:45.214 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:39:45.216 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:39:45.235 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:39:45.235 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
11:39:45.235 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:39:45.235 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:39:45.236 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:39:45.237 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:39:45.237 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:39:45.237 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:39:45.237 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:39:45.237 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:39:45.237 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:39:45.237 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:39:45.237 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:39:45.237 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:39:45.237 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:39:45.237 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:39:45.237 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:39:45.237 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:39:45.238 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:39:45.238 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:39:45.238 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:39:45.238 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:39:45.238 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:39:45.238 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:39:45.238 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:39:45.238 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
11:39:45.238 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:39:45.238 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
11:39:46.336 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:39:46.337 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
11:39:46.348 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:39:46.350 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
11:39:46.351 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:39:46.352 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:39:46.352 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:39:46.354 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:39:46.354 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:39:46.354 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:39:46.354 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:40:12.074 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
11:40:12.075 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
11:40:12.078 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
11:40:12.078 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
11:40:12.079 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
11:40:12.081 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
11:40:12.082 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 311(Integer), 1(Integer), 1(Integer) 
11:40:12.092 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
11:40:12.092 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
11:40:12.093 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 1(Integer), 311(Integer), 1(Integer) 
11:40:12.095 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
11:40:13.127 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:40:13.127 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:40:13.142 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:40:13.142 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
11:40:13.142 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:40:13.143 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:40:13.143 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:40:13.144 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:40:13.144 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 323, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 11:40:12, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:40:13.145 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:40:13.145 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:40:13.145 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
11:40:23.680 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:40:23.681 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 323(Integer) 
11:40:23.686 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:40:23.687 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 323, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 11:40:12, tommy, 311, 1, 1 
11:40:23.687 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:40:23.688 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:40:23.688 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:40:23.692 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:40:23.692 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:40:23.692 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:40:23.695 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:40:26.627 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:40:26.629 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 323(Integer) 
11:40:26.634 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:40:26.635 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 323, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 11:40:12, tommy, 311, 1, 1 
11:40:26.635 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:40:26.636 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:40:26.636 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:40:26.638 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:40:26.639 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:40:26.639 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:40:26.642 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:40:27.139 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:40:27.139 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:40:27.159 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:40:27.159 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
11:40:27.160 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:40:27.160 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:40:27.160 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:40:27.161 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:40:27.162 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 323, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 11:40:12, tommy 
11:40:27.162 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:40:27.162 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:40:27.162 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:40:27.162 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:40:27.162 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:40:27.162 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:40:27.162 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:40:27.162 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:40:27.162 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:40:27.162 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:40:27.162 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:40:27.163 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:40:27.163 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:40:27.163 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:40:27.163 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:40:27.163 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:40:27.163 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:40:27.163 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:40:27.163 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:40:27.163 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:40:27.163 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
11:40:29.914 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:40:29.915 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
11:40:29.919 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:40:29.920 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 2, 0 
11:40:29.920 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:40:29.922 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:40:29.924 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:40:29.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:40:29.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:40:29.928 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:40:29.928 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:40:37.067 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
11:40:37.068 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
11:40:37.071 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
11:40:37.071 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
11:40:37.077 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
11:40:37.078 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
11:40:37.079 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#2(String), 답글2(String), 박토미(String), tommy(String), 311(Integer), 2(Integer), 1(Integer) 
11:40:37.083 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
11:40:37.083 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
11:40:37.083 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 311(Integer), 2(Integer) 
11:40:37.085 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
11:40:38.155 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:40:38.155 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:40:38.178 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:40:38.178 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
11:40:38.178 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:40:38.178 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:40:38.179 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 323, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 11:40:12, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 324, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 11:40:37, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:40:38.180 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:40:38.181 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:40:38.181 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:40:38.181 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
11:40:40.306 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:40:40.307 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
11:40:40.309 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:40:40.310 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 3, 0 
11:40:40.310 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:40:40.312 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:40:40.312 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:40:40.314 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:40:40.315 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:40:40.315 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:40:40.315 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:40:48.609 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
11:40:48.610 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
11:40:48.613 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
11:40:48.613 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
11:40:48.613 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
11:40:48.614 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
11:40:48.614 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#3(String), 답글3(String), 박토미(String), tommy(String), 311(Integer), 3(Integer), 1(Integer) 
11:40:48.623 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
11:40:48.624 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
11:40:48.624 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 3(Integer), 311(Integer), 3(Integer) 
11:40:48.626 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
11:40:49.625 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:40:49.626 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:40:49.640 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:40:49.640 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
11:40:49.641 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:40:49.641 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:40:49.642 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:40:49.643 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:40:49.643 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 323, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 11:40:12, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 324, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 11:40:37, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 325, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 11:40:48, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:40:49.644 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:40:49.645 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:40:49.645 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:40:49.645 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:40:49.645 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:40:49.645 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:40:49.645 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
11:40:51.317 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:40:51.318 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
11:40:51.321 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:40:51.322 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 4, 0 
11:40:51.322 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:40:51.323 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:40:51.323 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:40:51.333 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:40:51.333 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:40:51.334 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:40:51.334 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:41:00.811 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
11:41:00.812 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
11:41:00.815 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
11:41:00.815 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
11:41:00.815 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
11:41:00.816 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
11:41:00.818 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#4(String), 답글4(String), 박토미(String), tommy(String), 311(Integer), 4(Integer), 1(Integer) 
11:41:00.824 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
11:41:00.824 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
11:41:00.824 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 4(Integer), 311(Integer), 4(Integer) 
11:41:00.827 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
11:41:01.852 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:41:01.853 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:41:01.871 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:41:01.871 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 127 
11:41:01.871 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:41:01.872 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:41:01.872 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:41:01.873 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:41:01.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 323, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 11:40:12, tommy 
11:41:01.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 324, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 11:40:37, tommy 
11:41:01.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 325, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 11:40:48, tommy 
11:41:01.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 326, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 11:41:00, tommy 
11:41:01.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:41:01.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:41:01.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:41:01.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:41:01.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:41:01.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:41:01.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:41:01.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:41:01.875 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:41:01.875 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:41:01.875 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:41:01.875 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:41:01.875 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:41:01.875 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:41:01.875 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:41:01.875 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:41:01.875 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:41:01.875 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
11:41:03.226 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:41:03.227 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
11:41:03.232 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:41:03.233 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 5, 0 
11:41:03.233 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:41:03.233 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:41:03.234 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:41:03.236 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:41:03.236 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:41:03.236 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:41:03.237 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:41:11.319 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
11:41:11.320 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
11:41:11.324 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
11:41:11.324 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
11:41:11.325 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
11:41:11.326 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
11:41:11.333 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#5(String), 답글5(String), 박토미(String), tommy(String), 311(Integer), 5(Integer), 1(Integer) 
11:41:11.337 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
11:41:11.337 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
11:41:11.337 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 5(Integer), 311(Integer), 5(Integer) 
11:41:11.339 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
11:41:12.142 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:41:12.143 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:41:12.159 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:41:12.159 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 128 
11:41:12.159 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:41:12.160 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:41:12.160 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:41:12.161 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:41:12.161 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 323, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 11:40:12, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 324, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 11:40:37, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 325, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 11:40:48, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 326, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 11:41:00, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 327, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 11:41:11, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:41:12.162 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:41:12.162 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:41:12.162 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
11:43:08.104 WARN  --- [Thread-19] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-4 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
11:43:08.175 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
11:43:08.175 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
11:43:08.175 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
11:43:08.484 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.337 seconds (JVM running for 2344.065) 
11:43:29.458 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:43:29.458 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:43:29.466 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:43:29.466 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
11:43:29.467 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:43:29.468 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:43:29.468 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:43:29.469 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:43:29.469 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:43:29.470 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:43:29.470 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:43:29.470 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:43:29.470 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:43:29.470 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:43:29.470 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:43:29.470 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:43:29.470 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:43:29.470 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:43:29.470 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:43:29.470 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:43:29.471 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:43:29.471 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:43:29.471 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:43:29.472 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:43:29.473 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:43:29.473 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:43:29.473 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:43:29.473 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
11:43:29.473 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:43:29.473 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
11:43:30.951 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:43:30.952 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
11:43:30.955 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:43:30.956 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 6, 0 
11:43:30.964 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:43:30.965 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:43:30.965 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:43:30.966 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:43:30.966 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:43:30.967 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:43:30.967 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:43:39.003 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:43:39.004 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:43:39.026 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:43:39.026 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
11:43:39.027 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:43:39.027 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:43:39.027 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:43:39.028 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:43:39.029 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
11:43:39.029 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:43:39.030 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
11:43:41.697 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:43:41.698 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:43:41.703 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:43:41.703 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
11:43:41.704 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:43:41.706 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:43:41.707 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:43:41.709 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:43:41.709 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:43:41.710 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:43:41.710 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:43:52.769 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
11:43:52.770 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
11:43:52.775 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
11:43:52.776 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
11:43:52.776 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
11:43:52.777 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? +1, ? ) 
11:43:52.778 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 310(Integer), 1(Integer), 1(Integer) 
11:43:52.793 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
11:43:52.794 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
11:43:52.794 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 1(Integer), 310(Integer), 1(Integer) 
11:43:52.796 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
11:43:53.784 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:43:53.785 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:43:53.800 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:43:53.800 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
11:43:53.800 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:43:53.801 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:43:53.801 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:43:53.802 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:43:53.802 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 328, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 11:43:52, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:43:53.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:43:53.803 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:43:53.804 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
11:44:00.582 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:44:00.583 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:44:00.584 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:44:00.585 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 2, 0 
11:44:00.586 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:44:00.588 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:44:00.588 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:44:00.590 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:44:00.590 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:44:00.590 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:44:00.590 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:44:01.728 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:44:01.729 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:44:01.751 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:44:01.751 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
11:44:01.751 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:44:01.752 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:44:01.752 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:44:01.753 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:44:01.753 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 328, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 11:43:52, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:44:01.754 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:44:01.754 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:44:01.754 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
11:44:03.866 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:44:03.867 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 328(Integer) 
11:44:03.870 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:44:03.870 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 328, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 11:43:52, tommy, 310, 2, 1 
11:44:03.871 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:44:03.874 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:44:03.874 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:44:03.882 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:44:03.883 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:44:03.883 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:44:03.883 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:44:06.801 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:44:06.802 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:44:06.820 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:44:06.821 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
11:44:06.821 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:44:06.821 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:44:06.821 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:44:06.822 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:44:06.822 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:44:06.823 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 328, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 11:43:52, tommy 
11:44:06.823 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:44:06.823 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:44:06.823 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:44:06.823 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:44:06.823 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:44:06.823 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:44:06.823 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:44:06.824 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:44:06.824 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:44:06.824 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:44:06.824 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:44:06.824 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:44:06.824 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:44:06.824 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:44:06.824 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:44:06.824 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:44:06.824 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:44:06.824 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:44:06.824 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:44:06.825 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
11:44:07.907 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:44:07.908 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:44:07.921 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:44:07.921 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 2, 0 
11:44:07.922 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:44:07.923 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:44:07.923 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:44:07.925 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:44:07.925 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:44:07.925 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:44:07.925 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:44:11.085 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:44:11.086 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:44:11.103 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:44:11.103 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
11:44:11.103 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:44:11.103 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:44:11.103 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:44:11.104 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:44:11.104 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:44:11.104 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 328, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 11:43:52, tommy 
11:44:11.104 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:44:11.105 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:44:11.105 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:44:11.105 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
11:44:51.935 WARN  --- [Thread-23] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-5 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
11:44:52.004 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
11:44:52.004 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
11:44:52.005 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
11:44:52.312 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.332 seconds (JVM running for 2447.893) 
11:44:54.869 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:44:54.869 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 328(Integer) 
11:44:54.872 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:44:54.873 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 328, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 11:43:52, tommy, 310, 2, 1 
11:44:54.873 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:44:54.874 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:44:54.874 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:44:54.876 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:44:54.876 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:44:54.876 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:44:54.876 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:44:55.905 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:44:55.906 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 328(Integer) 
11:44:55.909 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:44:55.910 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 328, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 11:43:52, tommy, 310, 2, 1 
11:44:55.910 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:44:55.913 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
11:44:55.914 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 328(Integer) 
11:44:55.918 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
11:44:55.918 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 삭제 성공! 
11:44:56.880 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:44:56.881 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:44:56.891 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:44:56.892 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
11:44:56.892 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:44:56.893 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:44:56.893 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:44:56.894 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:44:56.894 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:44:56.895 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:44:56.895 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:44:56.895 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:44:56.895 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:44:56.895 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:44:56.895 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:44:56.895 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:44:56.896 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:44:56.896 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:44:56.896 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:44:56.896 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:44:56.896 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:44:56.897 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:44:56.897 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:44:56.898 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:44:56.898 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:44:56.898 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:44:56.898 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:44:56.898 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
11:44:56.898 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:44:56.898 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
11:44:59.501 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:44:59.502 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 309(Integer) 
11:44:59.508 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:44:59.508 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy, 309, 1, 0 
11:44:59.509 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:44:59.510 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:44:59.510 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:44:59.513 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:44:59.513 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:44:59.514 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:44:59.514 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:45:01.966 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:45:01.967 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:45:01.985 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:45:01.986 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
11:45:01.986 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:45:01.987 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:45:01.987 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:45:01.988 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:45:01.989 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
11:45:01.990 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:45:01.990 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
11:45:03.237 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:45:03.239 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:45:03.244 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:45:03.244 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 2, 0 
11:45:03.245 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:45:03.245 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:45:03.245 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:45:03.248 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:45:03.248 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:45:03.249 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:45:03.249 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:45:05.000 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:45:05.000 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:45:05.015 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:45:05.015 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
11:45:05.015 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:45:05.016 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:45:05.016 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:45:05.017 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:45:05.017 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:45:05.017 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:45:05.017 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:45:05.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:45:05.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:45:05.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:45:05.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:45:05.018 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:45:05.019 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:45:05.019 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:45:05.019 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:45:05.019 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:45:05.019 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:45:05.019 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:45:05.019 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:45:05.019 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:45:05.019 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:45:05.019 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:45:05.019 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:45:05.019 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
11:45:05.020 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:45:05.020 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
11:45:42.982 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:45:42.982 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:45:42.986 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:45:42.987 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
11:45:42.987 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:45:42.988 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:45:42.988 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:45:42.997 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:45:42.998 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:45:42.999 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:45:43.000 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:45:51.284 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
11:45:51.285 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
11:45:51.288 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
11:45:51.288 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
11:45:51.289 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
11:45:51.289 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? +1, ? ) 
11:45:51.290 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
11:45:51.297 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
11:45:51.298 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
11:45:51.299 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 2(Integer) 
11:45:51.301 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
11:45:52.307 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:45:52.307 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:45:52.322 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:45:52.322 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
11:45:52.322 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:45:52.323 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:45:52.323 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:45:52.324 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:45:52.324 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:45:52.324 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 329, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 11:45:51, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:45:52.325 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:45:52.326 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:45:52.326 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:45:52.326 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:45:52.326 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
11:45:56.747 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:45:56.748 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 329(Integer) 
11:45:56.750 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:45:56.750 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 329, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 11:45:51, tommy, 310, 3, 1 
11:45:56.751 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:45:56.751 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:45:56.752 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:45:56.753 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:45:56.753 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:45:56.754 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:45:56.754 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:45:57.645 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:45:57.645 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 329(Integer) 
11:45:57.647 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:45:57.648 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 329, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 11:45:51, tommy, 310, 3, 1 
11:45:57.648 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:45:57.649 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 수정 시도! 
11:46:02.435 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.editBoard : ==>  Preparing: UPDATE lc_board SET b_title = ?, b_content = ? WHERE b_id = ? 
11:46:02.436 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.editBoard : ==> Parameters: 원글#2의 답글#1(String), 답글1(String), 329(Integer) 
11:46:02.441 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.editBoard : <==    Updates: 1 
11:46:02.441 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 수정 완료!! 
11:46:03.530 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:46:03.531 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:46:03.535 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:46:03.535 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
11:46:03.535 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:46:03.536 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:46:03.536 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:46:03.541 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:46:03.541 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:46:03.547 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:46:03.547 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 329, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 11:45:51, tommy 
11:46:03.547 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:46:03.547 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:46:03.547 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:46:03.547 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:46:03.547 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:46:03.547 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:46:03.547 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:46:03.547 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:46:03.547 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:46:03.548 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:46:03.548 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:46:03.548 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:46:03.548 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:46:03.548 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:46:03.548 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:46:03.548 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:46:03.548 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
11:46:03.548 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:46:03.548 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
11:46:05.522 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:46:05.523 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:46:05.525 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:46:05.526 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
11:46:05.527 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:46:05.531 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:46:05.531 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:46:05.533 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:46:05.533 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:46:05.533 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:46:05.534 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:46:11.990 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
11:46:11.991 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
11:46:11.994 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
11:46:11.994 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
11:46:11.995 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
11:46:11.995 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? +1, ? ) 
11:46:12.000 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#2(String), 답글2(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
11:46:12.006 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
11:46:12.007 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
11:46:12.007 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 2(Integer) 
11:46:12.009 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
11:46:12.636 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:46:12.636 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:46:12.656 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:46:12.656 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
11:46:12.657 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:46:12.658 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:46:12.658 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:46:12.660 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:46:12.660 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:46:12.660 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:46:12.660 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 329, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 11:45:51, tommy 
11:46:12.660 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 330, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 11:46:12, tommy 
11:46:12.661 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:46:12.661 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:46:12.661 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:46:12.661 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:46:12.661 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:46:12.661 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:46:12.661 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:46:12.662 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:46:12.662 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:46:12.662 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:46:12.662 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:46:12.662 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:46:12.662 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:46:12.663 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:46:12.664 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:46:12.664 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
11:46:12.664 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:46:12.665 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
11:46:16.118 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:46:16.119 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:46:16.128 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:46:16.128 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
11:46:16.129 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:46:16.129 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:46:16.129 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:46:16.131 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:46:16.131 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:46:16.131 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:46:16.131 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:46:24.391 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
11:46:24.392 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
11:46:24.395 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
11:46:24.395 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
11:46:24.395 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
11:46:24.396 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? +1, ? ) 
11:46:24.398 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#3(String), 답글3(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
11:46:24.411 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
11:46:24.411 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
11:46:24.412 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 2(Integer) 
11:46:24.413 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 2 
11:46:25.156 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:46:25.157 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:46:25.172 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:46:25.172 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
11:46:25.172 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:46:25.176 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:46:25.177 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:46:25.182 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:46:25.182 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:46:25.182 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:46:25.182 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 329, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 11:45:51, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 331, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 11:46:24, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 330, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 11:46:12, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
11:46:25.183 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:46:25.184 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:46:25.184 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:46:25.184 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:46:25.184 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:46:25.184 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
11:46:38.089 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
11:46:38.090 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
11:46:38.092 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
11:46:38.093 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
11:46:38.094 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
11:46:38.097 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
11:46:38.097 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
11:46:38.100 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
11:46:38.100 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
11:46:38.101 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
11:46:38.102 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
11:46:44.699 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
11:46:44.700 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
11:46:44.706 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
11:46:44.706 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
11:46:44.706 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
11:46:44.707 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ? +1, ? ) 
11:46:44.708 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#4(String), 답글4(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
11:46:44.716 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
11:46:44.716 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
11:46:44.717 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 2(Integer) 
11:46:44.718 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 3 
11:46:45.648 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
11:46:45.648 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
11:46:45.664 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
11:46:45.665 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 127 
11:46:45.665 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
11:46:45.670 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
11:46:45.671 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
11:46:45.674 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
11:46:45.674 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
11:46:45.674 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
11:46:45.674 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 329, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 11:45:51, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 331, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 11:46:24, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 330, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 11:46:12, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 332, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 11:46:44, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
11:46:45.675 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
11:46:45.675 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
11:46:45.676 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
11:48:22.914 WARN  --- [Thread-27] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-6 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
11:48:22.977 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
11:48:22.977 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
11:48:22.977 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
11:48:23.308 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.358 seconds (JVM running for 2658.892) 
12:10:54.868 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:10:54.869 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:10:54.874 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:10:54.874 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 127 
12:10:54.875 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:10:54.875 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:10:54.876 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:10:54.877 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:10:54.877 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:10:54.877 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:10:54.877 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 329, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 11:45:51, tommy 
12:10:54.877 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 331, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 11:46:24, tommy 
12:10:54.878 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 330, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 11:46:12, tommy 
12:10:54.878 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 332, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 11:46:44, tommy 
12:10:54.878 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:10:54.878 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:10:54.878 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:10:54.878 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:10:54.878 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:10:54.878 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:10:54.878 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:10:54.878 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:10:54.878 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:10:54.879 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:10:54.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:10:54.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:10:54.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:10:54.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:10:54.881 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:10:54.881 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
12:15:12.621 WARN  --- [Thread-31] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-7 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
12:15:12.695 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:15:12.695 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:15:12.695 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:15:13.018 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.351 seconds (JVM running for 4268.608) 
12:15:36.378 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:15:36.379 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:15:36.395 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:15:36.395 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
12:15:36.396 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:15:36.397 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:15:36.397 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:15:36.398 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:15:36.398 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:15:36.399 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:15:36.399 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:15:36.399 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:15:36.399 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:15:36.399 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:15:36.399 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:15:36.399 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:15:36.399 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:15:36.399 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:15:36.399 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:15:36.399 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:15:36.399 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:15:36.399 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:15:36.400 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:15:36.400 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:15:36.401 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:15:36.401 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:15:36.401 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
12:15:36.401 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
12:15:36.401 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:15:36.402 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
12:15:37.887 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:15:37.888 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
12:15:37.891 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:15:37.891 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
12:15:37.892 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:15:37.893 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:15:37.894 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:15:37.903 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:15:37.903 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:15:37.903 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:15:37.903 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:15:50.869 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
12:15:50.870 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
12:15:50.874 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
12:15:50.874 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
12:15:50.875 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
12:15:50.875 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, (SELECT IFNULL(MAX(b_order), 0) + 1 FROM lc_board WHERE b_group = ?), ? ) 
12:15:50.876 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 310(Integer), 310(Integer), 1(Integer) 
12:15:50.932 ERROR --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: You can't specify target table 'lc_board' for update in FROM clause
### The error may exist in file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/mapper/BoardMapper.xml]
### The error may involve com.lcomputerspring3.example.mapper.BoardMapper.replyTo-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO  lc_board (       b_title,       b_content,       b_writer,       b_datetime,        u_id,       b_group,       b_order,       b_depth           ) VALUES (       ?,          ?,          ?,          now(),          ?,          ?,          (SELECT IFNULL(MAX(b_order), 0) + 1 FROM lc_board WHERE b_group = ?),          ?          )
### Cause: java.sql.SQLException: You can't specify target table 'lc_board' for update in FROM clause
; uncategorized SQLException; SQL state [HY000]; error code [1093]; You can't specify target table 'lc_board' for update in FROM clause; nested exception is java.sql.SQLException: You can't specify target table 'lc_board' for update in FROM clause] with root cause 
java.sql.SQLException: You can't specify target table 'lc_board' for update in FROM clause
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor56.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy76.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy63.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy12/jdk.proxy12.$Proxy97.replyTo(Unknown Source)
	at com.lcomputerspring3.example.service.BoardServiceImpl.replyTo(BoardServiceImpl.java:58)
	at com.lcomputerspring3.example.controller.BoardController.replyToOriginBoardPro(BoardController.java:157)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
12:17:52.004 WARN  --- [Thread-35] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-8 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
12:17:52.071 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:17:52.071 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:17:52.071 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:17:52.378 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.329 seconds (JVM running for 4427.97) 
12:17:56.791 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
12:17:56.791 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
12:17:56.794 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
12:17:56.795 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
12:17:56.795 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
12:17:56.796 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, (SELECT order_num + 1 FROM (SELECT IFNULL(MAX(b_order), 0) AS order_num FROM lc_board WHERE b_group = ?) AS temp), ? ) 
12:17:56.797 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 310(Integer), 310(Integer), 1(Integer) 
12:17:56.800 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
12:17:56.801 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= (SELECT b_order FROM lc_board WHERE b_id = ?) 
12:17:56.801 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 0(Integer) 
12:17:56.804 ERROR --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: You can't specify target table 'lc_board' for update in FROM clause
### The error may exist in file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/mapper/BoardMapper.xml]
### The error may involve com.lcomputerspring3.example.mapper.BoardMapper.updateBOrder-Inline
### The error occurred while setting parameters
### SQL: UPDATE  lc_board     SET  b_order = ? + 1   WHERE  b_group = ?     AND       b_order >= (SELECT b_order FROM lc_board WHERE b_id = ?)
### Cause: java.sql.SQLException: You can't specify target table 'lc_board' for update in FROM clause
; uncategorized SQLException; SQL state [HY000]; error code [1093]; You can't specify target table 'lc_board' for update in FROM clause; nested exception is java.sql.SQLException: You can't specify target table 'lc_board' for update in FROM clause] with root cause 
java.sql.SQLException: You can't specify target table 'lc_board' for update in FROM clause
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor56.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy76.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy63.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy13/jdk.proxy13.$Proxy100.updateBOrder(Unknown Source)
	at com.lcomputerspring3.example.service.BoardServiceImpl.updateBOrder(BoardServiceImpl.java:63)
	at com.lcomputerspring3.example.controller.BoardController.replyToOriginBoardPro(BoardController.java:158)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
12:18:00.065 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:18:00.065 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
12:18:00.067 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:18:00.069 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
12:18:00.069 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:18:00.071 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:18:00.071 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:18:00.075 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:18:00.075 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:18:00.076 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:18:00.083 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:18:12.840 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
12:18:12.841 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
12:18:12.847 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
12:18:12.847 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
12:18:12.848 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
12:18:12.848 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, (SELECT order_num + 1 FROM (SELECT IFNULL(MAX(b_order), 0) AS order_num FROM lc_board WHERE b_group = ?) AS temp), ? ) 
12:18:12.849 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 310(Integer), 310(Integer), 1(Integer) 
12:18:12.856 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
12:18:12.856 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= (SELECT b_order FROM lc_board WHERE b_id = ?) 
12:18:12.856 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 0(Integer) 
12:18:12.858 ERROR --- [http-nio-8080-exec-5] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: You can't specify target table 'lc_board' for update in FROM clause
### The error may exist in file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/mapper/BoardMapper.xml]
### The error may involve com.lcomputerspring3.example.mapper.BoardMapper.updateBOrder-Inline
### The error occurred while setting parameters
### SQL: UPDATE  lc_board     SET  b_order = ? + 1   WHERE  b_group = ?     AND       b_order >= (SELECT b_order FROM lc_board WHERE b_id = ?)
### Cause: java.sql.SQLException: You can't specify target table 'lc_board' for update in FROM clause
; uncategorized SQLException; SQL state [HY000]; error code [1093]; You can't specify target table 'lc_board' for update in FROM clause; nested exception is java.sql.SQLException: You can't specify target table 'lc_board' for update in FROM clause] with root cause 
java.sql.SQLException: You can't specify target table 'lc_board' for update in FROM clause
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor56.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy76.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy63.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy13/jdk.proxy13.$Proxy100.updateBOrder(Unknown Source)
	at com.lcomputerspring3.example.service.BoardServiceImpl.updateBOrder(BoardServiceImpl.java:63)
	at com.lcomputerspring3.example.controller.BoardController.replyToOriginBoardPro(BoardController.java:158)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
12:19:53.000 WARN  --- [Thread-39] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-9 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
12:19:53.067 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:19:53.067 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:19:53.067 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:19:53.367 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.326 seconds (JVM running for 4548.96) 
12:20:13.267 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
12:20:13.268 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
12:20:13.270 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
12:20:13.270 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
12:20:13.271 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
12:20:13.272 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
12:20:13.272 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
12:20:13.277 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
12:20:13.278 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
12:20:13.278 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 2(Integer) 
12:20:13.281 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 2 
12:20:14.418 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:20:14.418 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:20:14.425 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:20:14.425 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
12:20:14.426 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:20:14.427 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:20:14.428 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:20:14.431 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:20:14.431 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:20:14.432 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:20:14.433 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 335, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:20:13, tommy 
12:20:14.433 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 333, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:17:56, tommy 
12:20:14.433 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 334, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:18:12, tommy 
12:20:14.434 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:20:14.434 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:20:14.434 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:20:14.434 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:20:14.434 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:20:14.434 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:20:14.434 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:20:14.434 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:20:14.434 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:20:14.434 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:20:14.436 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:20:14.438 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:20:14.438 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:20:14.438 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:20:14.438 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:20:14.438 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:20:14.440 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
12:20:20.805 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:20:20.805 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 335(Integer) 
12:20:20.807 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:20:20.808 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 335, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:20:13, tommy, 310, 2, 1 
12:20:20.808 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:20:20.810 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:20:20.810 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:20:20.813 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:20:20.813 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:20:20.813 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:20:20.815 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:20:24.529 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:20:24.529 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:20:24.540 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:20:24.540 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
12:20:24.540 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:20:24.540 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:20:24.541 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:20:24.543 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:20:24.543 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:20:24.543 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:20:24.545 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 335, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:20:13, tommy 
12:20:24.545 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 333, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:17:56, tommy 
12:20:24.546 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 334, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:18:12, tommy 
12:20:24.546 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:20:24.546 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:20:24.546 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:20:24.546 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:20:24.546 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:20:24.546 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:20:24.546 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:20:24.546 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:20:24.546 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:20:24.547 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:20:24.547 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:20:24.547 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:20:24.547 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:20:24.547 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:20:24.547 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:20:24.547 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:20:24.547 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
12:20:25.829 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:20:25.829 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 333(Integer) 
12:20:25.835 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:20:25.835 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 333, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:17:56, tommy, 310, 3, 1 
12:20:25.835 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:20:25.836 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:20:25.836 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:20:25.837 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:20:25.837 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:20:25.837 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:20:25.837 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:20:27.837 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:20:27.838 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:20:27.848 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:20:27.849 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
12:20:27.849 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:20:27.849 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:20:27.850 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:20:27.856 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:20:27.856 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:20:27.856 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:20:27.856 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 335, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:20:13, tommy 
12:20:27.856 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 333, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:17:56, tommy 
12:20:27.856 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 334, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:18:12, tommy 
12:20:27.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:20:27.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:20:27.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:20:27.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:20:27.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:20:27.857 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:20:27.858 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:20:27.858 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:20:27.858 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:20:27.858 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:20:27.858 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:20:27.858 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:20:27.858 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:20:27.858 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:20:27.858 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:20:27.858 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:20:27.859 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
12:20:28.786 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:20:28.787 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 334(Integer) 
12:20:28.788 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:20:28.789 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 334, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:18:12, tommy, 310, 3, 1 
12:20:28.789 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:20:28.790 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:20:28.790 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:20:28.790 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:20:28.791 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:20:28.791 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:20:28.791 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:20:31.268 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:20:31.269 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:20:31.288 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:20:31.288 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
12:20:31.288 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:20:31.289 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:20:31.290 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:20:31.292 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:20:31.292 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:20:31.292 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:20:31.292 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 335, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:20:13, tommy 
12:20:31.292 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 333, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:17:56, tommy 
12:20:31.292 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 334, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:18:12, tommy 
12:20:31.292 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:20:31.293 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:20:31.293 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:20:31.294 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
12:20:33.491 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:20:33.492 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 335(Integer) 
12:20:33.494 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:20:33.494 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 335, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:20:13, tommy, 310, 2, 1 
12:20:33.494 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:20:33.495 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:20:33.495 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:20:33.496 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:20:33.496 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:20:33.496 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:20:33.496 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:20:34.712 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:20:34.712 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 335(Integer) 
12:20:34.714 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:20:34.714 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 335, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:20:13, tommy, 310, 2, 1 
12:20:34.714 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:20:34.714 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
12:20:34.715 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 335(Integer) 
12:20:34.718 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
12:20:34.718 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 삭제 성공! 
12:20:35.929 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:20:35.929 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:20:35.939 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:20:35.939 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
12:20:35.939 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:20:35.939 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:20:35.940 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:20:35.940 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:20:35.940 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:20:35.940 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:20:35.940 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 333, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:17:56, tommy 
12:20:35.940 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 334, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:18:12, tommy 
12:20:35.940 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:20:35.941 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:20:35.941 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:20:35.941 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
12:20:37.242 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:20:37.242 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 333(Integer) 
12:20:37.244 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:20:37.244 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 333, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:17:56, tommy, 310, 3, 1 
12:20:37.244 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:20:37.245 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:20:37.245 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:20:37.245 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:20:37.246 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:20:37.246 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:20:37.246 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:20:38.020 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:20:38.021 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 333(Integer) 
12:20:38.023 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:20:38.024 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 333, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:17:56, tommy, 310, 3, 1 
12:20:38.026 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:20:38.026 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
12:20:38.026 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 333(Integer) 
12:20:38.035 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
12:20:38.035 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 삭제 성공! 
12:20:38.853 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:20:38.853 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:20:38.864 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:20:38.864 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
12:20:38.864 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:20:38.864 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:20:38.865 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:20:38.866 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:20:38.866 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:20:38.866 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:20:38.866 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 334, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:18:12, tommy 
12:20:38.866 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:20:38.866 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:20:38.867 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:20:38.867 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:20:38.867 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:20:38.867 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:20:38.867 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:20:38.867 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:20:38.867 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:20:38.867 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:20:38.868 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:20:38.868 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:20:38.868 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:20:38.868 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:20:38.868 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:20:38.868 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:20:38.868 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
12:20:38.868 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:20:38.869 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
12:20:39.931 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:20:39.932 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 334(Integer) 
12:20:39.939 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:20:39.940 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 334, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:18:12, tommy, 310, 3, 1 
12:20:39.940 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:20:39.941 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:20:39.941 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:20:39.945 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:20:39.945 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:20:39.946 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:20:39.946 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:20:40.690 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:20:40.691 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 334(Integer) 
12:20:40.693 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:20:40.693 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 334, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:18:12, tommy, 310, 3, 1 
12:20:40.693 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:20:40.693 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
12:20:40.694 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 334(Integer) 
12:20:40.696 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
12:20:40.696 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 삭제 성공! 
12:20:41.582 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:20:41.582 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:20:41.592 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:20:41.592 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
12:20:41.592 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:20:41.592 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:20:41.593 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:20:41.594 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:20:41.595 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:20:41.596 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
12:20:41.596 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
12:20:41.596 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:20:41.596 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
12:23:57.218 WARN  --- [Thread-43] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-10 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
12:23:57.284 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:23:57.284 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:23:57.284 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:23:57.597 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.339 seconds (JVM running for 4793.19) 
12:24:17.260 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:24:17.260 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:24:17.260 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:24:17.563 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.328 seconds (JVM running for 4813.157) 
12:24:46.322 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:24:46.322 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:24:46.322 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:24:46.629 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.328 seconds (JVM running for 4842.223) 
12:25:07.326 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:25:07.326 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:25:07.326 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:25:07.628 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.326 seconds (JVM running for 4863.222) 
12:25:19.201 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:25:19.201 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:25:19.201 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:25:19.513 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.324 seconds (JVM running for 4875.108) 
12:25:21.998 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:25:21.998 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:25:21.998 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:25:22.297 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.309 seconds (JVM running for 4877.892) 
12:25:32.064 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:25:32.065 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
12:25:32.068 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:25:32.069 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
12:25:32.069 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:25:32.071 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:25:32.072 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:25:32.073 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:25:32.073 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:25:32.075 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:25:32.076 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:25:51.177 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
12:25:51.178 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
12:25:51.180 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
12:25:51.180 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
12:25:51.181 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
12:25:51.182 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
12:25:51.183 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
12:25:51.186 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
12:25:51.187 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != ? 
12:25:51.189 ERROR --- [http-nio-8080-exec-3] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'bOrder' not found. Available parameters are [arg2, arg1, arg0, param3, param1, param2]] with root cause 
org.apache.ibatis.binding.BindingException: Parameter 'bOrder' not found. Available parameters are [arg2, arg1, arg0, param3, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:212)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:94)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:88)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy63.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy20/jdk.proxy20.$Proxy114.updateBOrder(Unknown Source)
	at com.lcomputerspring3.example.service.BoardServiceImpl.updateBOrder(BoardServiceImpl.java:63)
	at com.lcomputerspring3.example.controller.BoardController.replyToOriginBoardPro(BoardController.java:158)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
12:27:44.179 WARN  --- [Thread-67] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-11 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
12:27:44.255 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:27:44.255 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:27:44.256 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:27:44.584 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.353 seconds (JVM running for 5020.18) 
12:27:53.149 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:27:53.149 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:27:53.149 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:27:53.462 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.338 seconds (JVM running for 5029.057) 
12:27:58.991 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:27:58.992 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:27:58.992 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:27:59.290 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.322 seconds (JVM running for 5034.885) 
12:28:02.780 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:28:02.780 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:28:02.780 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:28:03.078 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.307 seconds (JVM running for 5038.673) 
12:28:05.569 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:28:05.569 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:28:05.569 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:28:05.868 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.323 seconds (JVM running for 5041.463) 
12:28:16.672 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
12:28:16.673 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
12:28:16.677 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
12:28:16.677 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
12:28:16.678 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
12:28:16.679 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
12:28:16.680 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 310(Integer), 1(Integer), 1(Integer) 
12:28:16.684 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
12:28:16.684 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
12:28:16.685 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 1(Integer), 310(Integer), 1(Integer) 
12:28:16.686 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 2 
12:28:18.152 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:28:18.152 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:28:18.173 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:28:18.173 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
12:28:18.174 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:28:18.174 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:28:18.175 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 337, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:28:16, tommy 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 336, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:25:51, tommy 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:28:18.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:28:18.177 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:28:18.177 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:28:18.178 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:28:18.178 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:28:18.178 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:28:18.178 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:28:18.178 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:28:18.178 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
12:28:20.368 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:28:20.369 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 336(Integer) 
12:28:20.371 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:28:20.372 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 336, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:25:51, tommy, 310, 2, 1 
12:28:20.372 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:28:20.381 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:28:20.383 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:28:20.388 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:28:20.388 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:28:20.388 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:28:20.389 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:28:23.617 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:28:23.617 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:28:23.634 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:28:23.634 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
12:28:23.634 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:28:23.635 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:28:23.635 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:28:23.636 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:28:23.637 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:28:23.637 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 337, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:28:16, tommy 
12:28:23.637 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 336, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:25:51, tommy 
12:28:23.637 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:28:23.638 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:28:23.638 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:28:23.638 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:28:23.638 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:28:23.638 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:28:23.638 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:28:23.638 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:28:23.638 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:28:23.638 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:28:23.638 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:28:23.638 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:28:23.639 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:28:23.639 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:28:23.639 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:28:23.639 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:28:23.639 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:28:23.639 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:28:23.639 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
12:28:25.060 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:28:25.061 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 337(Integer) 
12:28:25.064 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:28:25.064 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 337, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:28:16, tommy, 310, 1, 1 
12:28:25.065 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:28:25.067 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:28:25.068 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:28:25.080 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:28:25.080 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:28:25.080 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:28:25.080 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:28:28.260 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:28:28.262 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:28:28.276 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:28:28.276 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
12:28:28.276 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:28:28.277 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:28:28.277 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:28:28.278 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 337, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:28:16, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 336, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:25:51, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:28:28.279 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:28:28.279 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:28:28.279 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
12:28:30.438 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:28:30.438 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
12:28:30.446 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:28:30.446 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 2, 0 
12:28:30.446 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:28:30.447 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:28:30.447 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:28:30.452 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:28:30.452 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:28:30.452 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:28:30.452 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:28:33.748 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:28:33.749 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:28:33.770 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:28:33.770 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
12:28:33.770 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:28:33.770 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:28:33.770 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 337, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:28:16, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 336, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:25:51, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:28:33.771 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:28:33.772 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:28:33.772 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:28:33.772 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:28:33.772 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:28:33.772 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:28:33.772 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:28:33.772 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
12:28:35.387 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:28:35.387 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 337(Integer) 
12:28:35.391 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:28:35.392 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 337, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:28:16, tommy, 310, 1, 1 
12:28:35.392 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:28:35.393 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:28:35.394 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:28:35.402 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:28:35.403 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:28:35.403 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:28:35.403 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:28:36.134 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:28:36.134 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 337(Integer) 
12:28:36.136 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:28:36.136 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 337, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:28:16, tommy, 310, 1, 1 
12:28:36.136 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:28:36.137 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
12:28:36.137 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 337(Integer) 
12:28:36.145 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
12:28:36.146 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 삭제 성공! 
12:28:37.308 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:28:37.309 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:28:37.324 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:28:37.324 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
12:28:37.324 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:28:37.325 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:28:37.325 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:28:37.326 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:28:37.326 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:28:37.326 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 336, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:25:51, tommy 
12:28:37.326 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:28:37.326 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:28:37.327 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
12:28:37.328 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:28:37.328 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
12:28:38.867 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:28:38.868 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 336(Integer) 
12:28:38.870 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:28:38.870 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 336, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:25:51, tommy, 310, 2, 1 
12:28:38.871 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:28:38.871 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:28:38.872 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:28:38.875 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:28:38.876 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:28:38.876 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:28:38.876 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:28:39.829 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:28:39.830 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 336(Integer) 
12:28:39.833 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:28:39.834 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 336, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:25:51, tommy, 310, 2, 1 
12:28:39.838 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:28:39.840 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
12:28:39.842 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 336(Integer) 
12:28:39.845 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
12:28:39.846 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 삭제 성공! 
12:28:41.307 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:28:41.308 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:28:41.326 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:28:41.326 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
12:28:41.326 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:28:41.326 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:28:41.327 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:28:41.328 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:28:41.328 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:28:41.328 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:28:41.328 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:28:41.328 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:28:41.328 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:28:41.328 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:28:41.328 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:28:41.329 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:28:41.329 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:28:41.329 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:28:41.329 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:28:41.329 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:28:41.329 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:28:41.329 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:28:41.329 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:28:41.329 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:28:41.329 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:28:41.329 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:28:41.329 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
12:28:41.329 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
12:28:41.329 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:28:41.329 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
12:29:07.162 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:29:07.163 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:29:07.194 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:29:07.194 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
12:29:07.194 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:29:07.194 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:29:07.195 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:29:07.196 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
12:29:07.197 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
12:29:07.197 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:29:07.197 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
12:31:41.368 WARN  --- [Thread-87] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-12 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
12:31:41.430 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:31:41.430 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:31:41.430 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:31:41.725 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.319 seconds (JVM running for 5257.321) 
12:31:45.093 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:31:45.094 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
12:31:45.095 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:31:45.097 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
12:31:45.098 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:31:45.099 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:31:45.100 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:31:45.101 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:31:45.101 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:31:45.101 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:31:45.101 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:31:59.485 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
12:31:59.487 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
12:31:59.497 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
12:31:59.497 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
12:31:59.498 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
12:31:59.499 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
12:31:59.499 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 310(Integer), 1(Integer), 1(Integer) 
12:31:59.502 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
12:31:59.503 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order > ? AND b_id != last_insert_id(); 
12:31:59.503 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 1(Integer), 310(Integer), 1(Integer) 
12:31:59.504 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
12:32:00.450 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:32:00.451 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:32:00.467 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:32:00.467 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
12:32:00.467 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:32:00.468 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:32:00.469 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 338, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:31:59, tommy 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:32:00.470 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:32:00.471 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:32:00.472 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:32:00.472 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:32:00.472 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:32:00.472 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:32:00.472 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
12:32:00.472 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:32:00.472 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
12:32:22.519 WARN  --- [Thread-91] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-13 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
12:32:22.585 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 97463 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:32:22.585 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:32:22.585 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:32:22.880 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.321 seconds (JVM running for 5298.477) 
12:49:18.217 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 98767 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:49:18.218 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:49:18.218 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:49:19.398 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 1.396 seconds (JVM running for 1.778) 
12:49:34.981 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
12:49:34.995 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
12:49:35.007 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
12:49:35.008 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
12:49:35.009 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
12:49:35.012 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:49:35.012 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:49:35.013 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:49:35.013 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:49:35.013 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:49:35.109 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:49:35.110 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:49:35.112 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:49:35.113 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:49:35.113 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 338, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:31:59, tommy 
12:49:35.114 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:49:35.114 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:49:35.115 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:49:35.115 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:49:35.115 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:49:35.116 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:49:35.116 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:49:35.117 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:49:35.117 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:49:35.118 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:49:35.118 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:49:35.119 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:49:35.119 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:49:35.120 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:49:35.121 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:49:35.121 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:49:35.122 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:49:35.122 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
12:49:35.123 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:49:37.360 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:49:37.360 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:49:37.363 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:49:37.364 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
12:49:37.365 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:49:37.366 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:49:37.366 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:49:37.368 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:49:37.369 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:49:37.370 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 338, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:31:59, tommy 
12:49:37.370 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:49:37.371 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:49:37.371 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:49:37.372 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:49:37.372 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:49:37.373 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:49:37.373 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:49:37.373 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:49:37.374 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:49:37.375 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:49:37.375 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:49:37.376 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:49:37.377 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:49:37.378 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:49:37.378 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:49:37.379 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:49:37.380 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:49:37.380 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
12:49:37.381 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:49:37.381 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
12:49:44.114 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:49:44.115 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 338(Integer) 
12:49:44.119 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:49:44.120 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 338, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:31:59, tommy, 310, 1, 1 
12:49:44.121 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:49:44.122 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:49:44.123 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:49:44.125 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:49:44.125 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:49:44.125 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:49:44.125 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:49:44.879 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:49:44.880 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 338(Integer) 
12:49:44.885 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:49:44.888 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 338, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:31:59, tommy, 310, 1, 1 
12:49:44.890 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:49:44.891 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
12:49:44.892 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 338(Integer) 
12:49:44.895 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
12:49:44.896 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 삭제 성공! 
12:49:46.036 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:49:46.037 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:49:46.049 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:49:46.049 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
12:49:46.049 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:49:46.050 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:49:46.050 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:49:46.052 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:49:46.052 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:49:46.053 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:49:46.053 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:49:46.053 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:49:46.053 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:49:46.053 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:49:46.053 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:49:46.053 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:49:46.053 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:49:46.054 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:49:46.054 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:49:46.054 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:49:46.054 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:49:46.054 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:49:46.054 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:49:46.055 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:49:46.055 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:49:46.055 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:49:46.055 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
12:49:46.055 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
12:49:46.055 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:49:46.055 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
12:49:47.395 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:49:47.396 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
12:49:47.406 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:49:47.407 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
12:49:47.408 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:49:47.408 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:49:47.408 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:49:47.410 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:49:47.411 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:49:47.411 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:49:47.411 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:51:28.104 WARN  --- [Thread-5] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
12:51:28.178 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 98767 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:51:28.178 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:51:28.178 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:51:28.523 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.384 seconds (JVM running for 130.905) 
12:51:31.707 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:51:31.707 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:51:31.709 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:51:31.709 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
12:51:31.710 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:51:31.711 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:51:31.711 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:51:31.712 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:51:31.713 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:51:31.713 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:51:31.714 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:51:31.714 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:51:31.714 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:51:31.714 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:51:31.714 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:51:31.714 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:51:31.715 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:51:31.715 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:51:31.715 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:51:31.715 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:51:31.715 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:51:31.716 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:51:31.717 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:51:31.718 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:51:31.720 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:51:31.720 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:51:31.721 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
12:51:31.721 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
12:51:31.721 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:51:31.721 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
12:51:33.620 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:51:33.624 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
12:51:33.629 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:51:33.630 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
12:51:33.635 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:51:33.637 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:51:33.637 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:51:33.639 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:51:33.639 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:51:33.639 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:51:33.640 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:53:11.988 WARN  --- [Thread-7] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-2 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
12:53:12.049 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 98767 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:53:12.049 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:53:12.049 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:53:12.311 WARN  --- [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Invalid mapping on handler class [com.lcomputerspring3.example.controller.BoardController]: public java.lang.String com.lcomputerspring3.example.controller.BoardController.replyToOriginBoard(int,int,int,com.lcomputerspring3.example.domain.Board,org.springframework.ui.Model) 
12:53:12.323 ERROR --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Invalid mapping pattern detected: /replyToOriginBoard}
                   ^
Missing preceding open capture character before variable name{

Action:

Fix this pattern in your application or switch to the legacy parser implementation with 'spring.mvc.pathmatch.matching-strategy=ant_path_matcher'.
 
12:54:20.485 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 98767 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:54:20.485 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:54:20.485 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:54:20.817 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.366 seconds (JVM running for 303.2) 
12:54:23.867 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:54:23.868 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:54:23.878 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:54:23.878 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
12:54:23.879 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:54:23.879 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:54:23.879 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:54:23.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:54:23.881 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:54:23.882 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:54:23.882 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:54:23.882 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:54:23.883 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:54:23.883 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
12:54:23.883 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
12:54:23.883 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:54:23.883 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
12:54:26.853 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:54:26.855 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
12:54:26.859 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:54:26.860 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
12:54:26.860 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:54:26.862 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:54:26.862 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:54:26.866 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:54:26.866 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:54:26.867 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:54:26.867 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:54:44.877 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
12:54:44.878 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
12:54:44.881 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
12:54:44.882 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
12:54:44.883 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
12:54:44.885 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
12:54:44.887 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
12:54:44.895 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
12:54:44.895 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
12:54:44.896 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 2(Integer) 
12:54:44.897 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
12:54:46.366 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:54:46.367 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:54:46.381 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:54:46.381 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
12:54:46.381 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:54:46.382 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:54:46.382 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:54:46.383 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:54:46.384 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:54:46.384 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:54:46.384 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 339, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:54:44, tommy 
12:54:46.384 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:54:46.384 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:54:46.384 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:54:46.384 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:54:46.384 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:54:46.385 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:54:46.385 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:54:46.385 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:54:46.385 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:54:46.385 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:54:46.385 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:54:46.385 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:54:46.385 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:54:46.385 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:54:46.385 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:54:46.385 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:54:46.385 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
12:54:46.385 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:54:46.386 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
12:54:48.862 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:54:48.863 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
12:54:48.867 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:54:48.875 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
12:54:48.875 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:54:48.876 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:54:48.876 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:54:48.878 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:54:48.878 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:54:48.878 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:54:48.879 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:54:57.125 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
12:54:57.127 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
12:54:57.130 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
12:54:57.130 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
12:54:57.131 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
12:54:57.132 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
12:54:57.137 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#2(String), 답글2(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
12:54:57.146 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
12:54:57.146 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
12:54:57.147 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 2(Integer) 
12:54:57.149 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
12:54:58.744 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:54:58.746 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:54:58.760 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:54:58.760 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
12:54:58.761 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:54:58.761 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:54:58.761 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:54:58.764 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:54:58.764 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:54:58.765 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:54:58.765 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 340, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 12:54:57, tommy 
12:54:58.765 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 339, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:54:44, tommy 
12:54:58.766 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:54:58.766 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:54:58.766 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:54:58.766 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:54:58.766 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:54:58.766 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:54:58.766 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:54:58.766 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:54:58.767 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:54:58.767 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:54:58.767 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:54:58.767 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:54:58.767 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:54:58.767 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:54:58.767 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:54:58.767 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:54:58.767 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:54:58.768 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
12:55:01.488 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:55:01.489 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
12:55:01.493 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:55:01.496 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
12:55:01.497 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:55:01.497 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:55:01.497 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:55:01.498 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:55:01.499 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:55:01.499 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:55:01.499 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:55:05.557 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:55:05.558 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
12:55:05.561 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:55:05.561 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
12:55:05.562 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:55:05.565 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:55:05.566 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:55:05.577 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:55:05.577 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:55:05.577 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:55:05.578 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:55:07.989 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:55:07.990 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:55:07.997 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:55:07.997 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
12:55:07.998 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:55:08.001 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:55:08.001 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:55:08.009 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:55:08.009 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:55:08.010 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:55:08.010 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 340, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 12:54:57, tommy 
12:55:08.010 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 339, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:54:44, tommy 
12:55:08.010 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:55:08.010 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:55:08.010 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:55:08.011 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:55:08.011 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:55:08.011 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:55:08.011 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:55:08.011 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:55:08.011 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:55:08.011 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:55:08.011 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:55:08.012 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:55:08.012 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:55:08.013 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:55:08.013 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:55:08.013 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
12:55:08.013 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:55:08.013 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
12:55:10.158 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:55:10.161 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
12:55:10.170 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:55:10.170 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
12:55:10.171 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:55:10.172 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:55:10.172 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:55:10.178 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:55:10.178 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:55:10.178 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:55:10.179 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:55:18.154 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
12:55:18.155 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
12:55:18.157 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
12:55:18.158 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
12:55:18.160 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
12:55:18.162 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
12:55:18.163 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#3(String), 답글3(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
12:55:18.168 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
12:55:18.168 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
12:55:18.169 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 310(Integer), 2(Integer) 
12:55:18.171 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 2 
12:55:19.058 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:55:19.059 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:55:19.077 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:55:19.077 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
12:55:19.078 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:55:19.078 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:55:19.078 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:55:19.079 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:55:19.079 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:55:19.080 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:55:19.080 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 341, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 12:55:18, tommy 
12:55:19.080 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 339, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:54:44, tommy 
12:55:19.080 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 340, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 12:54:57, tommy 
12:55:19.080 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:55:19.080 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:55:19.080 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:55:19.080 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:55:19.080 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:55:19.080 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:55:19.080 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:55:19.080 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:55:19.081 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:55:19.081 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:55:19.081 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
12:55:19.082 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:55:19.082 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:55:19.082 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:55:19.082 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:55:19.082 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:55:19.082 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
12:56:17.430 WARN  --- [Thread-11] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-3 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
12:56:17.479 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 98767 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:56:17.479 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:56:17.479 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:56:17.801 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.336 seconds (JVM running for 420.151) 
12:59:04.946 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 98767 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
12:59:04.946 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
12:59:04.946 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
12:59:05.270 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.348 seconds (JVM running for 587.618) 
12:59:10.393 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:59:10.394 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
12:59:10.396 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:59:10.397 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
12:59:10.398 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:59:10.399 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:59:10.399 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:59:10.400 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:59:10.400 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:59:10.401 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:59:10.401 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:59:19.567 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:59:19.568 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
12:59:19.570 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:59:19.571 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
12:59:19.572 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:59:19.572 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:59:19.573 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:59:19.581 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:59:19.581 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:59:19.581 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:59:19.582 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:59:21.634 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:59:21.635 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
12:59:21.640 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:59:21.640 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
12:59:21.641 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:59:21.642 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:59:21.643 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:59:21.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:59:21.655 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:59:21.655 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:59:21.655 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:59:33.472 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:59:33.473 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
12:59:33.477 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:59:33.478 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
12:59:33.480 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:59:33.481 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:59:33.481 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:59:33.489 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:59:33.489 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:59:33.489 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:59:33.489 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:59:36.157 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:59:36.159 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
12:59:36.162 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:59:36.163 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
12:59:36.166 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:59:36.167 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:59:36.167 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:59:36.172 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:59:36.172 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:59:36.173 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:59:36.173 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
12:59:49.543 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
12:59:49.543 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
12:59:49.547 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
12:59:49.548 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
12:59:49.549 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
12:59:49.550 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
12:59:49.551 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 311(Integer), 2(Integer), 1(Integer) 
12:59:49.555 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
12:59:49.556 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order > ? 
12:59:49.556 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 311(Integer), 2(Integer) 
12:59:49.557 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
12:59:50.559 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
12:59:50.560 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
12:59:50.573 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
12:59:50.573 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 127 
12:59:50.573 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
12:59:50.574 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
12:59:50.574 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
12:59:50.575 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
12:59:50.576 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
12:59:50.576 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 342, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 12:59:49, tommy 
12:59:50.576 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
12:59:50.576 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 341, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 12:55:18, tommy 
12:59:50.576 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 339, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:54:44, tommy 
12:59:50.576 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 340, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 12:54:57, tommy 
12:59:50.576 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
12:59:50.576 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
12:59:50.576 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
12:59:50.576 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
12:59:50.577 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
12:59:50.578 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
12:59:50.578 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
12:59:50.578 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
12:59:50.578 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
12:59:50.578 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
12:59:50.578 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
12:59:50.578 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
12:59:50.578 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
12:59:50.578 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
12:59:50.578 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
12:59:50.579 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
12:59:52.128 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
12:59:52.130 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
12:59:52.133 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
12:59:52.134 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
12:59:52.136 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
12:59:52.138 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
12:59:52.138 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
12:59:52.140 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
12:59:52.140 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
12:59:52.140 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
12:59:52.141 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
13:00:05.160 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
13:00:05.161 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
13:00:05.168 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
13:00:05.170 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
13:00:05.170 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
13:00:05.172 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
13:00:05.177 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#2(String), 답글2(String), 박토미(String), tommy(String), 311(Integer), 2(Integer), 1(Integer) 
13:00:05.180 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
13:00:05.180 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order > ? 
13:00:05.181 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 311(Integer), 2(Integer) 
13:00:05.183 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
13:00:06.037 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
13:00:06.037 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
13:00:06.053 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
13:00:06.054 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 128 
13:00:06.054 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
13:00:06.054 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
13:00:06.055 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
13:00:06.056 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
13:00:06.056 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
13:00:06.056 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 342, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 12:59:49, tommy 
13:00:06.056 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 343, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 13:00:05, tommy 
13:00:06.056 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
13:00:06.056 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 341, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 12:55:18, tommy 
13:00:06.056 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 339, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:54:44, tommy 
13:00:06.056 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 340, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 12:54:57, tommy 
13:00:06.056 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
13:00:06.056 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
13:00:06.056 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
13:00:06.056 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
13:00:06.057 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
13:00:06.057 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
13:00:06.057 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
13:00:06.057 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
13:00:06.057 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
13:00:06.057 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
13:00:06.057 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
13:00:06.057 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
13:00:06.057 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
13:00:06.057 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
13:00:06.057 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
13:00:34.582 WARN  --- [Thread-22] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-4 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
13:00:34.642 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 98767 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
13:00:34.642 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
13:00:34.642 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
13:00:34.964 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.347 seconds (JVM running for 677.312) 
13:00:37.581 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
13:00:37.582 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 342(Integer) 
13:00:37.585 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
13:00:37.585 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 342, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 12:59:49, tommy, 311, 2, 1 
13:00:37.586 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
13:00:37.588 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
13:00:37.589 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
13:00:37.591 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
13:00:37.591 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
13:00:37.591 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
13:00:37.591 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
13:00:38.359 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
13:00:38.360 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 342(Integer) 
13:00:38.362 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
13:00:38.362 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 342, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 12:59:49, tommy, 311, 2, 1 
13:00:38.363 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
13:00:38.369 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
13:00:38.370 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 342(Integer) 
13:00:38.375 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
13:00:38.376 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 삭제 성공! 
13:00:39.672 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
13:00:39.673 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
13:00:39.688 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
13:00:39.689 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 127 
13:00:39.689 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
13:00:39.691 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
13:00:39.691 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
13:00:39.693 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
13:00:39.693 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
13:00:39.693 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 343, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 13:00:05, tommy 
13:00:39.693 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
13:00:39.693 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 341, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 12:55:18, tommy 
13:00:39.693 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 339, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:54:44, tommy 
13:00:39.693 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 340, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 12:54:57, tommy 
13:00:39.694 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
13:00:39.694 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
13:00:39.694 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
13:00:39.694 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
13:00:39.694 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
13:00:39.694 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
13:00:39.694 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
13:00:39.695 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
13:00:39.696 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
13:00:39.696 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
13:00:39.696 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
13:00:39.696 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
13:00:39.696 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
13:00:39.696 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
13:00:39.696 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
13:00:39.697 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
13:00:41.071 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
13:00:41.074 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 343(Integer) 
13:00:41.078 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
13:00:41.079 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 343, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 13:00:05, tommy, 311, 2, 1 
13:00:41.079 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
13:00:41.080 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
13:00:41.080 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
13:00:41.086 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
13:00:41.086 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
13:00:41.086 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
13:00:41.086 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
13:00:41.858 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
13:00:41.859 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 343(Integer) 
13:00:41.862 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
13:00:41.862 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 343, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 13:00:05, tommy, 311, 2, 1 
13:00:41.870 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
13:00:41.871 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
13:00:41.871 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 343(Integer) 
13:00:41.875 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
13:00:41.875 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 삭제 성공! 
13:00:43.018 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
13:00:43.019 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
13:00:43.037 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
13:00:43.037 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
13:00:43.037 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
13:00:43.038 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
13:00:43.038 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
13:00:43.039 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
13:00:43.039 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 341, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 12:55:18, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 339, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:54:44, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 340, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 12:54:57, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
13:00:43.040 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
13:00:43.041 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
13:00:43.041 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
13:00:43.041 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
13:00:43.041 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
13:00:44.164 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
13:00:44.165 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 341(Integer) 
13:00:44.169 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
13:00:44.169 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 341, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 12:55:18, tommy, 310, 2, 1 
13:00:44.170 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
13:00:44.170 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
13:00:44.171 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
13:00:44.172 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
13:00:44.173 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
13:00:44.173 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
13:00:44.174 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
13:00:45.007 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
13:00:45.008 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 341(Integer) 
13:00:45.010 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
13:00:45.011 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 341, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 12:55:18, tommy, 310, 2, 1 
13:00:45.011 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
13:00:45.012 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
13:00:45.012 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 341(Integer) 
13:00:45.020 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
13:00:45.022 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 삭제 성공! 
13:00:46.087 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
13:00:46.087 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
13:00:46.112 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
13:00:46.112 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
13:00:46.112 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
13:00:46.112 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
13:00:46.113 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 339, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:54:44, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 340, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 12:54:57, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
13:00:46.114 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
13:00:46.115 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
13:00:46.115 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
13:00:46.115 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
13:00:46.115 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
13:00:46.115 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
13:00:46.115 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
13:00:46.115 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
13:00:46.983 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
13:00:46.985 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 339(Integer) 
13:00:46.998 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
13:00:46.998 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 339, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:54:44, tommy, 310, 3, 1 
13:00:46.999 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
13:00:46.999 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
13:00:46.999 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
13:00:47.000 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
13:00:47.000 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
13:00:47.000 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
13:00:47.000 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
13:00:47.692 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
13:00:47.694 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 339(Integer) 
13:00:47.696 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
13:00:47.696 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 339, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 12:54:44, tommy, 310, 3, 1 
13:00:47.698 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
13:00:47.698 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
13:00:47.699 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 339(Integer) 
13:00:47.708 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
13:00:47.708 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 삭제 성공! 
13:00:49.250 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
13:00:49.251 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
13:00:49.266 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
13:00:49.266 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
13:00:49.266 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
13:00:49.267 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
13:00:49.267 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
13:00:49.269 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
13:00:49.269 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
13:00:49.269 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
13:00:49.269 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 340, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 12:54:57, tommy 
13:00:49.269 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
13:00:49.269 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
13:00:49.269 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
13:00:49.269 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
13:00:49.269 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
13:00:49.270 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
13:00:49.270 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
13:00:49.270 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
13:00:49.270 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
13:00:49.270 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
13:00:49.270 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
13:00:49.270 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
13:00:49.270 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
13:00:49.270 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
13:00:49.270 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
13:00:49.270 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
13:00:49.270 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
13:00:49.270 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
13:00:49.271 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
13:00:50.227 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
13:00:50.228 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 340(Integer) 
13:00:50.232 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
13:00:50.233 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 340, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 12:54:57, tommy, 310, 3, 1 
13:00:50.233 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
13:00:50.234 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
13:00:50.235 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
13:00:50.245 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
13:00:50.245 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
13:00:50.246 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
13:00:50.246 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
13:00:50.983 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
13:00:50.984 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 340(Integer) 
13:00:50.986 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
13:00:50.987 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 340, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 12:54:57, tommy, 310, 3, 1 
13:00:50.987 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
13:00:50.988 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
13:00:50.988 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 340(Integer) 
13:00:50.995 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
13:00:50.995 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 삭제 성공! 
13:00:52.234 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
13:00:52.235 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
13:00:52.256 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
13:00:52.256 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
13:00:52.256 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
13:00:52.256 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
13:00:52.257 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
13:00:52.258 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
13:00:52.259 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
13:00:52.259 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
13:00:52.259 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
13:00:52.259 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
13:00:52.259 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
13:00:52.259 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
13:00:52.259 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
13:00:52.259 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
13:00:52.260 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
13:00:52.260 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
13:00:52.260 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
13:00:52.260 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
13:00:52.260 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
13:00:52.260 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
13:00:52.260 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
13:00:52.260 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
13:00:52.260 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
13:00:52.260 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
13:00:52.260 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
13:00:52.260 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
13:00:52.260 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
13:00:52.261 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
13:04:48.528 WARN  --- [RMI TCP Connection(19)-127.0.0.1] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-5 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
19:48:56.260 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 99058 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
19:48:56.260 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
19:48:56.260 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
19:48:57.456 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 1.412 seconds (JVM running for 1.797) 
19:49:11.048 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
19:49:11.062 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
19:49:11.075 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
19:49:11.076 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
19:49:11.077 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
19:49:11.078 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
19:49:11.078 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
19:49:11.079 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
19:49:11.079 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
19:49:11.080 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
19:49:11.080 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
19:49:11.081 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
19:49:11.081 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
19:49:11.081 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
19:49:11.082 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
19:49:11.082 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
19:49:11.082 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
19:49:11.083 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
19:49:11.084 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
19:49:11.084 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
19:49:11.085 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
19:49:11.085 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
19:49:11.085 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
19:49:11.086 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
19:49:16.546 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
19:49:16.547 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
19:49:16.549 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
19:49:16.549 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
19:49:16.550 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
19:49:16.551 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:49:16.551 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:49:16.552 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:49:16.552 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:49:16.553 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:49:16.648 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
19:49:16.648 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
19:49:16.649 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
19:49:16.650 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
19:49:16.650 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
19:49:16.650 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
19:49:16.651 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
19:49:16.651 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
19:49:16.651 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
19:49:16.651 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
19:49:16.652 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
19:49:16.652 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
19:49:16.652 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
19:49:16.652 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
19:49:16.653 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
19:49:16.654 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
19:49:16.654 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
19:49:16.654 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
19:49:16.654 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
19:49:16.654 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
19:49:16.655 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
19:49:16.655 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
19:49:16.655 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
19:49:16.656 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
19:49:18.946 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
19:49:18.947 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
19:49:18.956 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
19:49:18.956 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 123 
19:49:18.957 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
19:49:18.957 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
19:49:18.958 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
19:49:18.959 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
19:49:18.960 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
19:49:18.961 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
19:49:18.962 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
19:49:18.962 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
19:49:18.962 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
19:49:18.963 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
19:49:18.963 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
19:49:18.963 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
19:49:18.963 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
19:49:18.964 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
19:49:18.964 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
19:49:18.964 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
19:49:18.965 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
19:49:18.965 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
19:49:18.965 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
19:49:18.965 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
19:49:18.966 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
19:49:18.966 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
19:49:18.967 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
19:49:18.967 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
19:49:18.967 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
19:49:18.967 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
19:49:23.308 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:49:23.309 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
19:49:23.313 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:49:23.315 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
19:49:23.316 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:49:23.318 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:49:23.320 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:49:23.326 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:49:23.326 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:49:23.326 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:49:23.327 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:49:36.069 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
19:49:36.070 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
19:49:36.073 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
19:49:36.073 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
19:49:36.074 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
19:49:36.075 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
19:49:36.076 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 311(Integer), 2(Integer), 1(Integer) 
19:49:36.082 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
19:49:36.082 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
19:49:36.083 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 311(Integer), 2(Integer) 
19:49:36.085 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
19:49:36.808 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
19:49:36.809 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
19:49:36.824 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
19:49:36.824 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
19:49:36.824 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
19:49:36.825 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
19:49:36.825 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
19:49:36.826 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
19:49:36.827 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
19:49:36.827 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
19:49:36.827 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
19:49:36.827 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
19:49:36.827 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
19:49:36.827 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
19:49:36.828 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
19:49:36.828 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
19:49:36.828 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
19:49:36.828 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
19:49:36.828 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
19:49:36.828 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
19:49:36.828 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
19:49:36.828 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
19:49:36.828 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
19:49:36.829 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
19:49:36.829 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
19:49:36.829 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
19:49:36.829 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
19:49:36.829 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
19:49:36.829 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
19:49:36.829 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
19:49:53.003 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:49:53.006 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 344(Integer) 
19:49:53.012 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:49:53.013 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy, 311, 2, 1 
19:49:53.014 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:49:53.015 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:49:53.015 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:49:53.017 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:49:53.017 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:49:53.018 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:49:53.018 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:49:57.593 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
19:49:57.595 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
19:49:57.612 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
19:49:57.612 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 124 
19:49:57.612 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
19:49:57.613 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
19:49:57.614 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
19:49:57.616 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
19:49:57.616 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
19:49:57.616 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
19:49:57.617 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
19:49:57.617 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
19:49:57.617 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
19:49:57.617 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
19:49:57.617 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
19:49:57.617 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
19:49:57.617 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
19:49:57.618 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
19:49:57.618 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
19:49:57.618 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
19:49:57.618 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
19:49:57.618 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
19:49:57.618 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
19:49:57.619 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
19:49:57.619 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
19:49:57.619 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
19:49:57.619 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
19:49:57.619 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
19:49:57.619 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
19:49:57.619 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
19:49:58.639 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:49:58.643 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
19:49:58.647 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:49:58.647 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
19:49:58.651 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:49:58.654 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:49:58.655 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:49:58.658 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:49:58.659 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:49:58.659 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:49:58.659 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:50:09.490 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
19:50:09.492 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
19:50:09.495 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
19:50:09.496 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
19:50:09.496 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
19:50:09.498 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
19:50:09.500 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#2(String), 답글2(String), 박토미(String), tommy(String), 311(Integer), 2(Integer), 1(Integer) 
19:50:09.509 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
19:50:09.509 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
19:50:09.510 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 311(Integer), 2(Integer) 
19:50:09.512 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
19:50:10.293 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
19:50:10.294 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
19:50:10.308 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
19:50:10.309 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 125 
19:50:10.309 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
19:50:10.310 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
19:50:10.310 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
19:50:10.311 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
19:50:10.312 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
19:50:10.312 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
19:50:10.312 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
19:50:10.313 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
19:50:10.313 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
19:50:10.313 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
19:50:10.313 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
19:50:10.313 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
19:50:10.313 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
19:50:10.314 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
19:50:10.314 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
19:50:10.314 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
19:50:10.314 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
19:50:10.314 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
19:50:10.314 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
19:50:10.314 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
19:50:10.315 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
19:50:10.315 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
19:50:10.315 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
19:50:10.315 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
19:50:10.315 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
19:50:10.315 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
19:50:23.835 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:50:23.837 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
19:50:23.844 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:50:23.845 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
19:50:23.845 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:50:23.846 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:50:23.848 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:50:23.851 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:50:23.851 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:50:23.852 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:50:23.852 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:50:35.163 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:50:35.167 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
19:50:35.172 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:50:35.172 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
19:50:35.173 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:50:35.174 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:50:35.174 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:50:35.179 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:50:35.179 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:50:35.179 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:50:35.179 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:50:56.043 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:50:56.045 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
19:50:56.055 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:50:56.056 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
19:50:56.056 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:50:56.056 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:50:56.057 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:50:56.059 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:50:56.059 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:50:56.059 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:50:56.059 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:51:29.892 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:51:29.894 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
19:51:29.898 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:51:29.898 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
19:51:29.899 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:51:29.899 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:51:29.900 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:51:29.901 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:51:29.902 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:51:29.902 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:51:29.902 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:52:30.058 WARN  --- [Thread-5] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
19:52:30.124 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 99058 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
19:52:30.125 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
19:52:30.125 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
19:52:30.473 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.38 seconds (JVM running for 214.813) 
19:52:33.722 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:52:33.722 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
19:52:33.723 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:52:33.723 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
19:52:33.724 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:52:33.725 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:52:33.725 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:52:33.725 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:52:33.726 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:52:33.726 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:52:33.726 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:52:47.694 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
19:52:47.695 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
19:52:47.699 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
19:52:47.700 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
19:52:47.701 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
19:52:47.702 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
19:52:47.704 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#3(String), 답글3(String), 박토미(String), tommy(String), 311(Integer), 2(Integer), 1(Integer) 
19:52:47.709 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
19:52:47.710 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
19:52:47.710 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 311(Integer), 2(Integer) 
19:52:47.712 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 2 
19:52:48.891 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
19:52:48.892 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
19:52:48.906 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
19:52:48.906 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 126 
19:52:48.906 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
19:52:48.908 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
19:52:48.908 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
19:52:48.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
19:52:48.909 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
19:52:48.910 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
19:52:48.910 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
19:52:48.910 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
19:52:48.910 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
19:52:48.910 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
19:52:48.910 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
19:52:48.910 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
19:52:48.910 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
19:52:48.910 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
19:52:48.910 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
19:52:48.910 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
19:52:48.910 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
19:52:48.910 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
19:52:48.911 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
19:52:48.911 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
19:52:48.911 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
19:52:48.911 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
19:52:48.912 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
19:52:48.912 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
19:52:48.912 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
19:52:48.912 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
19:53:17.444 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:53:17.445 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
19:53:17.453 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:53:17.454 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
19:53:17.454 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:53:17.455 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:53:17.456 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:53:17.458 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:53:17.458 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:53:17.458 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:53:17.458 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:53:28.369 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
19:53:28.370 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
19:53:28.373 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
19:53:28.373 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
19:53:28.374 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
19:53:28.374 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
19:53:28.376 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#4(String), 답글4(String), 박토미(String), tommy(String), 311(Integer), 2(Integer), 1(Integer) 
19:53:28.386 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
19:53:28.387 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
19:53:28.387 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 311(Integer), 2(Integer) 
19:53:28.389 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 3 
19:53:29.099 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
19:53:29.101 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
19:53:29.113 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
19:53:29.113 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 127 
19:53:29.114 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
19:53:29.114 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
19:53:29.114 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
19:53:29.115 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
19:53:29.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
19:53:29.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
19:53:29.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
19:53:29.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
19:53:29.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
19:53:29.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
19:53:29.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
19:53:29.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
19:53:29.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
19:53:29.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
19:53:29.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
19:53:29.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
19:53:29.117 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
19:53:29.117 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
19:53:29.117 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
19:53:29.117 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
19:53:29.117 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
19:53:29.117 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
19:53:29.117 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
19:53:29.117 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
19:53:29.117 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
19:53:29.117 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
19:53:47.738 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:53:47.739 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
19:53:47.751 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:53:47.751 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
19:53:47.752 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:53:47.753 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:53:47.753 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:53:47.755 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:53:47.755 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:53:47.755 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:53:47.755 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:53:58.388 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
19:53:58.389 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
19:53:58.396 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
19:53:58.396 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
19:53:58.396 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
19:53:58.399 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
19:53:58.403 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#5(String), 답글5(String), 박토미(String), tommy(String), 311(Integer), 2(Integer), 1(Integer) 
19:53:58.408 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
19:53:58.408 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
19:53:58.408 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 311(Integer), 2(Integer) 
19:53:58.411 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 4 
19:53:59.523 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
19:53:59.524 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
19:53:59.549 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
19:53:59.549 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 128 
19:53:59.549 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
19:53:59.550 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
19:53:59.550 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
19:53:59.552 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
19:53:59.553 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
19:53:59.553 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
19:53:59.553 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
19:53:59.553 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
19:53:59.553 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
19:53:59.553 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
19:53:59.553 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
19:53:59.553 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
19:59:11.038 WARN  --- [Thread-7] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-2 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
19:59:11.103 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 99058 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
19:59:11.104 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
19:59:11.104 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
19:59:11.428 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.354 seconds (JVM running for 615.771) 
19:59:14.435 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
19:59:14.435 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
19:59:14.443 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
19:59:14.443 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 128 
19:59:14.444 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
19:59:14.445 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
19:59:14.446 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
19:59:14.447 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
19:59:14.447 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
19:59:14.447 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
19:59:14.448 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
19:59:14.448 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
19:59:14.448 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
19:59:14.448 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
19:59:14.448 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
19:59:14.448 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
19:59:14.448 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
19:59:14.448 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
19:59:14.449 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
19:59:14.449 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
19:59:14.449 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
19:59:14.449 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
19:59:14.449 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
19:59:14.450 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
19:59:14.451 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
19:59:14.451 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
19:59:14.451 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
19:59:14.451 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
19:59:14.451 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
19:59:14.451 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
19:59:16.210 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:59:16.211 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
19:59:16.219 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:59:16.222 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
19:59:16.223 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:59:16.226 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:59:16.228 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:59:16.230 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:59:16.230 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:59:16.230 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:59:16.231 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:59:22.286 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:59:22.287 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
19:59:22.290 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:59:22.290 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
19:59:22.292 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:59:22.293 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:59:22.293 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:59:22.294 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:59:22.299 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:59:22.300 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:59:22.300 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:59:23.116 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
19:59:23.119 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
19:59:23.136 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
19:59:23.137 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 128 
19:59:23.137 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
19:59:23.137 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
19:59:23.138 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
19:59:23.139 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
19:59:23.139 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
19:59:23.139 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
19:59:23.139 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
19:59:23.140 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
19:59:23.140 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
19:59:23.140 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
19:59:23.988 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:59:23.989 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 348(Integer) 
19:59:23.991 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:59:23.991 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy, 311, 2, 1 
19:59:23.992 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:59:23.993 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:59:23.998 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:59:24.001 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:59:24.002 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:59:24.002 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:59:24.003 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:59:24.799 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
19:59:24.800 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
19:59:24.820 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
19:59:24.820 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 128 
19:59:24.820 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
19:59:24.820 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
19:59:24.821 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
19:59:24.823 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
19:59:24.823 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
19:59:24.823 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
19:59:24.823 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
19:59:24.823 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
19:59:24.823 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
19:59:24.823 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
19:59:24.823 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
19:59:24.824 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
19:59:24.824 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
19:59:24.824 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
19:59:24.824 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
19:59:24.824 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
19:59:24.824 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
19:59:24.824 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
19:59:24.824 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
19:59:24.824 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
19:59:24.824 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
19:59:24.824 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
19:59:24.824 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
19:59:24.825 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
19:59:24.825 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
19:59:24.825 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
19:59:26.089 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
19:59:26.113 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 309(Integer) 
19:59:26.115 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
19:59:26.115 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy, 309, 1, 0 
19:59:26.115 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
19:59:26.115 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
19:59:26.115 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
19:59:26.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
19:59:26.116 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
19:59:26.117 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
19:59:26.117 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
19:59:37.204 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
19:59:37.204 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
19:59:37.207 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
19:59:37.207 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
19:59:37.208 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
19:59:37.221 ERROR --- [http-nio-8080-exec-10] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: Cannot parse null string] with root cause 
java.lang.NumberFormatException: Cannot parse null string
	at java.base/java.lang.Integer.parseInt(Integer.java:630)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.lcomputerspring3.example.controller.BoardController.replyToOriginBoardPro(BoardController.java:156)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
20:02:16.115 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:02:16.116 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 309(Integer) 
20:02:16.120 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:02:16.121 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy, 309, 1, 0 
20:02:16.122 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:02:16.122 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:02:16.123 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:02:16.128 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:02:16.128 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:02:16.129 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:02:16.129 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:04:08.922 WARN  --- [Thread-11] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-3 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
20:04:08.983 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 99058 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
20:04:08.983 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
20:04:08.983 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
20:04:09.295 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.338 seconds (JVM running for 913.638) 
20:04:27.213 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:04:27.214 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 309(Integer) 
20:04:27.217 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:04:27.218 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy, 309, 1, 0 
20:04:27.222 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:04:27.223 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:04:27.223 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:04:27.225 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:04:27.225 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:04:27.225 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:04:27.225 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:04:30.137 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:04:30.138 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 309(Integer) 
20:04:30.141 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:04:30.141 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy, 309, 1, 0 
20:04:30.141 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:04:30.142 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:04:30.144 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:04:30.145 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:04:30.146 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:04:30.146 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:04:30.146 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:04:39.425 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:04:39.426 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:04:39.429 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:04:39.429 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:04:39.430 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:04:39.431 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:04:39.432 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#1의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 309(Integer), 2(Integer), 1(Integer) 
20:04:39.436 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:04:39.437 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:04:39.437 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 309(Integer), 2(Integer) 
20:04:39.438 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
20:04:40.604 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:04:40.605 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:04:40.617 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:04:40.617 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 129 
20:04:40.618 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:04:40.619 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:04:40.619 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:04:40.621 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:04:40.621 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:04:40.621 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:04:40.621 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:04:40.621 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:04:40.621 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:04:40.621 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:04:40.621 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:04:40.622 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:04:40.622 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 349, 원글#1의 답글#1, 답글1, 박토미, 2023-06-21 20:04:39, tommy 
20:04:40.622 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:04:40.622 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:04:40.622 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:04:40.623 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:04:40.623 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:04:40.624 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:04:40.625 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:04:40.625 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:04:40.625 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:04:40.625 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:04:40.625 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
20:04:40.625 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:04:40.625 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
20:04:43.687 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:04:43.687 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 309(Integer) 
20:04:43.689 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:04:43.690 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy, 309, 1, 0 
20:04:43.693 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:04:43.701 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:04:43.701 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:04:43.703 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:04:43.703 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:04:43.704 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:04:43.704 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:04:51.773 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:04:51.774 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:04:51.779 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:04:51.779 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:04:51.779 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:04:51.780 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:04:51.782 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#1의 답글#2(String), 답글2(String), 박토미(String), tommy(String), 309(Integer), 2(Integer), 1(Integer) 
20:04:51.787 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:04:51.787 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:04:51.787 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 309(Integer), 2(Integer) 
20:04:51.789 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
20:04:52.833 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:04:52.834 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:04:52.847 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:04:52.847 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 130 
20:04:52.847 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:04:52.848 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:04:52.848 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:04:52.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:04:52.849 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 350, 원글#1의 답글#2, 답글2, 박토미, 2023-06-21 20:04:51, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 349, 원글#1의 답글#1, 답글1, 박토미, 2023-06-21 20:04:39, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:04:52.850 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:04:52.851 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:04:52.851 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:04:52.851 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:04:52.851 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
20:04:54.655 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:04:54.656 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 309(Integer) 
20:04:54.659 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:04:54.666 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy, 309, 1, 0 
20:04:54.667 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:04:54.669 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:04:54.671 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:04:54.674 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:04:54.674 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:04:54.674 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:04:54.674 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:05:07.582 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:05:07.583 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:05:07.589 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:05:07.589 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:05:07.589 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:05:07.590 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:05:07.591 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#1의 답글#3(String), 답글3(String), 박토미(String), tommy(String), 309(Integer), 2(Integer), 1(Integer) 
20:05:07.595 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:05:07.595 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:05:07.597 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 2(Integer), 309(Integer), 2(Integer) 
20:05:07.605 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 2 
20:05:08.697 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:05:08.697 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:05:08.713 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:05:08.713 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 131 
20:05:08.713 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:05:08.713 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:05:08.714 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:05:08.715 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:05:08.715 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:05:08.715 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:05:08.715 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 351, 원글#1의 답글#3, 답글3, 박토미, 2023-06-21 20:05:07, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 349, 원글#1의 답글#1, 답글1, 박토미, 2023-06-21 20:04:39, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 350, 원글#1의 답글#2, 답글2, 박토미, 2023-06-21 20:04:51, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:05:08.716 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:05:08.716 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:05:08.716 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
20:06:27.153 WARN  --- [Thread-15] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-4 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
20:06:27.219 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 99058 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
20:06:27.219 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
20:06:27.219 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
20:06:27.533 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.341 seconds (JVM running for 1051.878) 
20:07:38.795 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 99058 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
20:07:38.795 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
20:07:38.795 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
20:07:39.110 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.364 seconds (JVM running for 1123.454) 
20:07:47.097 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 99058 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
20:07:47.097 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
20:07:47.098 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
20:07:47.412 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.771 seconds (JVM running for 1131.756) 
20:07:50.636 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:07:50.639 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 351(Integer) 
20:07:50.642 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:07:50.643 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 351, 원글#1의 답글#3, 답글3, 박토미, 2023-06-21 20:05:07, tommy, 309, 2, 1 
20:07:50.644 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:07:50.646 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:07:50.648 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:07:50.651 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:07:50.651 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:07:50.652 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:07:50.652 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:07:51.521 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:07:51.522 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 351(Integer) 
20:07:51.524 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:07:51.525 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 351, 원글#1의 답글#3, 답글3, 박토미, 2023-06-21 20:05:07, tommy, 309, 2, 1 
20:07:51.531 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:07:51.536 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
20:07:51.538 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 351(Integer) 
20:07:51.543 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
20:07:51.543 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 삭제 성공! 
20:07:52.705 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:07:52.706 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 351(Integer) 
20:07:52.708 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 0 
20:07:52.709 ERROR --- [http-nio-8080-exec-3] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "com.lcomputerspring3.example.domain.Board.getUsername()" because "this.board" is null] with root cause 
java.lang.NullPointerException: Cannot invoke "com.lcomputerspring3.example.domain.Board.getUsername()" because "this.board" is null
	at com.lcomputerspring3.example.controller.BoardController.readBoard(BoardController.java:87)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
20:07:54.167 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:07:54.167 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 351(Integer) 
20:07:54.168 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 0 
20:07:54.170 ERROR --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "com.lcomputerspring3.example.domain.Board.getUsername()" because "this.board" is null] with root cause 
java.lang.NullPointerException: Cannot invoke "com.lcomputerspring3.example.domain.Board.getUsername()" because "this.board" is null
	at com.lcomputerspring3.example.controller.BoardController.readBoard(BoardController.java:87)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
20:07:55.035 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:07:55.035 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 351(Integer) 
20:07:55.036 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 0 
20:07:55.038 ERROR --- [http-nio-8080-exec-5] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "com.lcomputerspring3.example.domain.Board.getUsername()" because "this.board" is null] with root cause 
java.lang.NullPointerException: Cannot invoke "com.lcomputerspring3.example.domain.Board.getUsername()" because "this.board" is null
	at com.lcomputerspring3.example.controller.BoardController.readBoard(BoardController.java:87)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
20:08:03.688 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:08:03.689 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:08:03.704 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:08:03.704 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 130 
20:08:03.705 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:08:03.705 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:08:03.706 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 349, 원글#1의 답글#1, 답글1, 박토미, 2023-06-21 20:04:39, tommy 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 350, 원글#1의 답글#2, 답글2, 박토미, 2023-06-21 20:04:51, tommy 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:08:03.707 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:08:03.708 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:08:03.708 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:08:03.708 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:08:03.708 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:08:03.708 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:08:03.709 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:08:03.709 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:08:03.709 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:08:03.709 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
20:08:06.711 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:08:06.712 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 349(Integer) 
20:08:06.716 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:08:06.717 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 349, 원글#1의 답글#1, 답글1, 박토미, 2023-06-21 20:04:39, tommy, 309, 3, 1 
20:08:06.717 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:08:06.718 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:08:06.718 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:08:06.727 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:08:06.727 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:08:06.727 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:08:06.727 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:08:07.695 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:08:07.696 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 349(Integer) 
20:08:07.701 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:08:07.701 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 349, 원글#1의 답글#1, 답글1, 박토미, 2023-06-21 20:04:39, tommy, 309, 3, 1 
20:08:07.702 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:08:07.702 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
20:08:07.703 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 349(Integer) 
20:08:07.716 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
20:08:07.716 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 삭제 성공! 
20:08:08.916 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:08:08.918 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:08:08.936 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:08:08.936 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 129 
20:08:08.936 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:08:08.937 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:08:08.938 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:08:08.940 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:08:08.940 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:08:08.941 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:08:08.941 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:08:08.941 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:08:08.941 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:08:08.941 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:08:08.941 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:08:08.941 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:08:08.941 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 350, 원글#1의 답글#2, 답글2, 박토미, 2023-06-21 20:04:51, tommy 
20:08:08.941 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:08:08.941 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:08:08.941 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:08:08.941 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:08:08.941 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:08:08.942 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:08:08.942 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:08:08.942 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:08:08.942 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:08:08.942 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:08:08.942 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
20:08:08.942 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:08:08.942 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
20:08:10.388 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:08:10.389 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 350(Integer) 
20:08:10.396 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:08:10.396 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 350, 원글#1의 답글#2, 답글2, 박토미, 2023-06-21 20:04:51, tommy, 309, 3, 1 
20:08:10.397 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:08:10.398 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:08:10.399 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:08:10.402 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:08:10.402 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:08:10.402 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:08:10.403 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:08:11.315 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:08:11.316 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 350(Integer) 
20:08:11.320 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:08:11.321 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 350, 원글#1의 답글#2, 답글2, 박토미, 2023-06-21 20:04:51, tommy, 309, 3, 1 
20:08:11.322 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:08:11.322 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
20:08:11.323 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 350(Integer) 
20:08:11.330 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
20:08:11.331 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 삭제 성공! 
20:08:12.719 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:08:12.720 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:08:12.738 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:08:12.738 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 128 
20:08:12.738 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:08:12.738 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:08:12.739 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:08:12.740 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:08:12.740 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:08:12.741 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
20:08:12.742 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:08:12.742 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:08:12.742 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:08:12.742 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
20:08:12.742 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:08:12.742 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
20:08:14.062 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:08:14.063 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 309(Integer) 
20:08:14.066 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:08:14.068 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy, 309, 1, 0 
20:08:14.069 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:08:14.070 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:08:14.070 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:08:14.073 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:08:14.073 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:08:14.073 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:08:14.074 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:08:23.758 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:08:23.759 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:08:23.763 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:08:23.763 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:08:23.764 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:08:23.765 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?+1, ?+1 ) 
20:08:23.766 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#1의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 309(Integer), 1(Integer), 0(Integer) 
20:08:23.773 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:08:23.773 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = ? + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:08:23.774 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 1(Integer), 309(Integer), 1(Integer) 
20:08:23.777 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
20:08:24.819 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:08:24.820 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:08:24.834 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:08:24.834 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 129 
20:08:24.834 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:08:24.836 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:08:24.837 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:08:24.838 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:08:24.838 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:08:24.838 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:08:24.838 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:08:24.838 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:08:24.838 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 352, 원글#1의 답글#1, 답글1, 박토미, 2023-06-21 20:08:23, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:08:24.839 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
20:08:24.839 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:08:24.839 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
20:09:40.962 WARN  --- [Thread-27] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-5 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
20:09:41.022 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 99058 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
20:09:41.023 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
20:09:41.023 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
20:09:41.355 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.354 seconds (JVM running for 1245.7) 
20:11:25.978 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 99058 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
20:11:25.978 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
20:11:25.978 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
20:11:26.277 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.325 seconds (JVM running for 1350.623) 
20:14:00.344 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 99058 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
20:14:00.344 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
20:14:00.344 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
20:14:00.646 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.323 seconds (JVM running for 1504.992) 
20:14:05.514 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:14:05.515 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 352(Integer) 
20:14:05.521 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:14:05.522 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 352, 원글#1의 답글#1, 답글1, 박토미, 2023-06-21 20:08:23, tommy, 309, 2, 1 
20:14:05.523 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:14:05.524 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:14:05.524 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:14:05.527 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:14:05.527 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:14:05.527 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:14:05.528 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:14:06.514 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:14:06.515 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 352(Integer) 
20:14:06.519 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:14:06.520 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 352, 원글#1의 답글#1, 답글1, 박토미, 2023-06-21 20:08:23, tommy, 309, 2, 1 
20:14:06.520 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:14:06.522 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
20:14:06.522 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 352(Integer) 
20:14:06.531 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
20:14:06.531 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 삭제 성공! 
20:14:08.785 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:14:08.786 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:14:08.802 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:14:08.802 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 128 
20:14:08.802 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:14:08.803 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:14:08.804 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:14:08.805 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:14:08.806 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:14:08.808 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:14:08.808 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
20:14:08.808 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:14:08.808 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:14:08.808 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:14:08.808 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
20:14:08.808 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:14:08.808 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
20:14:10.102 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:14:10.103 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
20:14:10.107 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:14:10.108 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
20:14:10.108 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:14:10.109 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:14:10.110 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:14:10.112 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:14:10.112 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:14:10.112 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:14:10.112 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:14:20.657 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:14:20.658 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:14:20.661 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:14:20.662 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:14:20.663 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:14:20.664 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:14:20.665 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
20:14:20.673 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:14:20.673 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = bOrder + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:14:20.674 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 310(Integer), 2(Integer) 
20:14:20.723 ERROR --- [http-nio-8080-exec-6] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'bOrder' in 'field list'
### The error may exist in file [/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main/mapper/BoardMapper.xml]
### The error may involve com.lcomputerspring3.example.mapper.BoardMapper.updateBOrder-Inline
### The error occurred while setting parameters
### SQL: UPDATE  lc_board     SET  b_order = bOrder + 1   WHERE  b_group = ?     AND  b_order >= ?     AND  b_id != last_insert_id();
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'bOrder' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'bOrder' in 'field list'] with root cause 
java.sql.SQLSyntaxErrorException: Unknown column 'bOrder' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy76.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy63.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy13/jdk.proxy13.$Proxy102.updateBOrder(Unknown Source)
	at com.lcomputerspring3.example.service.BoardServiceImpl.updateBOrder(BoardServiceImpl.java:63)
	at com.lcomputerspring3.example.controller.BoardController.replyToOriginBoardPro(BoardController.java:162)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
20:17:04.867 WARN  --- [Thread-39] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-6 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
20:17:04.933 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 99058 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
20:17:04.933 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
20:17:04.933 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
20:17:05.239 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 0.329 seconds (JVM running for 1689.586) 
20:17:14.473 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:17:14.474 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
20:17:14.475 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:17:14.475 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
20:17:14.476 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:17:14.477 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:17:14.477 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:17:14.478 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:17:14.478 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:17:14.478 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:17:14.478 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:17:23.935 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:17:23.936 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:17:23.940 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:17:23.940 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:17:23.941 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:17:23.942 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:17:23.942 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
20:17:23.948 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:17:23.948 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = b_order + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:17:23.949 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 310(Integer), 2(Integer) 
20:17:23.953 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
20:17:25.428 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:17:25.428 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:17:25.443 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:17:25.443 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 130 
20:17:25.444 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:17:25.445 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:17:25.445 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:17:25.446 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:17:25.446 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:17:25.446 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:17:25.446 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:17:25.446 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:17:25.446 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:17:25.447 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:17:25.447 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:17:25.447 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 354, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:23, tommy 
20:17:25.447 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 353, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:14:20, tommy 
20:17:25.447 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:17:25.447 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:17:25.447 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:17:25.447 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:17:25.447 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:17:25.447 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:17:25.448 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:17:25.448 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:17:25.448 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:17:25.448 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:17:25.448 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:17:25.448 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:17:25.448 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
20:17:29.894 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:17:29.894 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 353(Integer) 
20:17:29.897 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:17:29.897 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 353, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:14:20, tommy, 310, 3, 1 
20:17:29.897 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:17:29.904 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:17:29.904 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:17:29.908 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:17:29.908 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:17:29.908 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:17:29.909 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:17:30.784 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:17:30.785 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 353(Integer) 
20:17:30.789 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:17:30.795 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 353, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:14:20, tommy, 310, 3, 1 
20:17:30.796 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:17:30.798 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
20:17:30.798 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 353(Integer) 
20:17:30.806 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
20:17:30.806 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 삭제 성공! 
20:17:31.912 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:17:31.913 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:17:31.934 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:17:31.934 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 129 
20:17:31.934 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:17:31.935 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:17:31.935 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 354, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:23, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:17:31.937 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
20:17:31.937 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:17:31.937 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
20:17:32.924 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:17:32.925 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 354(Integer) 
20:17:32.929 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:17:32.930 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 354, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:23, tommy, 310, 2, 1 
20:17:32.930 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:17:32.931 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:17:32.931 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:17:32.933 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:17:32.934 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:17:32.934 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:17:32.934 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:17:33.642 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:17:33.642 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 354(Integer) 
20:17:33.645 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:17:33.645 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 354, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:23, tommy, 310, 2, 1 
20:17:33.646 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:17:33.647 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
20:17:33.654 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 354(Integer) 
20:17:33.661 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
20:17:33.661 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 삭제 성공! 
20:17:34.683 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:17:34.683 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:17:34.701 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:17:34.702 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 128 
20:17:34.702 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:17:34.704 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:17:34.704 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:17:34.706 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:17:34.706 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:17:34.706 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:17:34.706 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:17:34.706 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:17:34.706 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:17:34.706 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:17:34.707 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:17:34.707 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:17:34.707 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:17:34.707 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:17:34.707 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:17:34.707 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:17:34.707 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:17:34.707 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:17:34.707 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:17:34.707 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
20:17:34.708 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:17:34.708 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:17:34.708 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:17:34.708 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
20:17:34.708 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:17:34.709 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
20:17:35.791 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:17:35.792 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
20:17:35.794 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:17:35.795 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
20:17:35.796 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:17:35.797 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:17:35.797 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:17:35.800 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:17:35.800 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:17:35.800 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:17:35.801 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:17:42.987 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:17:42.988 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:17:42.998 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:17:42.998 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:17:42.998 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:17:42.999 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:17:42.999 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
20:17:43.002 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:17:43.002 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = b_order + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:17:43.002 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 310(Integer), 2(Integer) 
20:17:43.003 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
20:17:44.158 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:17:44.160 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:17:44.184 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:17:44.184 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 129 
20:17:44.184 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:17:44.184 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:17:44.185 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:17:44.185 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:17:44.186 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
20:17:44.186 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:17:44.187 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
20:17:45.284 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:17:45.284 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
20:17:45.288 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:17:45.288 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
20:17:45.288 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:17:45.289 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:17:45.290 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:17:45.303 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:17:45.303 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:17:45.303 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:17:45.303 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:17:52.240 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:17:52.241 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:17:52.252 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:17:52.252 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:17:52.252 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:17:52.253 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:17:52.254 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#2(String), 답글2(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
20:17:52.257 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:17:52.257 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = b_order + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:17:52.257 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 310(Integer), 2(Integer) 
20:17:52.259 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
20:17:53.132 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:17:53.134 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:17:53.148 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:17:53.148 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 130 
20:17:53.148 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:17:53.149 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:17:53.149 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:17:53.150 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:17:53.150 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:17:53.150 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:17:53.150 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:17:53.151 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:17:53.151 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:17:53.151 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
20:17:54.816 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:17:54.817 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
20:17:54.833 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:17:54.833 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
20:17:54.833 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:17:54.834 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:17:54.834 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:17:54.836 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:17:54.836 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:17:54.836 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:17:54.836 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:18:03.243 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:18:03.245 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:18:03.252 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:18:03.252 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:18:03.253 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:18:03.253 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:18:03.254 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#3(String), 답글3(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
20:18:03.258 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:18:03.258 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = b_order + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:18:03.258 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 310(Integer), 2(Integer) 
20:18:03.260 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 2 
20:18:04.708 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:18:04.708 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:18:04.727 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:18:04.727 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 131 
20:18:04.727 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:18:04.728 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:18:04.728 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:18:04.729 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:18:04.729 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:18:04.732 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:18:04.733 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:18:04.733 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:18:04.733 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:18:04.733 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:18:04.733 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
20:18:23.084 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:18:23.084 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
20:18:23.087 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:18:23.088 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
20:18:23.088 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:18:23.089 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:18:23.089 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:18:23.096 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:18:23.096 TRACE --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:18:23.096 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:18:23.097 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:18:34.334 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:18:34.335 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:18:34.340 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:18:34.340 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:18:34.341 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:18:34.341 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:18:34.342 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#4(String), 답글4(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
20:18:34.348 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:18:34.348 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = b_order + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:18:34.348 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 310(Integer), 2(Integer) 
20:18:34.351 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 3 
20:18:35.418 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:18:35.419 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:18:35.432 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:18:35.432 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 132 
20:18:35.432 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:18:35.433 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:18:35.433 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:18:35.434 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:18:35.434 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:18:35.434 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:18:35.434 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:18:35.434 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:18:35.434 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:18:35.435 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:18:35.435 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:18:35.435 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
20:18:37.124 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:18:37.125 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 310(Integer) 
20:18:37.129 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:18:37.129 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy, 310, 1, 0 
20:18:37.129 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:18:37.131 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:18:37.137 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:18:37.142 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:18:37.142 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:18:37.142 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:18:37.142 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:18:46.435 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:18:46.436 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:18:46.438 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:18:46.441 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:18:46.441 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:18:46.443 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:18:46.444 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#2의 답글#5(String), 답글5(String), 박토미(String), tommy(String), 310(Integer), 2(Integer), 1(Integer) 
20:18:46.450 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:18:46.451 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = b_order + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:18:46.451 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 310(Integer), 2(Integer) 
20:18:46.453 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 4 
20:18:47.508 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:18:47.509 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:18:47.525 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:18:47.526 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:18:47.526 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:18:47.526 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:18:47.527 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:18:47.528 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:18:47.528 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:18:47.528 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:18:47.528 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:18:47.528 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:18:47.528 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:18:47.528 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:18:47.528 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:18:47.529 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:18:47.529 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:18:47.529 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:18:47.529 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:18:47.529 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:18:47.529 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:18:47.529 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:18:47.529 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:18:47.529 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:18:47.529 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:18:47.529 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:18:47.529 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:18:47.529 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:18:47.529 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:18:47.529 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
20:28:48.011 WARN  --- [RMI TCP Connection(43)-127.0.0.1] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-7 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
