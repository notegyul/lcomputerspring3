20:36:18.824 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Starting Lcomputerspring3Application using Java 17.0.5 on Suminui-MacBookPro.local with PID 2470 (/Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3/bin/main started by suminmun in /Users/suminmun/Documents/workspace-spring-tool-suite-4-4.17.1.RELEASE/lcomputerspring3) 
20:36:18.824 DEBUG --- [restartedMain] c.l.e.Lcomputerspring3Application : Running with Spring Boot v2.7.10, Spring v5.3.26 
20:36:18.825 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : No active profile set, falling back to 1 default profile: "default" 
20:36:20.012 INFO  --- [restartedMain] c.l.e.Lcomputerspring3Application : Started Lcomputerspring3Application in 1.403 seconds (JVM running for 1.788) 
20:36:23.620 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:36:23.634 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:36:23.659 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:36:23.660 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:36:23.661 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:36:23.662 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:36:23.662 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:36:23.663 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:36:23.663 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:36:23.663 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:36:23.664 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:36:23.664 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:36:23.664 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:36:23.665 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:36:23.665 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:36:23.665 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:36:23.666 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:36:23.666 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:36:23.667 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:36:23.668 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:36:23.668 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:36:23.669 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:36:23.669 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:36:23.669 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:36:30.450 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:36:30.451 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:36:30.459 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:36:30.459 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:36:30.459 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:36:30.460 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:36:30.460 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:36:30.462 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:36:30.462 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:36:30.463 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:36:30.557 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:36:30.558 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:36:30.559 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:36:30.559 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:36:30.559 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:36:30.560 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:36:30.560 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:36:30.560 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:36:30.560 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:36:30.560 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:36:30.561 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:36:30.561 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:36:30.561 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:36:30.561 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:36:30.561 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:36:30.562 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:36:30.562 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:36:30.562 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:36:30.563 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:36:30.563 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:36:30.563 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:36:30.563 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:36:30.563 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:36:30.564 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:36:32.868 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:36:32.869 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:36:32.873 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:36:32.873 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:36:32.874 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:36:32.875 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:36:32.876 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:36:32.877 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:36:32.878 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:36:32.879 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:36:32.879 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:36:32.879 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:36:32.880 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:36:32.880 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:36:32.880 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:36:32.881 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:36:32.881 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:36:32.881 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:36:32.882 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:36:32.882 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:36:32.882 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:36:32.882 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:36:32.883 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:36:32.883 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:36:32.883 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:36:32.883 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:36:32.883 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:36:32.884 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:36:32.884 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:36:32.884 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
20:36:32.993 ERROR --- [http-nio-8080-exec-6] o.a.c.c.C.[.[localhost].[/].[jsp] : Servlet.service() for servlet [jsp] threw exception 
org.apache.jasper.el.JspPropertyNotFoundException: /WEB-INF/views/board-list.jsp(68,4) '${(bList.depth - 1) * 20}' Property [depth] not found on type [com.lcomputerspring3.example.domain.Board]
	at org.apache.jasper.el.JspValueExpression.getValue(JspValueExpression.java:136)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fset_005f0(board_002dlist_jsp.java:345)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fforEach_005f0(board_002dlist_jsp.java:282)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspService(board_002dlist_jsp.java:207)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:170)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1406)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1150)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
20:36:32.994 ERROR --- [http-nio-8080-exec-6] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [An exception occurred processing [/WEB-INF/views/board-list.jsp] at line [68]

65: 			</tr>
66: 			
67: 			<c:forEach items="${list}" var="bList" varStatus="status">
68: 				<c:set var="indentSize" value="${(bList.depth - 1) * 20}" />
69: 					<tr>
70: 						<td>${pagination.count - (pagination.pageNum + status.index)}</td>
71: 						<td>


Stacktrace:] with root cause 
org.apache.jasper.el.JspPropertyNotFoundException: /WEB-INF/views/board-list.jsp(68,4) '${(bList.depth - 1) * 20}' Property [depth] not found on type [com.lcomputerspring3.example.domain.Board]
	at org.apache.jasper.el.JspValueExpression.getValue(JspValueExpression.java:136)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fset_005f0(board_002dlist_jsp.java:345)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fforEach_005f0(board_002dlist_jsp.java:282)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspService(board_002dlist_jsp.java:207)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:170)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1406)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1150)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
20:37:18.800 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:37:18.801 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:37:18.802 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:37:18.802 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:37:18.802 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:37:18.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:37:18.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:37:18.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:37:18.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:37:18.803 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:37:18.804 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:37:18.804 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:37:18.804 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:37:18.804 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:37:18.804 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:37:18.804 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:37:18.804 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:37:18.805 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:37:18.805 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:37:18.805 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:37:18.805 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:37:18.805 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:37:18.806 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:37:18.806 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:37:20.136 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:37:20.137 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:37:20.148 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:37:20.148 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:37:20.148 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:37:20.149 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:37:20.149 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:37:20.151 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:37:20.152 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:37:20.153 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:37:20.162 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:37:20.163 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:37:20.163 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:37:20.164 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:37:20.164 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:37:20.164 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:37:20.165 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:37:20.165 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:37:20.165 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:37:20.165 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:37:20.165 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:37:20.165 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:37:20.166 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:37:20.166 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:37:20.166 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:37:20.166 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:37:20.166 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:37:20.167 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:37:20.167 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:37:20.167 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
20:37:31.675 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:37:31.678 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:37:31.690 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:37:31.690 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:37:31.690 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:37:31.690 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:37:31.690 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 20(Integer), 20(Integer) 
20:37:31.692 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:37:31.692 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
20:37:31.692 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:37:31.692 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
20:37:31.692 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
20:37:31.693 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:37:31.693 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
20:37:31.693 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
20:37:31.693 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:37:31.693 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
20:37:31.693 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
20:37:31.693 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
20:37:31.693 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
20:37:31.693 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
20:37:31.693 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
20:37:31.693 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
20:37:31.693 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 137, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
20:37:31.694 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 136, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
20:37:31.694 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 139, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
20:37:31.694 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 98, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
20:37:31.694 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 97, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
20:37:31.694 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:37:31.694 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
20:37:33.881 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:37:33.882 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:37:33.894 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:37:33.895 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:37:33.895 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:37:33.896 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:37:33.896 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:37:33.900 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:37:33.900 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:37:33.901 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:37:33.901 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:37:33.902 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:37:33.903 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:37:33.903 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:37:33.903 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:37:33.903 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:37:33.903 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:37:33.903 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:37:33.904 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:37:33.904 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:37:33.904 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:37:33.907 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:37:33.907 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:37:33.907 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:37:33.907 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:37:33.907 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:37:33.908 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:37:33.908 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:37:33.908 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:37:33.908 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
20:39:41.384 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:39:41.386 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:39:41.397 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:39:41.397 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:39:41.397 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:39:41.398 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:39:41.399 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:39:41.402 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:39:41.403 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:39:41.403 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:39:41.403 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:39:41.404 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:39:41.404 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:39:41.404 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:39:41.404 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:39:41.404 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:39:41.404 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:39:41.405 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:39:41.405 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:39:41.405 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:39:41.405 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:39:41.405 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:39:41.405 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:39:41.405 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:39:41.405 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:39:41.406 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:39:41.406 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:39:41.406 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:39:41.406 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:39:41.406 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
20:39:42.627 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:39:42.629 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:39:42.643 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:39:42.644 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:39:42.644 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:39:42.645 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:39:42.645 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:39:42.647 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:39:42.647 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:39:42.647 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:39:42.647 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:39:42.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:39:42.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:39:42.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:39:42.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:39:42.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:39:42.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:39:42.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:39:42.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:39:42.649 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:39:42.649 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:39:42.649 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:39:42.649 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:39:42.649 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:39:42.649 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:39:42.649 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:39:42.649 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:39:42.649 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:39:42.650 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:39:42.650 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
20:45:42.613 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:45:42.615 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:45:42.627 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:45:42.627 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:45:42.628 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:45:42.628 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:45:42.628 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:45:42.630 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:45:42.630 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:45:42.630 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:45:42.630 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:45:42.630 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:45:42.630 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:45:42.630 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:45:42.630 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:45:42.630 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:45:42.630 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:45:42.630 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:45:42.631 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:45:42.631 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:45:42.631 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:45:42.631 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:45:42.631 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:45:42.631 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:45:42.631 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:45:42.631 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:45:42.631 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:45:42.631 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:45:42.631 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:45:42.631 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
20:45:52.732 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:45:52.733 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
20:45:52.739 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:45:52.739 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
20:45:52.740 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:45:52.742 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:45:52.742 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:45:52.745 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:45:52.745 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:45:52.745 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:45:52.746 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:45:53.408 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:45:53.409 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:45:53.424 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:45:53.425 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:45:53.425 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:45:53.425 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:45:53.425 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:45:53.427 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:45:53.427 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:45:53.427 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:45:53.428 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:45:53.428 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:45:53.428 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:45:53.428 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:45:53.428 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:45:53.428 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:45:53.428 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:45:53.428 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:45:53.428 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:45:53.429 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:45:53.429 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:45:53.429 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:45:53.429 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:45:53.429 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:45:53.429 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:45:53.429 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:45:53.429 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:45:53.429 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:45:53.429 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:45:53.430 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
20:46:39.924 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:46:39.925 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:46:39.939 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:46:39.939 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:46:39.939 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:46:39.940 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:46:39.940 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:46:39.941 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:46:39.941 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:46:39.942 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:46:39.942 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:46:39.942 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:46:39.942 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:46:39.942 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:46:39.942 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:46:39.942 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:46:39.943 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:46:39.943 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:46:39.943 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:46:39.943 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:46:39.943 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:46:39.943 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:46:39.943 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:46:39.943 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:46:39.943 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:46:39.943 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:46:39.943 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:46:39.943 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:46:39.943 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:46:39.943 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
20:47:52.800 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:47:52.801 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:47:52.814 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:47:52.815 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:47:52.815 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:47:52.815 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:47:52.816 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:47:52.817 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:47:52.817 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:47:52.818 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:47:52.818 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:47:52.818 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:47:52.818 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:47:52.818 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:47:52.818 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:47:52.818 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:47:52.818 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:47:52.818 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:47:52.818 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:47:52.818 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:47:52.818 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:47:52.818 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:47:52.819 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:47:52.819 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:47:52.819 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:47:52.819 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:47:52.819 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:47:52.819 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:47:52.819 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:47:52.819 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
20:49:17.631 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:49:17.634 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:49:17.646 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:49:17.646 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:49:17.646 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:49:17.647 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:49:17.648 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:49:17.649 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:49:17.649 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:49:17.650 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:49:17.650 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:49:17.650 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:49:17.650 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:49:17.650 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:49:17.650 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:49:17.650 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:49:17.650 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:49:17.651 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:49:17.651 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:49:17.651 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:49:17.651 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:49:17.651 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:49:17.651 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:49:17.651 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:49:17.651 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:49:17.651 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:49:17.651 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:49:17.652 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:49:17.652 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:49:17.652 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
20:52:05.660 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:52:05.662 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:52:05.676 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:52:05.676 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:52:05.677 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:52:05.677 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:52:05.678 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:52:05.679 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:52:05.679 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:52:05.679 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:52:05.679 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:52:05.679 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:52:05.680 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:52:05.680 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:52:05.680 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
20:52:05.741 ERROR --- [http-nio-8080-exec-10] o.a.c.c.C.[.[localhost].[/].[jsp] : Servlet.service() for servlet [jsp] threw exception 
javax.el.ELException: Cannot convert [com.lcomputerspring3.example.domain.Board@5f792484] of type [class com.lcomputerspring3.example.domain.Board] to [class java.lang.Long]
	at org.apache.el.lang.ELSupport.coerceToNumber(ELSupport.java:385)
	at org.apache.el.lang.ELSupport.equals(ELSupport.java:167)
	at org.apache.el.lang.ELSupport.compare(ELSupport.java:94)
	at org.apache.el.parser.AstGreaterThan.getValue(AstGreaterThan.java:44)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:189)
	at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:690)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fwhen_005f0(board_002dlist_jsp.java:373)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fchoose_005f0(board_002dlist_jsp.java:342)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fforEach_005f0(board_002dlist_jsp.java:290)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspService(board_002dlist_jsp.java:211)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:170)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1406)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1150)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
20:52:05.741 ERROR --- [http-nio-8080-exec-10] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [An exception occurred processing [/WEB-INF/views/board-list.jsp] at line [75]

72: 					<tr>
73: 						<td>${pagination.count - (pagination.pageNum + status.index)}</td>
74: 						<c:choose>
75: 							<c:when test="${bList > 0}">
76: 								<c:set var="indentSize" value="${(bList.bDepth + 1) * 10}" />
77: 								<td>
78: 									<span style="padding-left: ${indentSize}px"></span>


Stacktrace:] with root cause 
javax.el.ELException: Cannot convert [com.lcomputerspring3.example.domain.Board@5f792484] of type [class com.lcomputerspring3.example.domain.Board] to [class java.lang.Long]
	at org.apache.el.lang.ELSupport.coerceToNumber(ELSupport.java:385)
	at org.apache.el.lang.ELSupport.equals(ELSupport.java:167)
	at org.apache.el.lang.ELSupport.compare(ELSupport.java:94)
	at org.apache.el.parser.AstGreaterThan.getValue(AstGreaterThan.java:44)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:189)
	at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:690)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fwhen_005f0(board_002dlist_jsp.java:373)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fchoose_005f0(board_002dlist_jsp.java:342)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fforEach_005f0(board_002dlist_jsp.java:290)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspService(board_002dlist_jsp.java:211)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:170)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1406)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1150)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
20:52:24.888 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:52:24.889 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:52:24.910 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:52:24.910 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:52:24.910 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:52:24.911 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:52:24.911 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:52:24.912 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:52:24.913 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:52:24.914 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:52:24.914 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:52:24.914 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:52:24.914 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:52:24.914 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:52:24.914 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:52:24.914 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:52:24.914 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
20:53:03.336 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:53:03.337 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:53:03.360 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:53:03.360 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:53:03.360 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:53:03.362 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:53:03.363 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:53:03.365 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:53:03.365 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:53:03.366 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:53:03.366 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:53:03.366 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:53:03.366 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:53:03.366 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:53:03.366 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:53:03.366 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:53:03.367 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:53:03.367 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:53:03.367 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:53:03.367 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:53:03.367 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:53:03.367 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:53:03.367 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:53:03.367 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:53:03.367 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:53:03.367 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:53:03.367 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:53:03.367 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:53:03.367 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:53:03.368 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
20:53:04.252 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:53:04.252 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:53:04.255 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:53:04.255 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:53:04.255 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:53:04.255 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:53:04.255 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:53:04.256 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:53:04.256 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:53:04.256 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:53:04.256 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:53:04.256 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:53:04.256 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:53:04.257 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:53:04.257 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:53:04.257 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
20:53:35.549 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:53:35.550 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:53:35.567 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:53:35.567 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:53:35.567 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:53:35.568 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:53:35.568 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:53:35.569 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:53:35.570 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:53:35.570 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:53:35.570 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:53:35.570 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:53:35.570 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:53:35.571 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:53:35.571 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:53:35.571 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:53:35.571 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:53:35.571 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:53:35.571 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:53:35.571 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:53:35.571 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:53:35.571 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:53:35.571 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:53:35.571 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:53:35.571 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:53:35.571 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:53:35.572 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:53:35.572 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:53:35.572 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:53:35.572 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
20:54:14.473 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:54:14.473 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:54:14.491 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:54:14.491 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:54:14.491 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:54:14.491 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:54:14.492 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:54:14.493 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:54:14.493 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:54:14.493 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:54:14.493 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:54:14.493 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:54:14.493 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:54:14.493 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:54:14.493 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:54:14.493 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:54:14.493 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:54:14.494 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:54:14.494 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:54:14.494 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:54:14.494 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:54:14.494 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:54:14.494 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:54:14.494 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:54:14.494 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:54:14.494 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:54:14.494 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:54:14.494 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:54:14.494 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:54:14.494 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
20:54:14.551 ERROR --- [http-nio-8080-exec-5] o.a.c.c.C.[.[localhost].[/].[jsp] : Servlet.service() for servlet [jsp] threw exception 
org.apache.jasper.el.JspPropertyNotFoundException: /WEB-INF/views/board-list.jsp(68,4) '${(bList.depth - 1) * 20}' Property [depth] not found on type [com.lcomputerspring3.example.domain.Board]
	at org.apache.jasper.el.JspValueExpression.getValue(JspValueExpression.java:136)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fset_005f0(board_002dlist_jsp.java:340)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fforEach_005f0(board_002dlist_jsp.java:282)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspService(board_002dlist_jsp.java:207)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:170)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1406)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1150)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
20:54:14.552 ERROR --- [http-nio-8080-exec-5] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [An exception occurred processing [/WEB-INF/views/board-list.jsp] at line [68]

65: 			</tr>
66: 			
67: 			<c:forEach items="${list}" var="bList" varStatus="status">
68: 				<c:set var="indentSize" value="${(bList.depth - 1) * 20}" />
69: 					<tr>
70: 						<td>${pagination.count - (pagination.pageNum + status.index)}</td>
71: 						<td><a href="/readBoard/${bList.bId}">${bList.bTitle}</a></td>


Stacktrace:] with root cause 
org.apache.jasper.el.JspPropertyNotFoundException: /WEB-INF/views/board-list.jsp(68,4) '${(bList.depth - 1) * 20}' Property [depth] not found on type [com.lcomputerspring3.example.domain.Board]
	at org.apache.jasper.el.JspValueExpression.getValue(JspValueExpression.java:136)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fset_005f0(board_002dlist_jsp.java:340)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspx_meth_c_005fforEach_005f0(board_002dlist_jsp.java:282)
	at org.apache.jsp.WEB_002dINF.views.board_002dlist_jsp._jspService(board_002dlist_jsp.java:207)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:170)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1406)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1150)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
20:54:54.943 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:54:54.944 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:54:54.952 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:54:54.953 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:54:54.953 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:54:54.953 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:54:54.953 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:54:54.955 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:54:54.955 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:54:54.955 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:54:54.955 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:54:54.955 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:54:54.956 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:54:54.956 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:54:54.956 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
20:55:15.212 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:55:15.214 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:55:15.224 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:55:15.224 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:55:15.224 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:55:15.225 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:55:15.225 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:55:15.227 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:55:15.228 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:55:15.228 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:55:15.228 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:55:15.228 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:55:15.228 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:55:15.228 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:55:15.229 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:55:15.230 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:55:15.230 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
20:55:21.573 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:55:21.573 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 348(Integer) 
20:55:21.579 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:55:21.580 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy, 311, 2, 1 
20:55:21.580 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:55:21.581 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:55:21.581 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:55:21.583 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:55:21.583 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:55:21.583 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:55:21.584 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:55:23.860 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:55:23.861 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:55:23.874 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:55:23.874 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:55:23.874 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:55:23.875 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:55:23.875 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:55:23.879 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:55:23.879 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:55:23.879 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:55:23.879 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:55:23.879 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:55:23.879 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:55:23.879 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:55:23.879 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:55:23.879 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:55:23.879 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:55:23.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:55:23.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:55:23.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:55:23.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:55:23.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:55:23.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:55:23.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:55:23.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:55:23.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:55:23.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:55:23.880 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:55:23.880 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:55:23.880 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
20:56:03.158 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:56:03.162 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:56:03.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:56:03.176 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:56:03.177 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:56:03.177 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:56:03.177 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:56:03.178 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:56:03.179 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:56:03.180 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:56:03.180 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:56:03.180 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:56:03.180 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:56:03.180 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:56:03.180 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
20:56:07.068 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:07.069 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 348(Integer) 
20:56:07.072 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:56:07.073 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy, 311, 2, 1 
20:56:07.073 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:56:07.074 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:56:07.074 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:56:07.079 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:56:07.079 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:56:07.079 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:56:07.079 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:56:08.161 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:08.162 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 348(Integer) 
20:56:08.168 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:56:08.168 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 348, 원글#3의 답글#5, 답글5, 박토미, 2023-06-21 19:53:58, tommy, 311, 2, 1 
20:56:08.169 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:56:08.170 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
20:56:08.170 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 348(Integer) 
20:56:08.177 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
20:56:08.178 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 삭제 성공! 
20:56:08.753 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:08.753 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 348(Integer) 
20:56:08.754 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 0 
20:56:08.756 ERROR --- [http-nio-8080-exec-5] o.a.c.c.C.[.[.[.[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "com.lcomputerspring3.example.domain.Board.getUsername()" because "this.board" is null] with root cause 
java.lang.NullPointerException: Cannot invoke "com.lcomputerspring3.example.domain.Board.getUsername()" because "this.board" is null
	at com.lcomputerspring3.example.controller.BoardController.readBoard(BoardController.java:87)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
20:56:11.731 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:56:11.731 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:56:11.736 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:56:11.736 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 132 
20:56:11.737 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:56:11.737 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:56:11.737 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:56:11.739 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:56:11.739 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:56:11.739 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy 
20:56:11.739 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:56:11.739 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:56:11.739 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:56:11.740 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:56:11.741 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:56:11.741 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
20:56:14.158 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:14.160 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 344(Integer) 
20:56:14.162 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:56:14.162 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy, 311, 3, 1 
20:56:14.163 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:56:14.163 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:56:14.163 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:56:14.166 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:56:14.167 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:56:14.167 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:56:14.167 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:56:14.996 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:14.997 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 344(Integer) 
20:56:15.000 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:56:15.000 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 344, 원글#3의 답글#1, 답글1, 박토미, 2023-06-21 19:49:36, tommy, 311, 3, 1 
20:56:15.001 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:56:15.001 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
20:56:15.002 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 344(Integer) 
20:56:15.007 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
20:56:15.007 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : 게시글 삭제 성공! 
20:56:15.904 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:56:15.904 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:56:15.922 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:56:15.922 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 131 
20:56:15.922 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:56:15.923 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:56:15.924 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:56:15.927 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:56:15.927 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:56:15.927 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy 
20:56:15.927 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:56:15.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:56:15.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:56:15.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:56:15.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:56:15.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:56:15.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:56:15.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:56:15.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:56:15.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:56:15.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:56:15.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:56:15.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:56:15.928 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:56:15.929 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:56:15.929 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:56:15.929 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:56:15.929 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:56:15.929 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:56:15.931 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
20:56:17.132 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:17.133 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 345(Integer) 
20:56:17.136 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:56:17.137 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy, 311, 3, 1 
20:56:17.137 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:56:17.138 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:56:17.142 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:56:17.147 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:56:17.148 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:56:17.148 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:56:17.149 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:56:17.888 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:17.889 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 345(Integer) 
20:56:17.891 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:56:17.892 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 345, 원글#3의 답글#2, 답글2, 박토미, 2023-06-21 19:50:09, tommy, 311, 3, 1 
20:56:17.892 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:56:17.904 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
20:56:17.904 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 345(Integer) 
20:56:17.908 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
20:56:17.908 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 삭제 성공! 
20:56:18.672 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:56:18.673 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:56:18.684 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:56:18.684 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 130 
20:56:18.684 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:56:18.685 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:56:18.685 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:56:18.687 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:56:18.687 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:56:18.687 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy 
20:56:18.687 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:56:18.687 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:56:18.687 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:56:18.687 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:56:18.687 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:56:18.687 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:56:18.687 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:56:18.687 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:56:18.687 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:56:18.687 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:56:18.688 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:56:18.688 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:56:18.688 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:56:18.688 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:56:18.688 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:56:18.688 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:56:18.688 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:56:18.688 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:56:18.688 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:56:18.688 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
20:56:20.096 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:20.098 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 346(Integer) 
20:56:20.102 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:56:20.102 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy, 311, 3, 1 
20:56:20.103 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:56:20.103 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:56:20.104 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:56:20.108 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:56:20.108 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:56:20.108 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:56:20.109 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:56:20.869 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:20.870 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 346(Integer) 
20:56:20.877 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:56:20.878 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 346, 원글#3의 답글#3, 답글3, 박토미, 2023-06-21 19:52:47, tommy, 311, 3, 1 
20:56:20.880 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:56:20.881 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
20:56:20.881 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 346(Integer) 
20:56:20.886 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
20:56:20.886 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 삭제 성공! 
20:56:21.780 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:56:21.781 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:56:21.791 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:56:21.792 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 129 
20:56:21.792 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:56:21.792 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:56:21.792 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:56:21.794 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:56:21.794 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:56:21.794 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy 
20:56:21.794 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:56:21.794 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:56:21.794 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:56:21.794 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:56:21.794 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:56:21.794 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:56:21.794 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:56:21.794 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:56:21.794 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:56:21.795 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:56:21.795 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:56:21.795 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:56:21.795 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:56:21.795 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:56:21.795 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:56:21.795 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:56:21.795 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:56:21.795 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
20:56:21.795 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:56:21.795 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
20:56:23.997 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:23.998 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 347(Integer) 
20:56:24.000 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:56:24.001 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy, 311, 3, 1 
20:56:24.001 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:56:24.002 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:56:24.002 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:56:24.008 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:56:24.009 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:56:24.009 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:56:24.009 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:56:25.007 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:25.007 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 347(Integer) 
20:56:25.010 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:56:25.011 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 347, 원글#3의 답글#4, 답글4, 박토미, 2023-06-21 19:53:28, tommy, 311, 3, 1 
20:56:25.013 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:56:25.014 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
20:56:25.015 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 347(Integer) 
20:56:25.019 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
20:56:25.020 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 삭제 성공! 
20:56:25.841 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:56:25.841 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:56:25.853 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:56:25.853 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 128 
20:56:25.853 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:56:25.855 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:56:25.857 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:56:25.866 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:56:25.866 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:56:25.866 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:56:25.866 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:56:25.866 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:56:25.866 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:56:25.866 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:56:25.866 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:56:25.866 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:56:25.866 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:56:25.867 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:56:25.867 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:56:25.867 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:56:25.867 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:56:25.867 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:56:25.867 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:56:25.867 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
20:56:25.867 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:56:25.867 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:56:25.867 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:56:25.867 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
20:56:25.867 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:56:25.867 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
20:56:26.830 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:26.831 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
20:56:26.838 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:56:26.839 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
20:56:26.840 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:56:26.841 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:56:26.842 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:56:26.844 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:56:26.844 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:56:26.844 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:56:26.844 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:56:37.175 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:56:37.176 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:56:37.185 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:56:37.185 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:56:37.186 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:56:37.186 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:56:37.187 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#1(String), 답글1(String), 박토미(String), tommy(String), 311(Integer), 2(Integer), 1(Integer) 
20:56:37.192 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:56:37.192 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = b_order + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:56:37.193 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 311(Integer), 2(Integer) 
20:56:37.195 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 0 
20:56:38.113 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:56:38.113 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:56:38.128 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:56:38.128 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 129 
20:56:38.128 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:56:38.129 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:56:38.129 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:56:38.131 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:56:38.131 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:56:38.131 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
20:56:38.131 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:56:38.131 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:56:38.132 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:56:38.132 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:56:38.132 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:56:38.132 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:56:38.132 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:56:38.132 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:56:38.132 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:56:38.132 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:56:38.132 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:56:38.132 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:56:38.132 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:56:38.132 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:56:38.133 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:56:38.133 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:56:38.133 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:56:38.133 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
20:56:38.133 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:56:38.133 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
20:56:39.298 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:39.298 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
20:56:39.299 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:56:39.300 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
20:56:39.300 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:56:39.301 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:56:39.302 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:56:39.304 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:56:39.304 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:56:39.304 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:56:39.304 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:56:47.057 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:56:47.059 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:56:47.068 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:56:47.069 TRACE --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:56:47.069 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:56:47.070 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:56:47.070 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#2(String), 답글2(String), 박토미(String), tommy(String), 311(Integer), 2(Integer), 1(Integer) 
20:56:47.074 DEBUG --- [http-nio-8080-exec-5] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:56:47.074 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = b_order + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:56:47.075 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 311(Integer), 2(Integer) 
20:56:47.076 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 1 
20:56:48.454 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:56:48.455 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:56:48.469 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:56:48.469 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 130 
20:56:48.469 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:56:48.469 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:56:48.470 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:56:48.471 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:56:48.471 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:56:48.471 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
20:56:48.471 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
20:56:48.471 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:56:48.471 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:56:48.471 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:56:48.471 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:56:48.471 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:56:48.472 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:56:48.472 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:56:48.472 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:56:48.472 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:56:48.472 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:56:48.472 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:56:48.472 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:56:48.472 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:56:48.472 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:56:48.472 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
20:56:48.472 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:56:48.472 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:56:48.472 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:56:48.472 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
20:56:49.939 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:56:49.941 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
20:56:49.951 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:56:49.951 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
20:56:49.952 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:56:49.953 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:56:49.953 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:56:49.955 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:56:49.955 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:56:49.955 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:56:49.956 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:56:58.964 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:56:58.966 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:56:58.971 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:56:58.971 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:56:58.973 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:56:58.974 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:56:58.977 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#3(String), 답글3(String), 박토미(String), tommy(String), 311(Integer), 2(Integer), 1(Integer) 
20:56:58.984 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:56:58.985 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = b_order + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:56:58.985 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 311(Integer), 2(Integer) 
20:56:58.987 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 2 
20:56:59.752 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:56:59.757 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:56:59.778 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:56:59.778 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 131 
20:56:59.778 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:56:59.779 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:56:59.779 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:56:59.780 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:56:59.781 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:56:59.781 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:56:59.781 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:56:59.781 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:56:59.781 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:56:59.781 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:56:59.781 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
20:56:59.781 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:56:59.781 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
20:57:02.080 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:57:02.081 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
20:57:02.084 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:57:02.091 TRACE --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
20:57:02.093 DEBUG --- [http-nio-8080-exec-2] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:57:02.093 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:57:02.093 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:57:02.094 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:57:02.094 TRACE --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:57:02.094 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:57:02.095 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:57:08.655 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:57:08.655 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:57:08.659 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:57:08.660 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:57:08.660 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:57:08.662 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:57:08.663 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#4(String), 답글4(String), 박토미(String), tommy(String), 311(Integer), 2(Integer), 1(Integer) 
20:57:08.667 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:57:08.668 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = b_order + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:57:08.668 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 311(Integer), 2(Integer) 
20:57:08.670 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 3 
20:57:09.400 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:57:09.401 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:57:09.417 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:57:09.418 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 132 
20:57:09.418 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:57:09.419 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:57:09.420 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:57:09.424 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:57:09.424 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:57:09.424 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
20:57:09.424 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
20:57:09.424 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
20:57:09.425 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
20:57:09.425 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:57:09.425 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:57:09.425 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:57:09.425 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:57:09.425 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:57:09.425 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:57:09.425 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:57:09.425 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:57:09.425 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:57:09.425 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:57:09.426 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:57:09.426 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:57:09.426 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:57:09.426 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:57:09.426 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
20:57:09.426 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:57:09.426 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
20:57:10.505 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:57:10.506 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
20:57:10.509 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:57:10.510 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
20:57:10.511 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:57:10.511 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:57:10.511 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:57:10.514 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:57:10.515 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:57:10.515 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:57:10.515 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:57:19.764 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:57:19.765 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:57:19.768 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:57:19.768 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:57:19.768 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:57:19.768 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:57:19.769 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 원글#3의 답글#5(String), 답글5(String), 박토미(String), tommy(String), 311(Integer), 2(Integer), 1(Integer) 
20:57:19.775 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:57:19.775 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = b_order + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:57:19.775 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 311(Integer), 2(Integer) 
20:57:19.782 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 4 
20:57:20.898 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:57:20.899 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:57:20.908 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:57:20.908 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:57:20.908 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:57:20.909 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:57:20.910 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:57:20.913 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:57:20.913 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:57:20.913 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
20:57:20.913 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
20:57:20.913 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
20:57:20.913 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
20:57:20.913 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
20:57:20.913 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:57:20.913 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:57:20.914 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:57:20.914 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:57:20.914 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:57:20.914 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:57:20.914 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:57:20.914 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:57:20.914 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:57:20.914 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:57:20.914 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:57:20.914 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:57:20.914 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:57:20.914 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:57:20.914 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:57:20.914 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
20:57:23.131 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:57:23.132 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 364(Integer) 
20:57:23.144 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:57:23.144 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy, 311, 2, 1 
20:57:23.144 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:57:23.145 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:57:23.145 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:57:23.147 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:57:23.147 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:57:23.147 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:57:23.147 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:57:26.853 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:57:26.854 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:57:26.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:57:26.874 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:57:26.874 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:57:26.875 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:57:26.875 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:57:26.876 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:57:26.876 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:57:26.876 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
20:57:26.876 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
20:57:26.876 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
20:57:26.876 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
20:57:26.876 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
20:57:26.876 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:57:26.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:57:26.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:57:26.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:57:26.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:57:26.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:57:26.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:57:26.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:57:26.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:57:26.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:57:26.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:57:26.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:57:26.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:57:26.877 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:57:26.877 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:57:26.877 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
20:57:28.081 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:57:28.082 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 363(Integer) 
20:57:28.084 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:57:28.091 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy, 311, 3, 1 
20:57:28.092 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:57:28.094 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:57:28.095 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:57:28.097 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:57:28.097 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:57:28.097 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:57:28.098 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:57:30.104 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:57:30.105 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:57:30.116 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:57:30.116 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
20:57:30.116 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:57:30.116 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:57:30.116 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:57:30.118 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:57:30.118 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:57:30.118 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
20:57:30.118 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
20:57:30.118 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
20:57:30.118 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
20:57:30.118 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
20:57:30.118 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:57:30.118 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:57:30.119 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:57:30.119 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:57:30.119 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:57:30.119 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:57:30.119 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:57:30.119 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:57:30.119 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:57:30.119 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:57:30.119 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:57:30.119 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:57:30.119 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:57:30.119 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
20:57:30.119 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:57:30.119 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
20:57:32.739 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:57:32.740 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 363(Integer) 
20:57:32.742 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:57:32.743 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy, 311, 3, 1 
20:57:32.744 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:57:32.745 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:57:32.745 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:57:32.749 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:57:32.749 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:57:32.749 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:57:32.749 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:57:41.631 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:57:41.633 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:57:41.641 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:57:41.641 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:57:41.642 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:57:41.643 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:57:41.646 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 답글#4의 답답글#1(String), 답답글1(String), 박토미(String), tommy(String), 311(Integer), 4(Integer), 2(Integer) 
20:57:41.650 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:57:41.650 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = b_order + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:57:41.650 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 311(Integer), 4(Integer) 
20:57:41.653 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 3 
20:57:42.580 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:57:42.581 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:57:42.591 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:57:42.591 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 134 
20:57:42.591 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:57:42.592 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:57:42.592 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:57:42.594 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:57:42.599 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:57:42.599 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
20:57:42.599 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
20:57:42.600 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
20:57:42.600 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
20:57:42.600 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
20:57:42.600 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
20:57:42.600 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:57:42.600 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:57:42.600 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:57:42.600 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:57:42.600 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:57:42.600 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:57:42.601 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:57:42.601 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:57:42.601 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:57:42.601 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:57:42.601 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:57:42.601 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:57:42.601 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:57:42.601 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:57:42.603 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
20:57:46.231 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:57:46.231 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 365(Integer) 
20:57:46.238 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:57:46.238 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy, 311, 4, 2 
20:57:46.238 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:57:46.239 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:57:46.239 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:57:46.241 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:57:46.241 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:57:46.242 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:57:46.242 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:57:50.085 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:57:50.085 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:57:50.101 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:57:50.101 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 134 
20:57:50.101 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:57:50.102 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:57:50.103 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:57:50.107 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:57:50.107 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:57:50.107 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
20:57:50.107 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
20:57:50.107 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
20:57:50.107 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:57:50.108 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:57:50.109 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
20:57:50.109 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:57:50.109 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
20:57:53.264 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
20:57:53.265 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 363(Integer) 
20:57:53.268 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
20:57:53.268 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy, 311, 3, 1 
20:57:53.269 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
20:57:53.269 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
20:57:53.270 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
20:57:53.272 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
20:57:53.273 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
20:57:53.275 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
20:57:53.276 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
20:58:03.115 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==>  Preparing: SELECT u_id as username, u_password as password, u_name as uName, u_isAccountNonExpired as isAccountNonExpired, u_isAccountNonLocked as isAccountNonLocked, u_isCredentialNonExpired as isCredentialsNonExpired, u_isEnabled as isEnabled FROM lc_user WHERE 1=1 AND u_id = ? 
20:58:03.115 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : ==> Parameters: tommy(String) 
20:58:03.116 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==    Columns: username, password, uName, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled 
20:58:03.117 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==        Row: tommy, $2a$10$52Msk4oO1Q6yhcwJlpcJ1ut/Vcru3IMg4EWNrm4c.Z/.ML7s.mQcC, 박토미, 1, 1, 1, 1 
20:58:03.117 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.UserMapper.readUser : <==      Total: 1 
20:58:03.117 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==>  Preparing: INSERT INTO lc_board ( b_title, b_content, b_writer, b_datetime, u_id, b_group, b_order, b_depth ) VALUES ( ?, ?, ?, now(), ?, ?, ?, ? ) 
20:58:03.117 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : ==> Parameters: 답글#4의 답답글#2(String), 답답글#2(String), 박토미(String), tommy(String), 311(Integer), 4(Integer), 2(Integer) 
20:58:03.122 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.replyTo : <==    Updates: 1 
20:58:03.124 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==>  Preparing: UPDATE lc_board SET b_order = b_order + 1 WHERE b_group = ? AND b_order >= ? AND b_id != last_insert_id(); 
20:58:03.124 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : ==> Parameters: 311(Integer), 4(Integer) 
20:58:03.126 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.updateBOrder : <==    Updates: 4 
20:58:04.015 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
20:58:04.016 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
20:58:04.026 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
20:58:04.026 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
20:58:04.027 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
20:58:04.028 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
20:58:04.028 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
20:58:04.037 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
20:58:04.037 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
20:58:04.038 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
20:58:04.038 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
20:58:04.038 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
20:58:04.038 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
20:58:04.038 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
20:58:04.038 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
20:58:04.038 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
20:58:04.038 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
20:58:04.038 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
20:58:04.038 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
20:58:04.038 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
20:58:04.038 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
20:58:04.039 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
20:58:04.039 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
20:58:04.039 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
20:58:04.039 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
20:58:04.039 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
20:58:04.039 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
20:58:04.039 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
20:58:04.039 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
20:58:04.039 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
21:01:45.117 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:01:45.120 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 364(Integer) 
21:01:45.123 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:01:45.124 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy, 311, 2, 1 
21:01:45.124 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:01:45.125 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
21:01:45.126 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
21:01:45.130 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
21:01:45.130 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
21:01:45.130 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
21:01:45.130 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
21:01:46.172 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:01:46.172 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:01:46.191 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:01:46.192 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:01:46.192 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:01:46.193 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:01:46.193 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:01:46.198 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:01:46.198 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:01:46.199 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:01:46.199 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:01:46.199 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:01:46.199 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:01:46.199 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:01:46.199 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:01:46.199 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:01:46.200 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:01:46.200 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:01:46.200 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:01:46.200 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:01:46.200 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:01:46.200 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:01:46.200 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:01:46.200 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:01:46.201 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:01:46.201 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:01:46.201 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:01:46.201 TRACE --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:01:46.201 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:01:46.201 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : list 불러오기 성공! 
21:01:47.447 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:01:47.448 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 311(Integer) 
21:01:47.463 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:01:47.463 TRACE --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy, 311, 1, 0 
21:01:47.464 DEBUG --- [http-nio-8080-exec-9] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:01:47.464 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
21:01:47.464 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
21:01:47.466 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
21:01:47.466 TRACE --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
21:01:47.466 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
21:01:47.466 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
21:01:48.351 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:01:48.352 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:01:48.362 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:01:48.362 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:01:48.363 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:01:48.365 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:01:48.365 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:01:48.368 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:01:48.369 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:01:48.370 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:01:48.370 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:01:48.370 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:01:48.371 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:01:48.371 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:01:48.371 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:01:48.371 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:01:48.371 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:01:48.371 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:01:48.371 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:01:48.371 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:01:48.371 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:01:48.371 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:01:48.371 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:01:48.371 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:01:48.372 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:01:48.391 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:01:48.391 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:01:48.391 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:01:48.391 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:01:48.392 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
21:01:49.697 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:01:49.698 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 366(Integer) 
21:01:49.701 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:01:49.701 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy, 311, 4, 2 
21:01:49.701 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:01:49.702 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
21:01:49.708 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
21:01:49.712 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
21:01:49.713 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
21:01:49.713 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
21:01:49.713 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
21:01:50.752 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:01:50.752 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:01:50.762 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:01:50.764 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:01:50.765 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:01:50.766 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:01:50.768 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:01:50.773 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:01:50.773 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:01:50.773 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:01:50.774 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:01:50.775 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:01:50.775 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:01:50.775 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:01:50.775 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:01:50.775 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:01:50.775 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
21:01:52.682 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:01:52.683 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 361(Integer) 
21:01:52.688 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:01:52.688 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy, 311, 7, 1 
21:01:52.689 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:01:52.689 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
21:01:52.689 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
21:01:52.691 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
21:01:52.692 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
21:01:52.692 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
21:01:52.692 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
21:01:53.453 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:01:53.453 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:01:53.462 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:01:53.462 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:01:53.463 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:01:53.465 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:01:53.467 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:01:53.473 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:01:53.473 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:01:53.474 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:01:53.474 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:01:53.474 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:01:53.474 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:01:53.474 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:01:53.474 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:01:53.474 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:01:53.474 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:01:53.474 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:01:53.474 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:01:53.474 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:01:53.474 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:01:53.474 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:01:53.475 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:01:53.475 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:01:53.475 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:01:53.475 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:01:53.475 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:01:53.475 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:01:53.475 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:01:53.475 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
21:01:56.890 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:01:56.891 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 355(Integer) 
21:01:56.902 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:01:56.902 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy, 310, 6, 1 
21:01:56.902 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:01:56.903 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
21:01:56.903 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
21:01:56.905 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
21:01:56.905 TRACE --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
21:01:56.905 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
21:01:56.906 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
21:01:57.417 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:01:57.417 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:01:57.427 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:01:57.427 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:01:57.427 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:01:57.429 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:01:57.429 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:01:57.432 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:01:57.433 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:01:57.433 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:01:57.433 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:01:57.433 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:01:57.433 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:01:57.433 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:01:57.433 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:01:57.433 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:01:57.434 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:01:57.434 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:01:57.434 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:01:57.434 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:01:57.434 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:01:57.434 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:01:57.434 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:01:57.434 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:01:57.434 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:01:57.434 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:01:57.434 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:01:57.434 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:01:57.435 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:01:57.435 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
21:02:00.449 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:02:00.449 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:02:00.456 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:02:00.456 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:02:00.456 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:02:00.457 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:02:00.457 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 40(Integer), 20(Integer) 
21:02:00.458 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:02:00.459 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 155, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:00.459 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 156, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:00.459 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 157, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:00.459 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 159, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:00.459 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 160, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:00.459 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 161, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:00.459 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 162, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:00.459 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 164, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:00.460 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 165, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:00.460 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 166, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:00.460 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 167, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:00.460 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 169, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:00.460 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 170, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:00.460 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 171, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:00.460 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 172, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:00.460 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 173, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
21:02:00.460 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 175, bList test, test, 김해피, 2023-06-12 23:50:34, null 
21:02:00.460 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 182, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:00.460 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 183, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:00.460 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 184, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:00.460 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:02:00.461 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
21:02:01.580 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:02:01.582 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 156(Integer) 
21:02:01.584 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:02:01.584 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 156, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null, null, null, null 
21:02:01.585 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:02:01.585 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
21:02:01.585 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
21:02:01.592 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
21:02:01.592 TRACE --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
21:02:01.592 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
21:02:01.592 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
21:02:04.000 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:02:04.000 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:02:04.011 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:02:04.011 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:02:04.011 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:02:04.012 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:02:04.012 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:02:04.013 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:02:04.013 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:02:04.013 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:02:04.013 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:02:04.013 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:02:04.013 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:02:04.013 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:02:04.014 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:02:04.014 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:02:04.015 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
21:02:07.837 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:02:07.838 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:02:07.853 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:02:07.853 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:02:07.853 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:02:07.854 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:02:07.854 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 40(Integer), 20(Integer) 
21:02:07.855 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 155, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 156, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 157, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 159, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 160, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 161, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 162, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 164, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 165, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 166, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 167, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 169, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 170, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 171, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:07.856 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 172, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:07.857 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 173, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
21:02:07.857 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 175, bList test, test, 김해피, 2023-06-12 23:50:34, null 
21:02:07.857 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 182, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:07.857 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 183, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:07.857 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 184, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:07.857 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:02:07.857 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
21:02:09.138 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:02:09.138 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 156(Integer) 
21:02:09.143 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:02:09.143 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 156, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null, null, null, null 
21:02:09.144 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:02:09.147 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
21:02:09.148 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
21:02:09.151 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
21:02:09.152 TRACE --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
21:02:09.152 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
21:02:09.152 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
21:02:09.705 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:02:09.706 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:02:09.717 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:02:09.717 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:02:09.718 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:02:09.720 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:02:09.720 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 40(Integer), 20(Integer) 
21:02:09.723 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:02:09.723 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 155, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:09.723 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 156, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:09.724 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 157, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:09.724 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 159, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:09.724 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 160, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:09.724 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 161, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:09.724 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 162, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:09.725 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 164, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:09.725 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 165, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:09.725 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 166, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:09.725 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 167, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:09.725 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 169, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:09.725 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 170, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:09.725 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 171, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:09.726 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 172, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:09.726 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 173, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
21:02:09.726 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 175, bList test, test, 김해피, 2023-06-12 23:50:34, null 
21:02:09.726 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 182, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:09.726 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 183, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:09.726 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 184, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:09.726 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:02:09.726 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
21:02:12.613 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:02:12.613 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 171(Integer) 
21:02:12.616 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:02:12.617 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 171, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null, null, null, null 
21:02:12.619 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:02:12.619 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
21:02:12.619 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
21:02:12.623 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
21:02:12.623 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
21:02:12.623 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
21:02:12.623 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
21:02:14.267 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:02:14.267 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:02:14.277 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:02:14.277 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:02:14.278 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:02:14.278 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:02:14.280 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 40(Integer), 20(Integer) 
21:02:14.283 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:02:14.283 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 155, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:14.283 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 156, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:14.283 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 157, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 159, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 160, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 161, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 162, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 164, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 165, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 166, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 167, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 169, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 170, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 171, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 172, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 173, paging, paging can do this, 김해피, 2023-06-12 22:09:20, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 175, bList test, test, 김해피, 2023-06-12 23:50:34, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 182, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:02:14.284 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 183, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:02:14.285 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 184, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:02:14.285 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:02:14.285 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
21:02:16.998 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:02:16.999 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:02:17.009 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:02:17.009 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:02:17.009 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:02:17.010 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:02:17.011 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:02:17.012 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:02:17.012 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:02:17.012 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:02:17.012 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:02:17.012 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:02:17.012 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:02:17.012 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:02:17.013 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:02:17.013 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:02:17.013 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
21:11:33.959 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:11:33.961 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:11:33.974 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:11:33.974 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:11:33.974 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:11:33.974 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:11:33.975 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:11:33.976 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:11:33.977 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:11:33.977 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:11:33.977 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:11:33.977 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:11:33.977 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:11:33.977 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:11:33.977 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:11:33.977 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:11:33.977 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
21:11:44.485 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:11:44.486 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:11:44.503 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:11:44.503 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:11:44.503 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:11:44.504 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:11:44.504 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:11:44.505 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:11:44.506 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:11:44.506 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:11:44.506 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:11:44.506 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:11:44.506 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:11:44.506 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:11:44.506 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:11:44.506 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:11:44.506 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
21:12:01.880 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:12:01.881 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:12:01.897 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:12:01.897 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:12:01.897 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:12:01.897 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:12:01.898 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:12:01.898 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:12:01.898 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:12:01.899 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:12:01.899 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:12:01.899 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
21:12:52.938 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:12:52.939 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:12:52.951 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:12:52.952 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:12:52.952 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:12:52.953 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:12:52.953 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:12:52.956 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:12:52.956 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:12:52.957 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:12:52.957 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:12:52.957 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:12:52.957 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:12:52.960 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:12:52.961 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:12:52.961 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:12:52.961 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:12:52.961 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:12:52.962 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:12:52.962 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:12:52.962 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:12:52.962 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:12:52.962 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:12:52.962 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:12:52.962 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:12:52.962 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:12:52.962 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:12:52.962 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:12:52.962 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:12:52.963 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
21:13:38.361 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:13:38.361 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:13:38.366 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:13:38.366 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:13:38.366 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:13:38.366 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:13:38.366 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:13:38.367 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:13:38.368 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:13:38.368 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:13:38.368 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:13:38.368 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:13:38.368 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:13:38.368 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:13:38.368 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:13:38.368 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:13:38.368 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:13:38.368 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:13:38.368 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:13:38.368 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:13:38.369 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:13:38.369 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:13:38.369 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:13:38.369 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:13:38.369 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:13:38.369 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:13:38.369 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:13:38.369 TRACE --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:13:38.369 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:13:38.369 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : list 불러오기 성공! 
21:13:57.900 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:13:57.900 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:13:57.913 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:13:57.913 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:13:57.913 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:13:57.914 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:13:57.915 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:13:57.917 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:13:57.917 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:13:57.917 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:13:57.918 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:13:57.918 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:13:57.919 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
21:14:19.383 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:14:19.384 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:14:19.392 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:14:19.393 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:14:19.393 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:14:19.393 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:14:19.394 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:14:19.396 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:14:19.396 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:14:19.396 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:14:19.396 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:14:19.396 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:14:19.397 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:14:19.398 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:14:19.398 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
21:16:04.235 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:16:04.237 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:16:04.249 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:16:04.249 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:16:04.249 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:16:04.250 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:16:04.250 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:16:04.251 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:16:04.251 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:16:04.252 TRACE --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:16:04.252 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:16:04.252 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : list 불러오기 성공! 
21:16:26.404 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:16:26.406 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:16:26.418 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:16:26.418 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:16:26.418 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:16:26.420 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:16:26.420 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:16:26.423 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:16:26.424 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:16:26.424 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:16:26.424 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:16:26.424 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:16:26.424 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:16:26.425 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:16:26.425 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:16:26.425 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:16:26.425 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:16:26.425 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:16:26.426 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:16:26.426 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:16:26.426 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:16:26.426 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:16:26.426 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:16:26.426 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:16:26.426 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:16:26.426 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:16:26.426 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:16:26.426 TRACE --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:16:26.426 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:16:26.426 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : list 불러오기 성공! 
21:16:38.274 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:16:38.274 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:16:38.288 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:16:38.288 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:16:38.288 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:16:38.288 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:16:38.288 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 20(Integer), 20(Integer) 
21:16:38.289 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:16:38.290 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
21:16:38.290 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
21:16:38.290 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 299, 자 한번 더, 해보는 거야, 박토미, 2023-06-20 23:30:17, tommy 
21:16:38.290 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
21:16:38.290 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 288, 토미의 답글 테스트#3, 답글#3 사실 원글임, 박토미, 2023-06-20 23:03:42, tommy 
21:16:38.290 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 297, 봅시다, 한번, 박토미, 2023-06-20 23:20:44, tommy 
21:16:38.290 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
21:16:38.290 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 296, 그럼 이제 god, 해결해보자, 박토미, 2023-06-20 23:14:33, tommy 
21:16:38.290 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 298, 한번 더, 봅시다 ㅋ, 박토미, 2023-06-20 23:21:18, tommy 
21:16:38.290 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 294, 일단 이름 안 나오는 문제부터, 해결해보자, 박토미, 2023-06-20 23:13:19, tommy 
21:16:38.290 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 287, 토미의 답글 테스트#2, 답글#2, 박토미, 2023-06-20 23:03:29, tommy 
21:16:38.291 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 286, 토미의 답글 테스트#1, 답글#1, 박토미, 2023-06-20 23:03:01, tommy 
21:16:38.291 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 300, 테스트#1의 답글#1, ㅇ, 박토미, 2023-06-20 23:31:11, tommy 
21:16:38.291 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 285, 내 이름은, 박토미, 박토미, 2023-06-20 23:01:07, tommy 
21:16:38.291 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 283, @AuthenticationPrincial, 니가 먼데~~~, 박토미, 2023-06-20 22:56:15, tommy 
21:16:38.291 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 279, 답글 테스트#1, 6월 19일 월요일
마라샹궈 기다리는 중, 김왈, 2023-06-19 11:43:12, app 
21:16:38.291 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 278, 대망의 답글 테스트, 두구두구두구두구 배고파, 김왈, 2023-06-18 14:22:05, app 
21:16:38.291 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 137, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:16:38.291 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 139, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:16:38.291 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 98, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:16:38.291 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:16:38.291 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
21:16:40.133 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:16:40.134 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:16:40.145 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:16:40.146 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 135 
21:16:40.146 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:16:40.147 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:16:40.147 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:16:40.148 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:16:40.149 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:16:40.150 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy 
21:16:40.150 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:16:40.150 TRACE --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:16:40.150 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:16:40.150 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : list 불러오기 성공! 
21:16:42.053 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:16:42.054 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 308(Integer) 
21:16:42.061 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:16:42.062 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy, 303, 2, 1 
21:16:42.062 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:16:42.062 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
21:16:42.063 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
21:16:42.065 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
21:16:42.065 TRACE --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
21:16:42.065 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
21:16:42.065 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
21:16:42.931 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:16:42.933 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 308(Integer) 
21:16:42.937 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:16:42.938 TRACE --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 308, 부모글2의 자식글4, 부2자4, 박토미, 2023-06-20 23:48:32, tommy, 303, 2, 1 
21:16:42.938 DEBUG --- [http-nio-8080-exec-6] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:16:42.939 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
21:16:42.939 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 308(Integer) 
21:16:42.948 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
21:16:42.949 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : 게시글 삭제 성공! 
21:16:44.631 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:16:44.631 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:16:44.645 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:16:44.645 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 134 
21:16:44.645 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:16:44.646 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:16:44.646 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:16:44.647 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:16:44.647 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:16:44.647 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:16:44.648 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
21:16:44.649 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:16:44.649 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
21:16:46.791 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:16:46.792 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 306(Integer) 
21:16:46.796 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:16:46.796 TRACE --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy, 303, 3, 1 
21:16:46.797 DEBUG --- [http-nio-8080-exec-7] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:16:46.797 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
21:16:46.798 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
21:16:46.799 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
21:16:46.799 TRACE --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
21:16:46.800 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
21:16:46.800 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
21:16:47.725 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:16:47.726 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 306(Integer) 
21:16:47.730 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:16:47.730 TRACE --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 306, 부모글2의 자식글2, 부2자2, 박토미, 2023-06-20 23:47:03, tommy, 303, 3, 1 
21:16:47.730 DEBUG --- [http-nio-8080-exec-8] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:16:47.731 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
21:16:47.731 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 306(Integer) 
21:16:47.736 DEBUG --- [http-nio-8080-exec-8] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
21:16:47.737 INFO  --- [http-nio-8080-exec-8] c.l.e.controller.BoardController : 게시글 삭제 성공! 
21:16:49.251 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:16:49.253 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:16:49.262 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:16:49.262 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 133 
21:16:49.262 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:16:49.263 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:16:49.263 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:16:49.265 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:16:49.265 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:16:49.265 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:16:49.265 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:16:49.265 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:16:49.266 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:16:49.266 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:16:49.266 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:16:49.266 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:16:49.266 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:16:49.266 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:16:49.266 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:16:49.266 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:16:49.266 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:16:49.266 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:16:49.267 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:16:49.267 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:16:49.267 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:16:49.267 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy 
21:16:49.267 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
21:16:49.267 TRACE --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
21:16:49.267 DEBUG --- [http-nio-8080-exec-9] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:16:49.267 INFO  --- [http-nio-8080-exec-9] c.l.e.controller.BoardController : list 불러오기 성공! 
21:16:50.854 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:16:50.857 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 307(Integer) 
21:16:50.863 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:16:50.866 TRACE --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy, 303, 3, 1 
21:16:50.866 DEBUG --- [http-nio-8080-exec-10] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:16:50.868 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
21:16:50.868 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
21:16:50.870 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
21:16:50.870 TRACE --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
21:16:50.870 DEBUG --- [http-nio-8080-exec-10] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
21:16:50.871 INFO  --- [http-nio-8080-exec-10] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
21:16:51.690 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:16:51.691 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 307(Integer) 
21:16:51.694 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:16:51.695 TRACE --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 307, 부모글2의 자식글3, 부2자3, 박토미, 2023-06-20 23:47:33, tommy, 303, 3, 1 
21:16:51.695 DEBUG --- [http-nio-8080-exec-1] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:16:51.696 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
21:16:51.696 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 307(Integer) 
21:16:51.703 DEBUG --- [http-nio-8080-exec-1] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
21:16:51.703 INFO  --- [http-nio-8080-exec-1] c.l.e.controller.BoardController : 게시글 삭제 성공! 
21:16:52.990 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:16:52.991 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:16:53.006 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:16:53.006 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 132 
21:16:53.006 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:16:53.007 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:16:53.008 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:16:53.010 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:16:53.010 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:16:53.011 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:16:53.011 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:16:53.011 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:16:53.011 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:16:53.011 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:16:53.011 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:16:53.012 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:16:53.012 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:16:53.012 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:16:53.012 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:16:53.012 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:16:53.012 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:16:53.012 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:16:53.012 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:16:53.012 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:16:53.012 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:16:53.012 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy 
21:16:53.012 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
21:16:53.012 TRACE --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
21:16:53.013 DEBUG --- [http-nio-8080-exec-2] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:16:53.019 INFO  --- [http-nio-8080-exec-2] c.l.e.controller.BoardController : list 불러오기 성공! 
21:16:54.413 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:16:54.414 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 305(Integer) 
21:16:54.417 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:16:54.418 TRACE --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy, 303, 3, 1 
21:16:54.419 DEBUG --- [http-nio-8080-exec-3] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:16:54.420 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==>  Preparing: SELECT u_auth FROM lc_auth WHERE 1=1 AND u_id = ? 
21:16:54.421 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : ==> Parameters: tommy(String) 
21:16:54.425 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==    Columns: u_auth 
21:16:54.425 TRACE --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==        Row: ROLE_USER 
21:16:54.425 DEBUG --- [http-nio-8080-exec-3] c.l.e.m.UserMapper.readAuthorities : <==      Total: 1 
21:16:54.425 INFO  --- [http-nio-8080-exec-3] c.l.e.controller.BoardController : 게시글 불러오기 성공!! 
21:16:55.343 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username, b_group as bGroup, b_order as bOrder, b_depth as bDepth FROM lc_board WHERE b_id = ? 
21:16:55.344 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : ==> Parameters: 305(Integer) 
21:16:55.347 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username, bGroup, bOrder, bDepth 
21:16:55.347 TRACE --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==        Row: 305, 부모글2의 자식글1, 부2자1, 박토미, 2023-06-20 23:46:41, tommy, 303, 3, 1 
21:16:55.347 DEBUG --- [http-nio-8080-exec-4] c.l.e.mapper.BoardMapper.readBoard : <==      Total: 1 
21:16:55.348 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.deleteBoard : ==>  Preparing: DELETE FROM lc_board WHERE b_id = ? 
21:16:55.348 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.deleteBoard : ==> Parameters: 305(Integer) 
21:16:55.358 DEBUG --- [http-nio-8080-exec-4] c.l.e.m.BoardMapper.deleteBoard : <==    Updates: 1 
21:16:55.359 INFO  --- [http-nio-8080-exec-4] c.l.e.controller.BoardController : 게시글 삭제 성공! 
21:16:56.307 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:16:56.308 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:16:56.322 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:16:56.322 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 131 
21:16:56.322 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:16:56.324 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:16:56.325 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:16:56.326 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:16:56.327 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:16:56.329 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:16:56.329 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:16:56.330 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:16:56.330 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:16:56.330 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:16:56.330 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:16:56.330 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:16:56.330 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:16:56.330 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:16:56.330 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:16:56.331 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:16:56.331 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:16:56.331 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:16:56.331 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:16:56.331 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:16:56.331 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:16:56.331 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
21:16:56.331 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
21:16:56.331 TRACE --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
21:16:56.332 DEBUG --- [http-nio-8080-exec-6] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:16:56.332 INFO  --- [http-nio-8080-exec-6] c.l.e.controller.BoardController : list 불러오기 성공! 
21:16:59.380 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:16:59.380 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:16:59.389 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:16:59.390 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 131 
21:16:59.390 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:16:59.391 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:16:59.391 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 100(Integer), 20(Integer) 
21:16:59.393 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:16:59.393 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 194, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:16:59.393 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 195, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:16:59.393 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 197, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 198, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 199, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 200, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 202, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 203, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 204, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 205, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 207, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 208, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 209, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 210, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 212, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 213, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 214, gpt가 알려준 방법을 응용해보았다, 될까?, 김해피, 2023-06-12 22:06:09, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 215, logger test, gogo, 김해피, 2023-06-12 22:09:20, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 217, 작성자 나오는지 테스트, 렛츠고, ap, 2023-06-12 21:59:19, null 
21:16:59.394 TRACE --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 218, 이게 맞나, 되면 좋긴 한데 너무 복잡하다고 생각해 ㅋ, 김해피, 2023-06-12 22:04:10, null 
21:16:59.395 DEBUG --- [http-nio-8080-exec-5] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:16:59.395 INFO  --- [http-nio-8080-exec-5] c.l.e.controller.BoardController : list 불러오기 성공! 
21:17:04.166 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==>  Preparing: SELECT count(*) FROM lc_board 
21:17:04.166 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : ==> Parameters:  
21:17:04.181 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==    Columns: count(*) 
21:17:04.182 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==        Row: 131 
21:17:04.182 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.boardCountAll : <==      Total: 1 
21:17:04.184 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==>  Preparing: SELECT b_id as bId, b_title as bTitle, b_content as bContent, b_writer as bWriter, b_datetime as bDateTime, u_id as username FROM lc_board ORDER BY b_group desc, b_order asc LIMIT ?,? 
21:17:04.184 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : ==> Parameters: 0(Integer), 20(Integer) 
21:17:04.187 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==    Columns: bId, bTitle, bContent, bWriter, bDateTime, username 
21:17:04.187 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 311, 원글#3, 원글#3, 박토미, 2023-06-20 23:55:20, tommy 
21:17:04.188 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 364, 원글#3의 답글#5, 답글5, 박토미, 2023-06-22 20:57:19, tommy 
21:17:04.188 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 363, 원글#3의 답글#4, 답글4, 박토미, 2023-06-22 20:57:08, tommy 
21:17:04.188 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 366, 답글#4의 답답글#2, 답답글#2, 박토미, 2023-06-22 20:58:03, tommy 
21:17:04.188 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 365, 답글#4의 답답글#1, 답답글1, 박토미, 2023-06-22 20:57:41, tommy 
21:17:04.188 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 362, 원글#3의 답글#3, 답글3, 박토미, 2023-06-22 20:56:58, tommy 
21:17:04.188 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 361, 원글#3의 답글#2, 답글2, 박토미, 2023-06-22 20:56:47, tommy 
21:17:04.188 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 360, 원글#3의 답글#1, 답글1, 박토미, 2023-06-22 20:56:37, tommy 
21:17:04.188 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 310, 원글#2, 원글#2, 박토미, 2023-06-20 23:55:11, tommy 
21:17:04.188 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 359, 원글#2의 답글#5, 답글5, 박토미, 2023-06-21 20:18:46, tommy 
21:17:04.188 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 358, 원글#2의 답글#4, 답글4, 박토미, 2023-06-21 20:18:34, tommy 
21:17:04.188 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 357, 원글#2의 답글#3, 답글3, 박토미, 2023-06-21 20:18:03, tommy 
21:17:04.189 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 356, 원글#2의 답글#2, 답글2, 박토미, 2023-06-21 20:17:52, tommy 
21:17:04.189 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 355, 원글#2의 답글#1, 답글1, 박토미, 2023-06-21 20:17:43, tommy 
21:17:04.189 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 309, 원글#1, 원글#1, 박토미, 2023-06-20 23:55:02, tommy 
21:17:04.189 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 304, 부모글3, 3, 박토미, 2023-06-20 23:46:16, tommy 
21:17:04.189 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 303, 부모글2, ㄴ, 박토미, 2023-06-20 23:46:08, tommy 
21:17:04.189 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 302, 부모글1, ㅇ, 박토미, 2023-06-20 23:45:59, tommy 
21:17:04.189 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 301, 테스트#3의 답글#1, ㅇ, 박토미, 2023-06-20 23:32:57, tommy 
21:17:04.189 TRACE --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==        Row: 295, 해결이 됐군, ㅋ, 박토미, 2023-06-20 23:13:29, tommy 
21:17:04.189 DEBUG --- [http-nio-8080-exec-7] c.l.e.m.BoardMapper.selectBoardList : <==      Total: 20 
21:17:04.189 INFO  --- [http-nio-8080-exec-7] c.l.e.controller.BoardController : list 불러오기 성공! 
21:17:11.191 WARN  --- [RMI TCP Connection(44)-127.0.0.1] o.a.c.loader.WebappClassLoaderBase : The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.5/java.lang.Thread.run(Thread.java:833) 
